{"version":3,"file":"index-6ff48a10.js","sources":["../../src/App.vue","../../src/services/socket.ts","../../src/services/rtc-configurations.ts","../../src/services/webrtc.ts","../../src/services/storage.ts","../../src/services/chat.ts","../../src/components/connection-card.vue","../../src/components/control-buttons.vue","../../src/components/chat-modal.vue","../../src/components/games/TicTacToe.vue","../../src/components/games-modal.vue","../../src/components/donation-modal.vue","../../src/components/starfield.vue","../../src/components/audio/AudioOutput.vue","../../src/views/HomeView.vue","../../src/router/index.ts","../../src/main.ts"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <RouterView />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { RouterView } from 'vue-router'\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n\nbody {\n  font-family: 'Inter', sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #3A2273; /* خلفية احتياطية */\n  min-height: 100vh;\n  color: white;\n  overflow-x: hidden;\n}\n\n.app-container {\n  background: linear-gradient(to bottom right, #4c1d95, #6d28d9, #7c3aed);\n  min-height: 100vh;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n/* Animations */\n.animate-pulse-slow {\n  animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0); \n  }\n  50% { \n    transform: translateY(-10px); \n  }\n}\n\n/* Button styles */\nbutton {\n  transition: all 0.2s ease;\n}\n\nbutton:active {\n  transform: scale(0.95);\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: rgba(76, 29, 149, 0.3);\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: rgba(124, 58, 237, 0.6);\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: rgba(124, 58, 237, 0.8);\n}\n</style>\n","import { ref, onMounted, onUnmounted } from 'vue';\nimport { io, Socket } from 'socket.io-client';\n\n// Determine the API URL based on environment\nconst getApiUrl = () => {\n  // In production, use the same domain (as the server serves the client)\n  if (import.meta.env.PROD) {\n    // When running on Railway, the client is served by the server,\n    // so we use relative URL in production\n    return window.location.origin;\n  }\n  \n  // For development, use the configured API URL or default\n  return import.meta.env.VITE_API_URL || 'http://localhost:3000';\n};\n\n// Socket instance\nconst socket = ref<Socket | null>(null);\nconst userId = ref<string | null>(null);\nconst isConnected = ref(false);\nlet pingInterval: ReturnType<typeof setInterval> | null = null;\n\n/**\n * Socket service for managing real-time connections\n */\nexport function useSocket() {\n  onMounted(() => {\n    if (!socket.value) {\n      initializeSocket();\n    }\n  });\n\n  onUnmounted(() => {\n    // Clean up socket connection when component is unmounted\n    // But don't disconnect completely - just remove listeners from this instance\n    if (socket.value) {\n      cleanupSocketListeners();\n    }\n    \n    // Clear ping interval\n    if (pingInterval) {\n      clearInterval(pingInterval);\n      pingInterval = null;\n    }\n  });\n\n  // Initialize the socket connection\n  function initializeSocket() {\n    const apiUrl = getApiUrl();\n    console.log(`Connecting to socket server at: ${apiUrl}`);\n    \n    // Try to get previously stored user ID\n    const storedUserId = localStorage.getItem('spacechat_user_id');\n    console.log('Retrieved stored user ID:', storedUserId);\n    \n    // Connect to socket.io server\n    socket.value = io(apiUrl, {\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: Infinity, // Try to reconnect forever\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000, // Max delay between reconnections\n      timeout: 30000, // Increased timeout to 30 seconds\n      transports: ['websocket', 'polling'], // Prefer WebSocket but fallback to polling\n      extraHeaders: {\n        'X-Client-Version': '1.0.0', // Helps identify client versions for debugging\n      },\n      // Add stored user ID in query params for immediate identification\n      query: storedUserId ? { userId: storedUserId } : undefined,\n      // Path settings - uncomment if needed for specific server setup\n      // path: '/socket.io/',\n      forceNew: false, // Reuse existing connection if possible\n      rememberUpgrade: true, // Remember websocket connection between page refreshes\n      // Added to enhance connection behind proxies and firewalls\n      withCredentials: true\n    });\n\n    setupSocketListeners();\n    \n    // Setup ping/pong to keep connection alive and updating last seen time\n    startPingInterval();\n  }\n  \n  // Setup ping interval\n  function startPingInterval() {\n    // Clear existing interval if any\n    if (pingInterval) {\n      clearInterval(pingInterval);\n    }\n    \n    // Start new interval - ping every 30 seconds\n    pingInterval = setInterval(() => {\n      if (socket.value && isConnected.value) {\n        socket.value.emit('ping');\n      }\n    }, 30000);\n  }\n\n  // Set up all socket event listeners\n  function setupSocketListeners() {\n    if (!socket.value) return;\n\n    // Set up event listeners\n    socket.value.on('connect', () => {\n      console.log('Socket connected');\n      isConnected.value = true;\n      \n      // Get stored user ID from localStorage if available\n      const storedUserId = localStorage.getItem('spacechat_user_id');\n      \n      // Get user ID from the server after connecting\n      socket.value?.emit('user:identify', \n        { prevUserId: storedUserId || undefined }, \n        (id: string) => {\n          console.log('Identified with server, user ID:', id);\n          userId.value = id;\n          \n          // Store user ID in localStorage for reconnection\n          localStorage.setItem('spacechat_user_id', id);\n      });\n      \n      // Request online count update\n      socket.value?.emit('get-online-count');\n    });\n\n    socket.value.on('disconnect', () => {\n      console.log('Socket disconnected');\n      isConnected.value = false;\n    });\n\n    socket.value.on('reconnect', (attemptNumber: number) => {\n      console.log(`Socket reconnected after ${attemptNumber} attempts`);\n      isConnected.value = true;\n      \n      // Re-identify with the server and refresh state\n      const storedUserId = localStorage.getItem('spacechat_user_id');\n      if (storedUserId) {\n        socket.value?.emit('user:identify', { prevUserId: storedUserId }, (id: string) => {\n          console.log('Re-identified with server after reconnection, user ID:', id);\n          userId.value = id;\n          \n          // Update stored ID if different\n          if (id !== storedUserId) {\n            localStorage.setItem('spacechat_user_id', id);\n          }\n          \n          // Re-request online count\n          socket.value?.emit('get-online-count');\n        });\n      }\n    });\n\n    socket.value.on('reconnect_attempt', (attemptNumber: number) => {\n      console.log(`Socket reconnection attempt ${attemptNumber}`);\n    });\n\n    socket.value.on('reconnect_error', (error: Error) => {\n      console.error('Socket reconnection error:', error);\n    });\n\n    socket.value.on('reconnect_failed', () => {\n      console.error('Socket reconnection failed');\n      \n      // Try to initialize socket again after a delay\n      setTimeout(() => {\n        if (!isConnected.value) {\n          console.log('Attempting to reinitialize socket connection...');\n          cleanupSocketListeners();\n          initializeSocket();\n        }\n      }, 5000);\n    });\n\n    socket.value.on('error', (error: Error) => {\n      console.error('Socket error:', error);\n    });\n    \n    // Handle pong response\n    socket.value.on('pong', () => {\n      // Connection is active, nothing to do\n    });\n    \n    // Handle user ID from server\n    socket.value.on('user-id', (id: string) => {\n      console.log('Received user ID from server:', id);\n      userId.value = id;\n      // Store user ID in localStorage for reconnection\n      localStorage.setItem('spacechat_user_id', id);\n    });\n  }\n\n  // Clean up all socket listeners\n  function cleanupSocketListeners() {\n    if (!socket.value) return;\n    \n    socket.value.off('connect');\n    socket.value.off('disconnect');\n    socket.value.off('reconnect');\n    socket.value.off('reconnect_attempt');\n    socket.value.off('reconnect_error');\n    socket.value.off('reconnect_failed');\n    socket.value.off('error');\n    socket.value.off('user-id');\n    socket.value.off('pong');\n  }\n\n  // Force reconnection\n  function reconnect() {\n    if (socket.value) {\n      console.log('Forcing socket reconnection...');\n      socket.value.disconnect();\n      socket.value.connect();\n    } else {\n      initializeSocket();\n    }\n  }\n\n  return { \n    socket, \n    isConnected, \n    userId,\n    reconnect \n  };\n}\n","/**\n * تكوينات WebRTC المحسنة\n * \n * يحتوي هذا الملف على تكوينات مختلفة لـ WebRTC تم تحسينها \n * لتعمل في ظروف مختلفة من الشبكات\n */\n\n// خوادم TURN مدفوعة وموثوقة (يتطلب تكوين حسابات صالحة)\nconst TURN_CREDENTIAL_EXPIRY = 86400; // 24 hours\nconst TURN_USERNAME = `${Date.now() + TURN_CREDENTIAL_EXPIRY}:spacechat`;\nconst TURN_PASSWORD = 'openrelayproject'; // يجب تغييرها لاحقًا إلى معلومات اعتماد حقيقية\n\n// التكوين القياسي مع مجموعة متوازنة من خوادم STUN/TURN\nexport const standardRtcConfiguration: RTCConfiguration = {\n  iceServers: [\n    // خوادم TURN موثوقة للتغلب على NAT\n    {\n      urls: [\n        'turns:global.relay.metered.ca:443', // TURN over TLS\n        'turn:global.relay.metered.ca:443?transport=tcp', // TURN over TCP\n        'turn:global.relay.metered.ca:80?transport=tcp', // TURN over TCP port 80\n        'turn:global.relay.metered.ca:80' // TURN over UDP port 80\n      ],\n      username: TURN_USERNAME,\n      credential: TURN_PASSWORD\n    },\n    // خوادم TURN موثوقة بديلة\n    {\n      urls: [\n        'turn:relay.metered.ca:80', // TURN over UDP\n        'turn:relay.metered.ca:443', // TURN over TCP\n        'turns:relay.metered.ca:443' // TURN over TLS\n      ],\n      username: 'dbc12a',\n      credential: 'c84ded89b281ae42'\n    },\n    // خوادم Twilio كخيار ثالث\n    {\n      urls: [\n        'turn:global.turn.twilio.com:3478?transport=tcp',\n        'turn:global.turn.twilio.com:3478?transport=udp',\n        'turns:global.turn.twilio.com:443?transport=tcp'\n      ],\n      username: 'openrelayproject',\n      credential: 'openrelayproject'\n    },\n    // خوادم STUN عامة\n    { urls: 'stun:stun.l.google.com:19302' },\n    { urls: 'stun:stun1.l.google.com:19302' },\n    { urls: 'stun:stun2.l.google.com:19302' },\n    { urls: 'stun:stun3.l.google.com:19302' },\n    { urls: 'stun:stun4.l.google.com:19302' },\n    { urls: 'stun:stun.cloudflare.com:3478' }, // خادم Cloudflare STUN\n    { urls: 'stun:openrelay.metered.ca:80' }\n  ],\n  iceCandidatePoolSize: 10,\n  iceTransportPolicy: 'all',\n  bundlePolicy: 'max-bundle',\n  rtcpMuxPolicy: 'require'\n};\n\n// تكوين TURN فقط للشبكات الصعبة والجدران النارية المقيدة\nexport const turnOnlyRtcConfiguration: RTCConfiguration = {\n  iceServers: [\n    // خيار TURN أول\n    {\n      urls: [\n        'turns:global.relay.metered.ca:443', // TURN over TLS (الأكثر نجاحًا خلف جدران الحماية)\n        'turn:global.relay.metered.ca:443?transport=tcp', // TURN over TCP\n        'turn:global.relay.metered.ca:80?transport=tcp', // TURN على المنفذ 80\n        'turns:relay.metered.ca:443' // نسخة بديلة\n      ],\n      username: TURN_USERNAME,\n      credential: TURN_PASSWORD\n    },\n    // بديل آخر\n    {\n      urls: [\n        'turn:relay.metered.ca:443?transport=tcp',\n        'turns:relay.metered.ca:443'\n      ],\n      username: 'dbc12a',\n      credential: 'c84ded89b281ae42'\n    },\n    // خيار Twilio كنسخة احتياطية\n    {\n      urls: [\n        'turns:global.turn.twilio.com:443?transport=tcp'\n      ],\n      username: 'openrelayproject',\n      credential: 'openrelayproject'\n    }\n  ],\n  iceCandidatePoolSize: 10,\n  iceTransportPolicy: 'relay', // إجبار استخدام خوادم TURN فقط\n  bundlePolicy: 'max-bundle',\n  rtcpMuxPolicy: 'require'\n};\n\n// تكوين سريع الاتصال مع عدد أقل من الخوادم للاتصال السريع\nexport const fastRtcConfiguration: RTCConfiguration = {\n  iceServers: [\n    { urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:stun.cloudflare.com:3478'\n      ]\n    },\n    {\n      urls: [\n        'turn:relay.metered.ca:443?transport=tcp',\n      ],\n      username: 'dbc12a',\n      credential: 'c84ded89b281ae42'\n    }\n  ],\n  iceCandidatePoolSize: 5,\n  iceTransportPolicy: 'all',\n  bundlePolicy: 'max-bundle',\n  rtcpMuxPolicy: 'require'\n};\n\n// تكوين محسن للاتصالات المحلية\nexport const localRtcConfiguration: RTCConfiguration = {\n  iceServers: [\n    { urls: 'stun:stun.l.google.com:19302' }\n  ],\n  iceCandidatePoolSize: 3,\n  iceTransportPolicy: 'all',\n  bundlePolicy: 'max-bundle',\n  rtcpMuxPolicy: 'require'\n}; ","import { ref, onUnmounted, shallowRef, watch, computed } from 'vue';\nimport { useSocket } from './socket';\nimport { Socket } from 'socket.io-client';\nimport { \n  standardRtcConfiguration, \n  fastRtcConfiguration, \n  turnOnlyRtcConfiguration, \n  localRtcConfiguration\n} from './rtc-configurations';\n\ninterface ConnectionPreferences {\n  vibe?: string;\n  language?: string;\n  preferSameLanguage?: boolean;\n}\n\n// Use standard configuration by default\nlet currentRtcConfig: RTCConfiguration = standardRtcConfiguration;\nconst rtcConfiguration = currentRtcConfig;\n\n// Singleton instances for WebRTC to ensure persistence across component lifecycles\nlet globalPeerConnection: RTCPeerConnection | null = null;\nlet globalLocalStream: MediaStream | null = null;\nlet globalRemoteStream: MediaStream | null = null;\nconst globalConnectionState = ref<string>('new');\nconst globalIsAudioMuted = ref<boolean>(false);\nconst globalPartnerId = ref<string | null>(null);\n\n// Add debug flag\nconst DEBUG = true;\n\n// Debugging info storage\nlet lastConnectionError: string = '';\nlet failureReason: string = '';\nlet peerConnectionStats: any = null;\n\n// Adding variables to control the connection\nlet isNegotiating = false; // Prevent offer/answer overlap\nlet isRestartingIce = false; // Control ICE restart\nlet connectionRetryCount = 0; // Number of connection retry attempts\nconst MAX_CONNECTION_RETRIES = 15; // Increased number of attempts from 10 to 15\nlet pendingCandidates: RTCIceCandidate[] = []; // List of pending ICE candidates\n\n// Adding stability variables\nlet heartbeatInterval: number | null = null;\nlet trackCheckInterval: number | null = null;\nlet connectionMonitorInterval: number | null = null;\nconst HEARTBEAT_INTERVAL = 5000; // Increased from 3000 to 5000\nconst TRACK_CHECK_INTERVAL = 5000; // Increased from 3000 to 5000\nconst CONNECTION_MONITOR_INTERVAL = 8000; // Increased from 5000 to 8000\nconst CONNECTION_STABILITY_THRESHOLD = 15000; // Increased from 10000 to 15000 seconds before considering the connection stable\n\n// Add constants for connection timeouts\nconst CONNECTION_TIMEOUT = 15000; // Increased from 8000 to 15000\nconst RECONNECT_DELAY = 1000; // Increased from 500 to 1000\n\n// Get connection statistics\nasync function getConnectionStats(): Promise<any> {\n  if (!globalPeerConnection) {\n    return { error: 'No peer connection available' };\n  }\n  \n  try {\n    const stats: any = {};\n    const statsReport = await globalPeerConnection.getStats();\n    \n    statsReport.forEach((report: any) => {\n      if (report.type === 'transport') {\n        stats.transport = {\n          bytesReceived: report.bytesReceived,\n          bytesSent: report.bytesSent,\n          dtlsState: report.dtlsState,\n          selectedCandidatePairId: report.selectedCandidatePairId\n        };\n      } else if (report.type === 'candidate-pair' && report.selected) {\n        stats.selectedCandidatePair = {\n          localCandidateId: report.localCandidateId,\n          remoteCandidateId: report.remoteCandidateId,\n          state: report.state,\n          availableOutgoingBitrate: report.availableOutgoingBitrate\n        };\n      } else if (report.type === 'local-candidate' || report.type === 'remote-candidate') {\n        if (!stats.candidates) stats.candidates = [];\n        stats.candidates.push({\n          type: report.type,\n          id: report.id,\n          ip: report.ip,\n          port: report.port,\n          protocol: report.protocol,\n          candidateType: report.candidateType\n        });\n      } else if (report.type === 'media-source' || report.type === 'track' || report.type === 'media-playout') {\n        if (!stats.media) stats.media = [];\n        stats.media.push({\n          type: report.type,\n          id: report.id,\n          kind: report.kind,\n          audioLevel: report.audioLevel,\n          trackIdentifier: report.trackIdentifier\n        });\n      }\n    });\n    \n    return stats;\n  } catch (error) {\n    console.error('[WebRTC] Error getting stats:', error);\n    return { error: 'Failed to get stats: ' + error };\n  }\n}\n\n// Update connection statistics periodically\nfunction startStatsCollection() {\n  // Clear any existing timer\n  stopStatsCollection();\n  \n  // Start a new timer to collect stats every 5 seconds\n  const statsTimer = setInterval(async () => {\n    if (globalPeerConnection && \n        (globalConnectionState.value === 'connected' || \n         globalConnectionState.value === 'connecting')) {\n      peerConnectionStats = await getConnectionStats();\n      if (DEBUG) console.log('[WebRTC] Connection stats:', peerConnectionStats);\n    } else {\n      stopStatsCollection();\n    }\n  }, 5000);\n  \n  // Store the timer ID globally\n  (window as any).__webrtcStatsTimer = statsTimer;\n}\n\n// Stop stats collection\nfunction stopStatsCollection() {\n  const timer = (window as any).__webrtcStatsTimer;\n  if (timer) {\n    clearInterval(timer);\n    (window as any).__webrtcStatsTimer = null;\n  }\n}\n\n// Diagnose connection issues\nfunction diagnoseConnectionIssues(): string {\n  if (!globalPeerConnection) {\n    return 'لا يوجد اتصال نظير إلى نظير. جرب تحديث الصفحة أو افحص إعدادات المتصفح.';\n  }\n  \n  // Check for specific issues\n  if (failureReason) {\n    return `فشل الاتصال: ${failureReason}`;\n  }\n  \n  if (lastConnectionError) {\n    return `آخر خطأ: ${lastConnectionError}`;\n  }\n  \n  if (!globalLocalStream || globalLocalStream.getAudioTracks().length === 0) {\n    return 'لم يتم العثور على المايكروفون. يرجى التحقق من إعدادات الصوت وإذن المتصفح.';\n  }\n  \n  if (!globalRemoteStream || globalRemoteStream.getAudioTracks().length === 0) {\n    return 'لم يتم استلام صوت من الطرف الآخر. قد تكون هناك مشكلة في الشبكة أو إعدادات المايكروفون لديهم.';\n  }\n  \n  const state = globalPeerConnection.connectionState || globalPeerConnection.iceConnectionState;\n  \n  // Check candidate types to diagnose NAT/firewall issues\n  const candidateInfo = {\n    localCandidates: (window as any).__localIceCandidates?.length || 0,\n    remoteCandidates: (window as any).__remoteIceCandidates?.length || 0,\n    hasLocalRelay: false,\n    hasRemoteRelay: false,\n    hasLocalServerReflexive: false,\n    hasRemoteServerReflexive: false\n  };\n  \n  // Check if we have TURN candidates (relay) which are critical for NAT traversal\n  if ((window as any).__localIceCandidates) {\n    for (const candidate of (window as any).__localIceCandidates) {\n      if (candidate.candidate.includes('typ relay')) {\n        candidateInfo.hasLocalRelay = true;\n      }\n      if (candidate.candidate.includes('typ srflx')) {\n        candidateInfo.hasLocalServerReflexive = true;\n      }\n    }\n  }\n  \n  if ((window as any).__remoteIceCandidates) {\n    for (const candidate of (window as any).__remoteIceCandidates) {\n      if (candidate.candidate.includes('typ relay')) {\n        candidateInfo.hasRemoteRelay = true;\n      }\n      if (candidate.candidate.includes('typ srflx')) {\n        candidateInfo.hasRemoteServerReflexive = true;\n      }\n    }\n  }\n  \n  // Provide specific diagnostic based on connection state and candidates\n  switch (state) {\n    case 'new':\n      return 'الاتصال قيد الإعداد. يرجى الانتظار...';\n    case 'connecting':\n      // Provide more specific info about the connection attempt\n      if (candidateInfo.localCandidates === 0) {\n        return 'لم يتم توليد مرشحات ICE المحلية. قد تكون هناك مشكلة في الاتصال بالإنترنت أو إعدادات جدار الحماية.';\n      }\n      \n      if (!candidateInfo.hasLocalRelay && !candidateInfo.hasLocalServerReflexive) {\n        return 'لم يتم توليد مرشحات STUN/TURN. تأكد من أن منفذ UDP 19302 غير محظور في جدار الحماية.';\n      }\n      \n      if (candidateInfo.localCandidates > 0 && candidateInfo.remoteCandidates === 0) {\n        return 'تم توليد مرشحات ICE المحلية ولكن لم يتم استلام مرشحات من الطرف الآخر بعد. تأكد من وجود الطرف الآخر على الاتصال.';\n      }\n      \n      return 'يتم إنشاء الاتصال. قد يستغرق هذا بعض الوقت حسب إعدادات الشبكة.';\n    case 'connected':\n      return 'تم الاتصال بنجاح! إذا كنت لا تسمع الطرف الآخر، تأكد من تشغيل الصوت في متصفحك.';\n    case 'disconnected':\n      return 'انقطع الاتصال مؤقتًا. جار محاولة إعادة الاتصال...';\n    case 'failed':\n      // More detailed failure diagnosis\n      if (!candidateInfo.hasLocalRelay && !candidateInfo.hasRemoteRelay) {\n        return 'فشل الاتصال. لم يتم استخدام خوادم TURN. هذا يشير إلى مشكلة في جدار الحماية أو تكوين NAT. حاول الاتصال من شبكة أخرى.';\n      }\n      \n      if (candidateInfo.hasLocalRelay && candidateInfo.hasRemoteRelay) {\n        return 'فشل الاتصال رغم وجود مرشحات TURN. قد يكون هناك مشكلة في الشبكة أو تعطل في خدمة TURN.';\n      }\n      \n      return 'فشل الاتصال. يرجى تحديث الصفحة أو إعادة تشغيل الاتصال.';\n    case 'closed':\n      return 'تم إغلاق الاتصال. يمكنك تحديث الصفحة للمحاولة مرة أخرى.';\n    default:\n      return `حالة الاتصال غير معروفة: ${state}. يرجى إعادة تحميل الصفحة.`;\n  }\n}\n\n/**\n * WebRTC service for audio calls\n */\nexport function useWebRTC() {\n  const { socket, userId } = useSocket();\n  \n  // Use shallow refs to the global objects\n  const peerConnection = shallowRef<RTCPeerConnection | null>(globalPeerConnection);\n  const localStream = shallowRef<MediaStream | null>(globalLocalStream);\n  const remoteStream = shallowRef<MediaStream | null>(globalRemoteStream);\n  const connectionState = globalConnectionState;\n  const isAudioMuted = globalIsAudioMuted;\n  const partnerId = globalPartnerId;\n  \n  // Audio constraints\n  const audioConstraints = ref<MediaTrackConstraints>({\n    echoCancellation: true,\n    noiseSuppression: true\n  });\n  \n  /**\n   * Initialize local media stream (microphone)\n   */\n  const initializeLocalStream = async (): Promise<MediaStream> => {\n    try {\n      if (globalLocalStream) {\n        if (DEBUG) console.log('[WebRTC] Using existing local stream');\n        \n        // Check if audio tracks are still active\n        const audioTracks = globalLocalStream.getAudioTracks();\n        if (audioTracks.length === 0 || !audioTracks[0].enabled) {\n          if (DEBUG) console.log('[WebRTC] Existing stream has no active audio tracks, requesting new stream');\n          // If no active audio tracks, get a new stream\n          globalLocalStream.getTracks().forEach(track => track.stop());\n          globalLocalStream = null;\n        } else {\n          return globalLocalStream;\n        }\n      }\n      \n      if (DEBUG) console.log('[WebRTC] Requesting access to microphone with specific constraints');\n      \n      // Try with more specific audio constraints for better quality\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n          sampleRate: 48000,\n          channelCount: 2\n        },\n        video: false\n      });\n      \n      // Double check that we got audio tracks\n      if (stream.getAudioTracks().length === 0) {\n        console.error('[WebRTC] No audio tracks found in stream');\n        throw new Error('No audio tracks available');\n      }\n      \n      if (DEBUG) {\n        console.log('[WebRTC] Local stream acquired successfully');\n        console.log('[WebRTC] Audio tracks:', stream.getAudioTracks().length);\n        const tracks = stream.getAudioTracks();\n        tracks.forEach(track => {\n          console.log(`[WebRTC] Track: ${track.label}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n          console.log('[WebRTC] Track settings:', JSON.stringify(track.getSettings()));\n        });\n      }\n      \n      // Ensure all tracks are enabled\n      stream.getTracks().forEach(track => {\n        track.enabled = true;\n      });\n      \n      globalLocalStream = stream;\n      localStream.value = stream;\n      return stream;\n    } catch (error) {\n      console.error('[WebRTC] Error accessing microphone:', error);\n      \n      // Try with simpler constraints as fallback\n      try {\n        if (DEBUG) console.log('[WebRTC] Trying fallback with simpler constraints');\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\n        \n        if (stream.getAudioTracks().length === 0) {\n          throw new Error('No audio tracks available');\n        }\n        \n        globalLocalStream = stream;\n        localStream.value = stream;\n        return stream;\n      } catch (fallbackError) {\n        console.error('[WebRTC] Fallback also failed:', fallbackError);\n        throw new Error('Could not access microphone. Please check permissions.');\n      }\n    }\n  };\n  \n  /**\n   * إنشاء اتصال RTCPeerConnection جديد مع تحسينات الاستقرار\n   */\n  const createPeerConnection = (): RTCPeerConnection => {\n    // Cleanup any existing connection\n    if (globalPeerConnection) {\n      try {\n        globalPeerConnection.close();\n        // Clear any global references to the connection and streams\n        globalPeerConnection = null;\n        if (globalRemoteStream) {\n          globalRemoteStream.getTracks().forEach(track => {\n            track.stop();\n          });\n          globalRemoteStream = null;\n        }\n      } catch (err) {\n        console.error('[WebRTC] Error cleaning up old peer connection:', err);\n      }\n    }\n\n    try {\n      // Create a new RTCPeerConnection with our configuration\n    const pc = new RTCPeerConnection(rtcConfiguration);\n    \n      // On negotiation needed\n      pc.onnegotiationneeded = async (event) => {\n        if (DEBUG) console.log('[WebRTC] Negotiation needed event', event);\n        \n        if (!canSetLocalDescription(pc) || isNegotiating) {\n          if (DEBUG) console.log('[WebRTC] Skipping negotiation - already in progress or not in stable state');\n          return;\n        }\n        \n        isNegotiating = true;\n        \n        try {\n          if (DEBUG) console.log('[WebRTC] Starting negotiation');\n          startNegotiation();\n        } catch (err) {\n          console.error('[WebRTC] Negotiation error:', err);\n          failureReason = `Negotiation error: ${err}`;\n          isNegotiating = false;\n        }\n      };\n      \n      // Track ICE connection state changes\n      pc.oniceconnectionstatechange = () => {\n        if (DEBUG) console.log('[WebRTC] ICE Connection state changed to:', pc.iceConnectionState);\n        \n        if (pc.iceConnectionState === 'connected' || pc.iceConnectionState === 'completed') {\n          // We have a connection! Clear any previous failures and reset retry counter\n          failureReason = '';\n          connectionRetryCount = 0;\n          \n          // Start monitoring the connection\n          startConnectionMonitoring();\n          // Start collecting stats for debugging\n          startStatsCollection();\n          \n          updateGlobalState('connected');\n        } else if (pc.iceConnectionState === 'failed' || pc.iceConnectionState === 'disconnected' || pc.iceConnectionState === 'closed') {\n          if (pc.iceConnectionState === 'failed') {\n            failureReason = 'ICE connection failed';\n            console.error('[WebRTC] ICE Connection failed');\n          }\n          \n          if (pc.iceConnectionState !== 'closed') {\n            // Attempt recovery if we're not explicitly closed\n            // Don't attempt recovery if we're already trying to restart\n            if (!isRestartingIce && connectionRetryCount < MAX_CONNECTION_RETRIES) {\n              console.log(`[WebRTC] Attempting ICE restart, attempt ${connectionRetryCount + 1} of ${MAX_CONNECTION_RETRIES}`);\n              attemptConnectionRecovery();\n            } else if (connectionRetryCount >= MAX_CONNECTION_RETRIES) {\n              console.error('[WebRTC] Max connection retry attempts reached, giving up');\n              updateGlobalState('failed');\n              \n              // Force a new connection instead of trying to recover this one\n              connectionRetryCount = 0;\n              failureReason = 'Max retries reached, connection failed';\n              closeConnection();\n            }\n        } else {\n            updateGlobalState('closed');\n          }\n        }\n\n        // Update unified state variable\n        globalConnectionState.value = pc.iceConnectionState;\n      };\n\n      // ICE candidate events\n      pc.onicecandidate = (event) => {\n        if (event.candidate) {\n          if (DEBUG) console.log('[WebRTC] New ICE candidate:', event.candidate);\n          \n          // Store local candidates for diagnostics\n          if (!(window as any).__localIceCandidates) {\n            (window as any).__localIceCandidates = [];\n          }\n          (window as any).__localIceCandidates.push(event.candidate);\n          \n          if (partnerId.value) {\n            // Send the ICE candidate to the peer\n            socket.value?.emit('webrtc-signal', {\n              type: 'ice-candidate',\n              candidate: event.candidate,\n              to: partnerId.value\n            });\n          } else {\n            // No partner ID yet, store the candidate for later\n            pendingCandidates.push(event.candidate);\n            if (DEBUG) console.log('[WebRTC] Storing ICE candidate for later. Total pending:', pendingCandidates.length);\n          }\n        } else {\n          // ICE gathering is complete\n          if (DEBUG) console.log('[WebRTC] ICE gathering complete');\n          \n          // If we have pending candidates and a partner ID, send them now\n          if (pendingCandidates.length > 0 && partnerId.value) {\n            pendingCandidates.forEach(candidate => {\n              socket.value?.emit('webrtc-signal', {\n                type: 'ice-candidate',\n                candidate,\n                to: partnerId.value\n              });\n            });\n            if (DEBUG) console.log(`[WebRTC] Sent ${pendingCandidates.length} pending ICE candidates`);\n            pendingCandidates = [];\n          }\n        }\n      };\n\n      // ICE gathering state change\n      pc.onicegatheringstatechange = () => {\n        if (DEBUG) console.log('[WebRTC] ICE gathering state changed to:', pc.iceGatheringState);\n      };\n      \n      // Connection state change (modern browsers only)\n      pc.onconnectionstatechange = () => {\n        if (DEBUG) console.log('[WebRTC] Connection state changed to:', pc.connectionState);\n        \n        updateGlobalState(pc.connectionState);\n        \n        if (pc.connectionState === 'connected') {\n          // Clear any previous failure reasons\n          failureReason = '';\n          connectionRetryCount = 0;\n        } else if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected' || pc.connectionState === 'closed') {\n          if (pc.connectionState === 'failed' && !failureReason) {\n            failureReason = 'PeerConnection failed';\n          }\n        }\n      };\n      \n      // Signaling state change\n      pc.onsignalingstatechange = () => {\n        if (DEBUG) console.log('[WebRTC] Signaling state changed to:', pc.signalingState);\n        \n        if (pc.signalingState === 'stable') {\n          isNegotiating = false;\n        }\n      };\n      \n      // Track events - add incoming tracks to the remote stream\n      pc.ontrack = (event) => {\n        if (DEBUG) console.log('[WebRTC] Track received:', event.track);\n        \n        // Create remote stream if needed\n        if (!globalRemoteStream) {\n          globalRemoteStream = new MediaStream();\n          remoteStream.value = globalRemoteStream;\n          console.log('[WebRTC] Created new remote stream');\n        }\n        \n        // Add the track to the stream\n        globalRemoteStream.addTrack(event.track);\n        console.log(`[WebRTC] Added ${event.track.kind} track to remote stream, now has ${globalRemoteStream.getTracks().length} tracks`);\n        \n        // Verify tracks were added properly\n        setTimeout(() => {\n          if (globalRemoteStream) {\n            const tracks = globalRemoteStream.getTracks();\n            console.log(`[WebRTC] Remote stream has ${tracks.length} tracks after adding`);\n            tracks.forEach(track => {\n              console.log(`[WebRTC] Track: ${track.kind}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n              if (track.kind === 'audio' && (!track.enabled || track.muted)) {\n                console.log('[WebRTC] 🔴 Found disabled or muted audio track, enabling it');\n                track.enabled = true;\n              }\n            });\n          }\n        }, 500);\n        \n        // Log track stats\n        if (DEBUG) {\n          event.track.onunmute = () => {\n            console.log('[WebRTC] Track unmuted:', event.track.kind);\n          };\n          \n          event.track.onmute = () => {\n            console.log('[WebRTC] Track muted:', event.track.kind);\n            // Auto unmute if track gets muted for some reason\n            event.track.enabled = true;\n          };\n          \n          event.track.onended = () => {\n            console.log('[WebRTC] Track ended:', event.track.kind);\n          };\n        }\n      };\n      \n      // Set up connection timeout handling\n      setupConnectionTimeout(pc);\n      \n      // Store the connection globally\n    globalPeerConnection = pc;\n    \n    return pc;\n    } catch (error) {\n      console.error('[WebRTC] Error creating peer connection:', error);\n      lastConnectionError = `Creation error: ${error}`;\n      failureReason = 'Failed to create connection';\n      updateGlobalState('failed');\n      throw error;\n    }\n  };\n  \n  /**\n   * Create an offer and send it to the target peer\n   */\n  const createOffer = async (targetPartnerId: string | null): Promise<any> => {\n    // Clear any existing connection timeout\n    if ((window as any).__webrtcConnectionTimeout) {\n      clearTimeout((window as any).__webrtcConnectionTimeout);\n    }\n    \n    if (!targetPartnerId) {\n      const errorMsg = 'Cannot create offer: No target partner ID provided';\n      console.error(`[WebRTC] ${errorMsg}`);\n      lastConnectionError = errorMsg;\n      return { error: errorMsg };\n    }\n    \n    if (!socket.value) {\n      const errorMsg = 'Cannot create offer: socket not available';\n      console.error(`[WebRTC] ${errorMsg}`);\n      lastConnectionError = errorMsg;\n      return { error: errorMsg };\n    }\n    \n    // Make sure we have access to the microphone before creating an offer\n    if (!globalLocalStream) {\n      try {\n        if (DEBUG) console.log('[WebRTC] Initializing local stream before creating offer');\n        await initializeLocalStream();\n      } catch (error) {\n        console.error('[WebRTC] Failed to initialize local stream:', error);\n        lastConnectionError = `Failed to access microphone: ${error}`;\n        return { error: `Failed to access microphone: ${error}` };\n      }\n    }\n    \n    if (DEBUG) console.log(`[WebRTC] Creating offer for partner: ${targetPartnerId}`);\n    \n    // تحقق من وجود تفاوض جارٍ\n    if (isNegotiating) {\n      console.warn('[WebRTC] Negotiation already in progress, deferring new offer');\n      \n      // إعادة المحاولة بعد تأخير قصير\n      return new Promise(resolve => {\n        setTimeout(async () => {\n          if (!isNegotiating) {\n            resolve(await createOffer(targetPartnerId));\n          } else {\n            resolve({ waiting: 'Negotiation in progress' });\n          }\n        }, 1000);\n      });\n    }\n    \n    // Mark that we are negotiating\n    isNegotiating = true;\n    globalPartnerId.value = targetPartnerId;\n    partnerId.value = targetPartnerId;\n    \n    try {\n      // Store the partner ID\n      if (DEBUG) console.log(`[WebRTC] Setting partner ID: ${targetPartnerId}`);\n      \n      // إعادة تكوين WebRTC للتأكد من أن الاتصال نظيف\n      const pc = createPeerConnection();\n      \n      // إضافة المسارات المحلية\n      if (globalLocalStream) {\n        if (DEBUG) {\n          console.log('[WebRTC] Adding local tracks to connection');\n          console.log(`[WebRTC] Local stream has ${globalLocalStream.getTracks().length} tracks`);\n        }\n        \n        // إعادة تعيين المرسلين إذا كانوا موجودين بالفعل\n        const localMediaStream: MediaStream = globalLocalStream;\n        if (pc.getSenders().length > 0) {\n          if (DEBUG) console.log('[WebRTC] Replacing existing senders');\n          let i = 0;\n          localMediaStream.getTracks().forEach((track: MediaStreamTrack) => {\n            if (pc.getSenders()[i]) {\n              pc.getSenders()[i].replaceTrack(track);\n              i++;\n            } else {\n              pc.addTrack(track, localMediaStream);\n            }\n          });\n        } else {\n          // إضافة المسارات عادية إذا لم تكن موجودة\n          localMediaStream.getTracks().forEach((track: MediaStreamTrack) => {\n            pc.addTrack(track, localMediaStream);\n          });\n        }\n      } else {\n        console.error('[WebRTC] No local stream to add tracks from');\n        // حاول الحصول على تدفق محلي مرة أخرى\n        await initializeLocalStream();\n        if (globalLocalStream) {\n          const localMediaStream: MediaStream = globalLocalStream;\n          localMediaStream.getTracks().forEach((track: MediaStreamTrack) => {\n            pc.addTrack(track, localMediaStream);\n          });\n        }\n      }\n      \n      // تحديث حالة الاتصال\n      globalConnectionState.value = 'connecting';\n      connectionState.value = 'connecting';\n      \n      // إنشاء عرض مع الخيارات المناسبة\n      if (DEBUG) console.log('[WebRTC] Creating offer');\n      const offer = await pc.createOffer({\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: false,\n      });\n      \n      // تعيين الوصف المحلي\n      if (DEBUG) console.log('[WebRTC] Setting local description');\n      await pc.setLocalDescription(offer);\n      \n      // استخدام Trickle ICE بدلاً من انتظار اكتمال التجميع\n      // سيتم إرسال العرض فورًا وإرسال مرشحات ICE لاحقًا عند توليدها\n      if (socket.value && targetPartnerId) {\n        if (DEBUG) console.log('[WebRTC] Sending immediate offer using Trickle ICE');\n        \n        // للتوافق مع الخادم الحالي\n        socket.value.emit('voice-offer', {\n          offer: pc.localDescription,\n          to: targetPartnerId\n        });\n        \n        // إضافة إرسال بالتنسيق الجديد\n        socket.value.emit('webrtc-signal', {\n          type: 'offer',\n          offer: pc.localDescription,\n          to: targetPartnerId\n        });\n      }\n      \n      // إعداد مؤقت للتحقق من نجاح الاتصال\n      setupConnectionTimeout(pc);\n      \n      // بدء مراقبة الاتصال\n      startConnectionMonitoring();\n      \n      if (DEBUG) console.log('[WebRTC] Offer creation complete');\n      return { success: true };\n    } catch (error) {\n      console.error('[WebRTC] Error creating offer:', error);\n      lastConnectionError = `Error creating offer: ${error}`;\n      isNegotiating = false;\n      return { error: `Failed to create offer: ${error}` };\n    } finally {\n      // Mark that we are done negotiating\n      setTimeout(() => {\n        isNegotiating = false;\n      }, 2000);\n    }\n  };\n  \n  // Helper function to wait for ICE gathering to complete\n  const waitForIceGatheringComplete = (pc: RTCPeerConnection): Promise<void> => {\n    if (pc.iceGatheringState === 'complete') {\n      if (DEBUG) console.log('[WebRTC] ICE gathering already complete');\n      return Promise.resolve();\n    }\n    \n    return new Promise<void>((resolve) => {\n      const checkState = () => {\n        if (pc.iceGatheringState === 'complete') {\n          pc.removeEventListener('icegatheringstatechange', checkState);\n          resolve();\n        }\n      };\n      \n      pc.addEventListener('icegatheringstatechange', checkState);\n      \n      // تقليل وقت الانتظار من 2000 إلى 1000 مللي ثانية\n      // سيتم المتابعة حتى لو لم تكتمل عملية التجميع\n      setTimeout(() => {\n        pc.removeEventListener('icegatheringstatechange', checkState);\n        if (DEBUG) console.log('[WebRTC] ICE gathering timed out, but continuing anyway');\n        resolve();\n      }, 1000);\n    });\n  };\n  \n  /**\n   * Handle an incoming WebRTC offer\n   */\n  const handleOffer = async (offer: RTCSessionDescriptionInit, targetPartnerId: string): Promise<void> => {\n    if (!socket.value) {\n      console.error('[WebRTC] Cannot handle offer: socket not available');\n      return;\n    }\n    \n    if (DEBUG) {\n      console.log('[WebRTC] Received offer from:', targetPartnerId);\n      console.log('[WebRTC] Offer SDP:', offer.sdp);\n    }\n    \n    // Store the partner ID\n    globalPartnerId.value = targetPartnerId;\n    partnerId.value = targetPartnerId;\n    \n    try {\n      // Make sure we have access to the microphone\n      if (!globalLocalStream) {\n        if (DEBUG) console.log('[WebRTC] Initializing local stream before handling offer');\n        await initializeLocalStream();\n      }\n      \n      // إعادة تكوين أو إعادة استخدام اتصال WebRTC\n      const pc = createPeerConnection();\n      \n      // إضافة المسارات المحلية إذا لم تكن موجودة\n      if (globalLocalStream) {\n        const senders = pc.getSenders();\n        if (senders.length === 0) {\n          if (DEBUG) console.log('[WebRTC] Adding local tracks to connection');\n          globalLocalStream.getTracks().forEach(track => {\n            pc.addTrack(track, globalLocalStream!);\n          });\n        } else {\n          if (DEBUG) console.log('[WebRTC] Senders already exist, not adding tracks again');\n        }\n      }\n      \n      // تحديث حالة الاتصال\n      globalConnectionState.value = 'connecting';\n      connectionState.value = 'connecting';\n      \n      // تعيين الوصف البعيد (العرض الوارد)\n      if (DEBUG) console.log('[WebRTC] Setting remote description (offer)');\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\n      \n      // إضافة أي مرشحي ICE معلقين\n      if (pendingCandidates.length > 0) {\n        if (DEBUG) console.log(`[WebRTC] Adding ${pendingCandidates.length} pending ICE candidates`);\n        for (const candidate of pendingCandidates) {\n          try {\n            await pc.addIceCandidate(candidate);\n          } catch (error) {\n            console.error('[WebRTC] Error adding pending ICE candidate:', error);\n          }\n\n        }\n        pendingCandidates = [];\n      }\n      \n      // إنشاء إجابة\n      if (DEBUG) console.log('[WebRTC] Creating answer');\n      const answer = await pc.createAnswer({\n        offerToReceiveAudio: true\n      });\n      \n      if (DEBUG) console.log('[WebRTC] Answer SDP:', answer.sdp);\n      \n      // تعيين الوصف المحلي (الإجابة)\n      if (DEBUG) console.log('[WebRTC] Setting local description (answer)');\n      await pc.setLocalDescription(answer);\n      \n      // تأكد من أن المستقبلين مكوّنون لاستقبال الصوت\n      pc.getTransceivers().forEach(transceiver => {\n        if (transceiver.receiver.track.kind === 'audio') {\n          console.log('[WebRTC] Ensuring audio transceiver is set to receive');\n          if (transceiver.direction !== 'sendrecv' && transceiver.direction !== 'recvonly') {\n            try {\n              transceiver.direction = 'sendrecv';\n            } catch (error) {\n              console.error('[WebRTC] Could not update transceiver direction:', error);\n            }\n          }\n        }\n      });\n      \n      // انتظار جمع مرشحي ICE\n      await waitForIceGatheringComplete(pc);\n      \n      // إرسال الإجابة إلى الشريك\n      if (DEBUG) console.log('[WebRTC] Sending answer to:', targetPartnerId);\n      socket.value.emit('voice-answer', {\n        answer: pc.localDescription,\n        to: targetPartnerId\n      });\n      \n      // إرسال بالتنسيق البديل أيضا\n      socket.value.emit('webrtc-signal', {\n        type: 'answer',\n        answer: pc.localDescription,\n        to: targetPartnerId\n      });\n      \n      // تعيين مؤقت للاتصال\n      setupConnectionTimeout(pc);\n      \n      // بدء مراقبة الاتصال\n      startConnectionMonitoring();\n      \n      if (DEBUG) console.log('[WebRTC] Offer handling and answer creation complete');\n    } catch (error) {\n      console.error('[WebRTC] Error handling offer:', error);\n      lastConnectionError = `Error handling offer: ${error}`;\n      \n      // إعادة المحاولة بعد فترة في حالة الفشل\n      setTimeout(() => {\n        if (socket.value && partnerId.value) {\n          console.log('[WebRTC] Re-negotiating after offer error');\n          createOffer(partnerId.value);\n        }\n      }, 2000);\n    }\n  };\n  \n  /**\n   * Handle an incoming answer\n   */\n  const handleAnswer = async (answer: RTCSessionDescriptionInit): Promise<void> => {\n    try {\n      if (!globalPeerConnection) {\n        if (DEBUG) console.log('[WebRTC] Cannot handle answer: no peer connection available');\n        return;\n      }\n\n      // توثيق حالة الإشارة الحالية\n      const currentState = globalPeerConnection.signalingState;\n      if (DEBUG) console.log(`[WebRTC] Current signaling state before handling answer: ${currentState}`);\n\n      // التحقق من حالة الإشارة قبل تعيين الوصف البعيد\n      if (currentState === 'have-local-offer') {\n        if (DEBUG) console.log('[WebRTC] Setting remote description from answer');\n        try {\n          await globalPeerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n          if (DEBUG) console.log('[WebRTC] Remote description set successfully, signaling state now: ' + globalPeerConnection.signalingState);\n        } catch (error: any) {\n          console.error('[WebRTC] Error setting remote description:', error);\n          \n          // إذا كان الخطأ متعلقًا بحالة غير صالحة، محاولة إصلاح الحالة\n          if (error.toString().includes('InvalidStateError')) {\n            console.warn('[WebRTC] Invalid state error, attempting to recover');\n            \n            // انتظار لحظة قبل المحاولة مرة أخرى\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            // التحقق من الحالة مرة أخرى\n            if (globalPeerConnection.signalingState === 'have-local-offer') {\n              try {\n                if (DEBUG) console.log('[WebRTC] Retrying set remote description after delay');\n                await globalPeerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n                if (DEBUG) console.log('[WebRTC] Remote description set successfully on retry');\n              } catch (retryError) {\n                console.error('[WebRTC] Final error setting remote description:', retryError);\n                // لا نرمي الخطأ هنا لتجنب إنهاء العملية\n              }\n            } else {\n              console.warn(`[WebRTC] Cannot set remote answer, wrong state: ${globalPeerConnection.signalingState}`);\n            }\n          }\n        }\n      } else {\n        console.warn(`[WebRTC] Cannot set remote description: wrong signaling state: ${currentState}`);\n        \n        // إذا كنا في حالة مستقرة، قد نكون عالجنا هذه الإجابة بالفعل أو فاتنا العرض\n        if (currentState === 'stable') {\n          if (DEBUG) console.log('[WebRTC] Already in stable state, ignoring answer');\n        } else if (currentState === 'have-remote-offer') {\n          console.warn('[WebRTC] We have a remote offer but received an answer - signaling confusion');\n          // يمكن إعادة تعيين الاتصال لتصحيح تسلسل الإشارات\n          if (connectionRetryCount < MAX_CONNECTION_RETRIES) {\n            connectionRetryCount++;\n            if (DEBUG) console.log(`[WebRTC] Resetting connection due to signaling confusion (${connectionRetryCount}/${MAX_CONNECTION_RETRIES})`);\n            closeConnection();\n            \n            // إعادة إنشاء اتصال جديد بعد فترة قصيرة\n            setTimeout(() => {\n              if (partnerId.value) {\n                createOffer(partnerId.value);\n              }\n            }, 2000);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('[WebRTC] Error handling answer:', error);\n      lastConnectionError = `Error handling answer: ${error}`;\n      \n      // محاولة إصلاح الاتصال بدلاً من إغلاقه\n      if (DEBUG) console.log('[WebRTC] Attempting to recover from answer error');\n      if (connectionRetryCount < MAX_CONNECTION_RETRIES) {\n        await attemptConnectionRecovery();\n      }\n    }\n  };\n  \n  /**\n   * Toggle microphone mute state\n   */\n  const toggleMicrophone = async (): Promise<boolean> => {\n    // عكس حالة كتم الصوت الحالية\n    const shouldMute = !globalIsAudioMuted.value;\n    \n    // حالة كتم الصوت\n    if (shouldMute) {\n      if (DEBUG) console.log('[WebRTC] Muting microphone - stopping all tracks');\n      \n      // إيقاف مسارات الصوت إذا كانت موجودة\n      if (globalLocalStream) {\n        globalLocalStream.getAudioTracks().forEach(track => {\n          track.stop();\n        });\n        \n        // تصفير المتغيرات العامة\n        globalLocalStream = null;\n        localStream.value = null;\n      }\n      \n      // تحديث حالة كتم الصوت\n      globalIsAudioMuted.value = true;\n      \n      return false; // الميكروفون الآن مكتوم\n    } \n    // حالة إلغاء كتم الصوت\n    else {\n      if (DEBUG) console.log('[WebRTC] Unmuting microphone - requesting new permission');\n      \n      try {\n        // إلغاء أي stream موجود\n        if (globalLocalStream) {\n          globalLocalStream.getTracks().forEach(track => track.stop());\n          globalLocalStream = null;\n          localStream.value = null;\n        }\n        \n        // إجبار المتصفح على طلب إذن جديد\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          },\n          video: false\n        });\n        \n        // التأكد من وجود مسارات صوتية\n        if (stream.getAudioTracks().length === 0) {\n          throw new Error('No audio tracks available');\n        }\n        \n        // تخزين التدفق الجديد\n        globalLocalStream = stream;\n        localStream.value = stream;\n        \n        // إضافة المسار الجديد للاتصال إذا كان موجودًا\n        if (globalPeerConnection && stream) {\n          try {\n            const senders = globalPeerConnection.getSenders();\n            const audioSender = senders.find(sender => sender.track && sender.track.kind === 'audio');\n            \n            if (audioSender) {\n              const audioTrack = stream.getAudioTracks()[0];\n              if (audioTrack) {\n                audioSender.replaceTrack(audioTrack);\n              }\n            } else if (stream.getAudioTracks().length > 0) {\n              stream.getAudioTracks().forEach(track => {\n                if (globalPeerConnection) {\n                  globalPeerConnection.addTrack(track, stream);\n                }\n              });\n            }\n          } catch (trackError) {\n            console.error('[WebRTC] Error adding audio tracks:', trackError);\n            // الاستمرار حتى مع حدوث خطأ في إضافة المسارات\n          }\n        }\n        \n        // تحديث حالة كتم الصوت - مهم!\n        globalIsAudioMuted.value = false;\n        \n        return true; // الميكروفون الآن غير مكتوم\n      } catch (error) {\n        console.error('[WebRTC] Error unmuting microphone:', error);\n        \n        // في حالة فشل إلغاء كتم الصوت، حاول مرة أخرى بخيارات أبسط\n        try {\n          const fallbackStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n          globalLocalStream = fallbackStream;\n          localStream.value = fallbackStream;\n          globalIsAudioMuted.value = false;\n          return true;\n        } catch (fallbackError) {\n          console.error('[WebRTC] Fallback microphone access also failed:', fallbackError);\n          return false;\n        }\n      }\n    }\n  };\n  \n  /**\n   * Close and cleanup the peer connection\n   */\n  const closeConnection = (): void => {\n    if (DEBUG) console.log('[WebRTC] Closing connection');\n    \n    // Stop all activity\n    stopConnectionHeartbeat();\n    stopConnectionMonitoring();\n    \n      if (globalPeerConnection) {\n        try {\n        // Remove all event listeners\n        globalPeerConnection.ontrack = null;\n        globalPeerConnection.onicecandidate = null;\n        globalPeerConnection.oniceconnectionstatechange = null;\n        globalPeerConnection.onicegatheringstatechange = null;\n        globalPeerConnection.onsignalingstatechange = null;\n        globalPeerConnection.onconnectionstatechange = null;\n        \n        // Stop all transceivers if supported\n        try {\n          if (globalPeerConnection.getTransceivers) {\n            globalPeerConnection.getTransceivers().forEach(transceiver => {\n              if (transceiver.stop) {\n                transceiver.stop();\n              }\n            });\n          }\n        } catch (e) {\n          // Ignore errors\n        }\n        \n        // Close the connection\n          globalPeerConnection.close();\n        if (DEBUG) console.log('[WebRTC] Peer connection closed');\n      } catch (error) {\n        console.error('[WebRTC] Error closing peer connection:', error);\n      }\n      \n      // Reset the global reference\n          globalPeerConnection = null;\n    }\n    \n    // Clear any remote tracks\n          if (globalRemoteStream) {\n            globalRemoteStream.getTracks().forEach(track => {\n              track.stop();\n            });\n      globalRemoteStream = new MediaStream();\n      remoteStream.value = globalRemoteStream;\n    }\n    \n    // Reset state\n    globalConnectionState.value = 'closed';\n    connectionState.value = 'closed';\n  };\n  \n  /**\n   * Close and cleanup all media streams\n   */\n  const cleanup = (): void => {\n    if (DEBUG) console.log('[WebRTC] Full cleanup initiated');\n    closeConnection();\n    \n    if (globalLocalStream) {\n      if (DEBUG) console.log('[WebRTC] Stopping local stream tracks');\n      globalLocalStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      globalLocalStream = null;\n      localStream.value = null;\n    }\n    \n    if (DEBUG) console.log('[WebRTC] Cleanup complete');\n  };\n  \n  /**\n   * إعداد معالجي أحداث الويب سوكت\n   */\n  function setupSocketListeners() {\n    if (!socket.value) {\n      if (DEBUG) console.log('[WebRTC] No socket available, cannot set up listeners');\n        return;\n      }\n      \n    if (DEBUG) console.log('[WebRTC] Setting up socket listeners');\n    \n    // إزالة المستمعين السابقين لمنع التكرار\n    socket.value.off('webrtc-signal');\n    socket.value.off('ice-candidate');\n    socket.value.off('partner-disconnected');\n    socket.value.off('webrtc-connection-failed');\n    socket.value.off('connection-timeout');\n\n    // معالجة أحداث voice-offer و voice-answer القديمة\n    socket.value.off('voice-offer');\n    socket.value.off('voice-answer');\n    \n    socket.value.on('voice-offer', async (data: any) => {\n      if (DEBUG) console.log('[WebRTC] Received legacy voice-offer:', data);\n      // تحويل إلى صيغة webrtc-signal الجديدة\n      await handleOffer(data.offer, data.from);\n    });\n    \n    socket.value.on('voice-answer', async (data: any) => {\n      if (DEBUG) console.log('[WebRTC] Received legacy voice-answer:', data);\n      // تحويل إلى صيغة الإجابة الجديدة\n      await handleAnswer(data.answer);\n    });\n    \n    // التعامل مع إشارة WebRTC (offer, answer)\n    socket.value.on('webrtc-signal', async (data: { type: string, offer?: RTCSessionDescriptionInit, answer?: RTCSessionDescriptionInit, from: string }) => {\n      if (DEBUG) console.log(`[WebRTC] Received ${data.type} signal from ${data.from}`);\n      \n      // حفظ معرف الشريك\n      globalPartnerId.value = data.from;\n      partnerId.value = data.from;\n      \n      // معالجة العرض\n      if (data.type === 'offer' && data.offer) {\n        try {\n          await handleOffer(data.offer, data.from);\n        } catch (error) {\n          console.error('[WebRTC] Error handling offer:', error);\n          lastConnectionError = `Error handling offer: ${error}`;\n          \n          // إعلام الخادم بفشل الاتصال\n          if (socket.value) {\n            socket.value.emit('webrtc-connection-failed', {\n              to: data.from,\n              reason: `Failed to handle offer: ${error}`\n            });\n          }\n        }\n      }\n      // معالجة الإجابة\n      else if (data.type === 'answer' && data.answer) {\n        try {\n          await handleAnswer(data.answer);\n        } catch (error) {\n          console.error('[WebRTC] Error handling answer:', error);\n          lastConnectionError = `Error handling answer: ${error}`;\n          \n          // إعلام الخادم بفشل الاتصال\n          if (socket.value) {\n            socket.value.emit('webrtc-connection-failed', {\n              to: data.from,\n              reason: `Failed to handle answer: ${error}`\n            });\n          }\n        }\n      }\n    });\n    \n    // استقبال إشارة مرشحات ICE\n    socket.value.on('ice-candidate', async (data: { candidate: RTCIceCandidate, from: string }) => {\n      if (DEBUG) console.log(`[WebRTC] Received ICE candidate from ${data.from}`);\n      \n      if (data.from !== partnerId.value) {\n        if (DEBUG) console.log('[WebRTC] Ignoring ICE candidate from different partner');\n          return;\n        }\n      \n      try {\n        await handleIceCandidate(data.candidate);\n      } catch (error) {\n        console.error('[WebRTC] Error handling ICE candidate:', error);\n        lastConnectionError = `Error handling ICE candidate: ${error}`;\n      }\n    });\n    \n    // استقبال إشعار بفشل اتصال WebRTC\n    socket.value.on('webrtc-connection-failed', (data: { from: string, reason: string }) => {\n      if (DEBUG) console.log(`[WebRTC] Connection failed notification from ${data.from}: ${data.reason}`);\n      \n      // تحديث حالة الاتصال ومحاولة إعادة الاتصال\n      if (connectionRetryCount < MAX_CONNECTION_RETRIES) {\n        connectionRetryCount++;\n        console.log(`[WebRTC] Partner reported connection failure. Retry ${connectionRetryCount}/${MAX_CONNECTION_RETRIES}`);\n        \n        // إعادة بناء الاتصال\n        if (data.from === partnerId.value) {\n          setTimeout(() => {\n            if (partnerId.value && socket.value) {\n              createOffer(data.from);\n            }\n          }, RECONNECT_DELAY);\n        }\n      } else {\n        globalConnectionState.value = 'failed';\n        stopConnectionHeartbeat();\n        lastConnectionError = `Partner reported failure: ${data.reason}`;\n      }\n    });\n    \n    // إضافة معالج انقطاع الاتصال\n    socket.value.on('partner-disconnected', () => {\n      if (DEBUG) console.log('[WebRTC] Partner disconnected');\n      \n      // إغلاق الاتصال\n      closeConnection();\n      \n      // إعادة ضبط المتغيرات\n      globalPartnerId.value = null;\n      partnerId.value = null;\n      globalConnectionState.value = 'closed';\n      isNegotiating = false;\n      isRestartingIce = false;\n      connectionRetryCount = 0;\n    });\n  }\n  \n  // Setup the socket listeners when this hook is used\n  setupSocketListeners();\n  \n  // Clean up resources when component is unmounted\n  onUnmounted(() => {\n    // We don't close connections here anymore to maintain call during component changes\n    // Instead, we just remove our local references\n    peerConnection.value = null;\n    localStream.value = null;\n    remoteStream.value = null;\n  });\n  \n  // دالة لإرسال نبضات اتصال للحفاظ على استقرار الاتصال\n  function startConnectionHeartbeat() {\n    if (heartbeatInterval) {\n      clearInterval(heartbeatInterval);\n    }\n    \n    // بدء إرسال نبضات للحفاظ على الاتصال نشطًا\n    heartbeatInterval = window.setInterval(() => {\n      if (globalPeerConnection && \n          (globalConnectionState.value === 'connected' || \n           globalConnectionState.value === 'connecting')) {\n        \n        // إنشاء قناة بيانات جديدة كنبضة لإبقاء الاتصال نشطًا\n        try {\n          const channel = globalPeerConnection.createDataChannel(`heartbeat_${Date.now()}`);\n          \n          // إغلاق القناة بعد فترة قصيرة\n          setTimeout(() => {\n            try {\n              channel.close();\n            } catch (e) {\n              // تجاهل أي خطأ عند الإغلاق\n            }\n          }, 1000);\n          \n          if (DEBUG) console.log('[WebRTC] Heartbeat sent to keep connection alive');\n          \n          // إذا كان الاتصال في حالة \"جاري الاتصال\" لفترة طويلة، إرسال إشعار تشخيصي\n          if (globalConnectionState.value === 'connecting' && connectionRetryCount > 3) {\n            console.log('[WebRTC] Connection stuck in connecting state. Diagnostic report:');\n            console.log(getConnectionDiagnosticReport());\n          }\n        } catch (e) {\n          // تجاهل أخطاء إنشاء قناة البيانات إذا كان الاتصال مغلقًا بالفعل\n        }\n        \n        // التحقق من حالة المسارات\n        checkAndFixTracks();\n      } else {\n        stopConnectionHeartbeat();\n      }\n    }, HEARTBEAT_INTERVAL) as unknown as number;\n  }\n\n  // إيقاف نبضات الاتصال\n  function stopConnectionHeartbeat() {\n    if (heartbeatInterval) {\n      clearInterval(heartbeatInterval);\n      heartbeatInterval = null;\n    }\n  }\n\n  /**\n   * التحقق من حالة المسارات وإصلاح المشاكل المحتملة\n   */\n  function checkAndFixTracks() {\n    if (!globalPeerConnection || !globalRemoteStream) {\n      if (DEBUG) console.log('[WebRTC] Cannot fix tracks: missing connection or stream');\n      return false;\n    }\n    \n    if (DEBUG) console.log('[WebRTC] Checking and fixing tracks');\n    \n    // التحقق من المرسلين (المسارات المحلية)\n    const senders = globalPeerConnection.getSenders();\n    if (senders.length === 0 && globalLocalStream) {\n      if (DEBUG) console.log('[WebRTC] No senders found, re-adding local tracks');\n      \n      globalLocalStream.getTracks().forEach((track: MediaStreamTrack) => {\n        globalPeerConnection?.addTrack(track, globalLocalStream!);\n      });\n    } else if (senders.length > 0 && globalLocalStream) {\n      if (DEBUG) console.log(`[WebRTC] Found ${senders.length} senders, checking state`);\n      \n      // التحقق من أن المرسلين يستخدمون المسارات المحلية الحالية\n      const localTracks = globalLocalStream.getTracks();\n      senders.forEach((sender) => {\n        if (sender.track && sender.track.readyState !== 'live') {\n          const matchingLocalTrack = localTracks.find(track => track.kind === sender.track?.kind);\n          if (matchingLocalTrack) {\n            if (DEBUG) console.log(`[WebRTC] Replacing inactive track with active one`);\n            sender.replaceTrack(matchingLocalTrack);\n          }\n        }\n      });\n    }\n    \n    // التحقق من المستقبلين (المسارات البعيدة)\n    const receivers = globalPeerConnection.getReceivers();\n    if (receivers.length > 0) {\n      if (DEBUG) console.log(`[WebRTC] Found ${receivers.length} receivers`);\n      \n      let hasAudioReceiver = false;\n      receivers.forEach((receiver) => {\n        if (receiver.track && receiver.track.kind === 'audio') {\n          hasAudioReceiver = true;\n          \n          // التأكد من أن المسار موجود في التدفق البعيد\n          const trackInStream = globalRemoteStream?.getTracks().some(t => t.id === receiver.track?.id);\n          if (!trackInStream && globalRemoteStream) {\n            if (DEBUG) console.log('[WebRTC] Adding missing track to remote stream');\n            globalRemoteStream.addTrack(receiver.track);\n          }\n        }\n      });\n      \n      if (!hasAudioReceiver) {\n        if (DEBUG) console.log('[WebRTC] No audio receivers found!');\n      }\n    }\n    \n    // تحديث معلومات التشخيص\n    updateDebugInfo();\n    \n    // فحص وإصلاح مشاكل الاتصال الصوتي\n    diagnoseAndFixAudioIssues();\n  }\n  \n  /**\n   * فحص وإصلاح مشاكل الاتصال الصوتي\n   * تستخدم هذه الوظيفة للتحقق من مسارات الصوت وإصلاح المشاكل الشائعة\n   */\n  function diagnoseAndFixAudioIssues() {\n    if (DEBUG) console.log('[WebRTC] 🔍 Diagnosing audio connection issues');\n    \n    // فحص حالة الاتصال\n    if (!globalPeerConnection) {\n      if (DEBUG) console.log('[WebRTC] 🔴 No peer connection exists');\n      return false;\n    }\n    \n    if (DEBUG) {\n      console.log(`[WebRTC] Connection state: ${globalPeerConnection.connectionState}`);\n      console.log(`[WebRTC] ICE connection state: ${globalPeerConnection.iceConnectionState}`);\n      console.log(`[WebRTC] Signaling state: ${globalPeerConnection.signalingState}`);\n    }\n    \n    // فحص مسارات الصوت المستقبلة\n    const receivers = globalPeerConnection.getReceivers();\n    console.log(`[WebRTC] Connection has ${receivers.length} receivers`);\n    \n    let foundAudioReceiver = false;\n    let audioReceiverStats = {};\n    \n    // حصر جميع الإحصاءات للتشخيص\n    globalPeerConnection.getStats().then((stats) => {\n      stats.forEach((report) => {\n        if (report.type === 'inbound-rtp' && report.kind === 'audio') {\n          audioReceiverStats = report;\n          console.log('[WebRTC] Audio receiver stats:', report);\n          \n          // فحص وجود حزم صوتية\n          if (report.packetsReceived === 0 || report.bytesReceived === 0) {\n            console.log('[WebRTC] 🔴 Warning: No audio packets received!');\n          } else {\n            console.log(`[WebRTC] ✅ Receiving audio: ${report.packetsReceived} packets, ${report.bytesReceived} bytes`);\n          }\n        }\n      });\n    }).catch(e => console.error('[WebRTC] Error getting stats:', e));\n    \n    receivers.forEach((receiver, i) => {\n      const track = receiver.track;\n      if (track && track.kind === 'audio') {\n        foundAudioReceiver = true;\n        console.log(`[WebRTC] Audio receiver ${i} - Track: ${track.label}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n        \n        // محاولة إصلاح المسارات المعطلة\n        if (!track.enabled || track.muted) {\n          console.log('[WebRTC] 🟠 Found disabled/muted audio track, enabling it');\n          track.enabled = true;\n        }\n        \n        // إضافة مستمعين أحداث للمسار\n        track.onmute = () => {\n          console.log('[WebRTC] Track muted event - automatically unmuting');\n          track.enabled = true;\n        };\n        \n        track.onended = () => {\n          console.log('[WebRTC] Track ended event - attempting to recreate connection');\n          if (!isRestartingIce && globalPeerConnection && globalPeerConnection.connectionState === 'connected') {\n            attemptConnectionRecovery();\n          }\n        };\n      }\n    });\n    \n    if (!foundAudioReceiver) {\n      console.log('[WebRTC] 🔴 No audio receivers found. Remote party may not be sending audio.');\n      \n      // التحقق من ترانسيفرز - وإعدادها للاستقبال إذا لزم الأمر\n      const transceivers = globalPeerConnection.getTransceivers();\n      let fixedTransceivers = false;\n      \n      transceivers.forEach((transceiver) => {\n        console.log(`[WebRTC] Transceiver direction: ${transceiver.direction}, currentDirection: ${transceiver.currentDirection}`);\n        \n        // التأكد من أن الترانسيفر مهيئ لاستقبال الصوت\n        if (transceiver.direction === 'sendonly' || transceiver.direction === 'inactive') {\n          try {\n            console.log('[WebRTC] 🟠 Fixing transceiver direction to sendrecv');\n            transceiver.direction = 'sendrecv';\n            fixedTransceivers = true;\n          } catch (e) {\n            console.error('[WebRTC] Error updating transceiver direction:', e);\n          }\n        }\n      });\n      \n      // إعادة التفاوض إذا تم إجراء أي تغييرات على ترانسيفرز\n      if (fixedTransceivers && !isNegotiating) {\n        console.log('[WebRTC] Triggering renegotiation after fixing transceivers');\n        startNegotiation();\n      }\n      \n      // محاولة إصلاح حالة استقبال الصوت\n      if (globalPeerConnection.connectionState === 'connected') {\n        console.log('[WebRTC] 🟠 Connection is established but no audio receivers. Checking SDP parameters...');\n        \n        // طلب المسارات البعيدة من الطرف الآخر مرة أخرى إذا كان الاتصال ناجحًا\n        if (!isNegotiating && partnerId.value) {\n          console.log('[WebRTC] Trying to recover audio by sending refresh signal');\n          socket.value?.emit('webrtc-signal', {\n            type: 'refresh-tracks',\n            to: partnerId.value\n          });\n        }\n      }\n    }\n    \n    // فحص مسارات الصوت المحلية\n    if (globalLocalStream) {\n      const localAudioTracks = globalLocalStream.getAudioTracks();\n      console.log(`[WebRTC] Local stream has ${localAudioTracks.length} audio tracks`);\n      \n      if (localAudioTracks.length === 0) {\n        // لا توجد مسارات صوت محلية، محاولة إعادة تهيئة الميكروفون\n        console.log('[WebRTC] 🔴 No local audio tracks! Trying to reinitialize microphone...');\n        initializeLocalStream().then(() => {\n          if (globalPeerConnection && globalPeerConnection.connectionState === 'connected') {\n            console.log('[WebRTC] Added new local audio tracks, restarting connection');\n            // إعادة بدء الاتصال مع المسارات الجديدة\n            startNegotiation();\n          }\n        }).catch(e => console.error('[WebRTC] Failed to reinitialize local stream:', e));\n      } else {\n        localAudioTracks.forEach((track, i) => {\n          console.log(`[WebRTC] Local audio track ${i}: ${track.label}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n          \n          // التأكد من أن المسارات المحلية مفعلة (إلا إذا كان المستخدم قد قام بكتمها عمدًا)\n          if (!track.enabled && !globalIsAudioMuted.value) {\n            console.log('[WebRTC] 🟠 Local track disabled but not muted by user, enabling it');\n            track.enabled = true;\n          }\n        });\n      }\n    } else {\n      console.log('[WebRTC] 🔴 No local stream available');\n    }\n    \n    // فحص مسارات الصوت البعيدة\n    if (globalRemoteStream) {\n      const remoteAudioTracks = globalRemoteStream.getAudioTracks();\n      console.log(`[WebRTC] Remote stream has ${remoteAudioTracks.length} audio tracks`);\n      \n      remoteAudioTracks.forEach((track, i) => {\n        console.log(`[WebRTC] Remote audio track ${i}: ${track.label}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n        \n        // محاولة إصلاح المسارات المعطلة\n        if (!track.enabled || track.muted) {\n          console.log('[WebRTC] 🟠 Found disabled remote audio track, enabling it');\n          track.enabled = true;\n        }\n        \n        if (track.readyState !== 'live') {\n          console.log('[WebRTC] 🔴 Remote track not live! ReadyState:', track.readyState);\n          // التحقق مما إذا كان المسار نفسه موجود في المستقبلات\n          const matchingReceiver = globalPeerConnection ? Array.from(globalPeerConnection.getReceivers()).find(\n            receiver => receiver.track && receiver.track.id === track.id\n          ) : null;\n          \n          if (!matchingReceiver) {\n            console.log('[WebRTC] Remote track not found in receivers, attempting to recreate connection');\n            if (globalPeerConnection && globalPeerConnection.connectionState === 'connected' && !isNegotiating) {\n              startNegotiation();\n            }\n          }\n        }\n      });\n      \n      if (remoteAudioTracks.length === 0) {\n        console.log('[WebRTC] 🔴 No audio tracks in remote stream. Checking for receivers...');\n        \n        // محاولة إضافة مسارات من المستقبلات إلى التدفق البعيد\n        const audioReceivers = globalPeerConnection ? Array.from(globalPeerConnection.getReceivers())\n          .filter(receiver => receiver.track && receiver.track.kind === 'audio') : [];\n        \n        if (audioReceivers.length > 0) {\n          console.log('[WebRTC] Found audio receivers but they are not in remote stream. Adding them now.');\n          audioReceivers.forEach(receiver => {\n            if (receiver.track && globalRemoteStream) {\n              console.log('[WebRTC] Adding track from receiver to remote stream:', receiver.track.id);\n              globalRemoteStream.addTrack(receiver.track);\n            }\n          });\n          \n          // تحديث متغير التدفق البعيد للمكونات\n          remoteStream.value = globalRemoteStream;\n        }\n      }\n    } else if (globalPeerConnection && globalPeerConnection.getReceivers().length > 0) {\n      console.log('[WebRTC] 🔴 No remote stream but receivers exist! Creating new remote stream');\n      \n      // إنشاء تدفق بعيد جديد\n      globalRemoteStream = new MediaStream();\n      \n      // إضافة كل المسارات من المستقبلات\n      const audioReceivers = Array.from(globalPeerConnection.getReceivers())\n        .filter(receiver => receiver.track && receiver.track.kind === 'audio');\n      \n      if (audioReceivers.length > 0) {\n        audioReceivers.forEach(receiver => {\n          if (receiver.track && globalRemoteStream) {\n            console.log('[WebRTC] Adding track to new remote stream:', receiver.track.id);\n            globalRemoteStream.addTrack(receiver.track);\n          }\n        });\n      }\n      \n      // تحديث متغير التدفق البعيد للمكونات\n      remoteStream.value = globalRemoteStream;\n    } else {\n      console.log('[WebRTC] 🔴 No remote stream or receivers available');\n    }\n    \n    // التأكد من أن العنصر الصوتي يستخدم التدفق البعيد\n    setTimeout(() => {\n      const audioElements = document.querySelectorAll('audio');\n      if (audioElements.length > 0 && globalRemoteStream) {\n        console.log(`[WebRTC] Found ${audioElements.length} audio elements, ensuring they use remote stream`);\n        Array.from(audioElements).forEach((audioEl, i) => {\n          if (audioEl.srcObject !== globalRemoteStream) {\n            console.log(`[WebRTC] Audio element ${i} not using correct stream, updating`);\n            audioEl.srcObject = globalRemoteStream;\n            audioEl.muted = false;\n            audioEl.volume = 1.0;\n            \n            // محاولة تشغيل الصوت\n            audioEl.play().catch(e => console.log('[WebRTC] Error playing audio:', e));\n          }\n        });\n      }\n    }, 100);\n    \n    // إعادة فحص الحالة بعد فترة للتأكد من استقرارها\n    setTimeout(checkAndFixTracks, 3000);\n    \n    return true;\n  }\n  \n  // استعادة الاتصال بعد انقطاع\n  async function attemptConnectionRecovery() {\n    if (!globalPeerConnection || !partnerId.value) {\n        return;\n      }\n    \n    if (DEBUG) console.log('[WebRTC] Attempting connection recovery');\n    \n    try {\n      // آلية سريعة لإعادة استخدام حالة المفاوضة وتسريع الاتصال\n      isRestartingIce = true;\n      \n      // تبديل تكوين الخادم لتسريع الاتصال\n      if (currentRtcConfig === standardRtcConfiguration) {\n        currentRtcConfig = fastRtcConfiguration;\n        console.log('[WebRTC] Switching to fast configuration for quicker connection');\n      } else if (connectionRetryCount > 5) {\n        // إذا فشلت عدة محاولات، استخدم تكوين TURN فقط\n        currentRtcConfig = turnOnlyRtcConfiguration;\n        console.log('[WebRTC] Switching to TURN-only configuration');\n      }\n      \n      // إعادة تشغيل ICE بشكل مباشر\n      if (globalPeerConnection.restartIce) {\n        globalPeerConnection.restartIce();\n        \n        // إنشاء عرض جديد مع تمكين إعادة تشغيل ICE\n        const offer = await globalPeerConnection.createOffer({ \n          iceRestart: true,\n          offerToReceiveAudio: true\n        });\n        \n        await globalPeerConnection.setLocalDescription(offer);\n        \n        if (socket.value) {\n          // إرسال العرض فوراً دون انتظار\n          socket.value.emit('offer', {\n            offer: globalPeerConnection.localDescription,\n            to: partnerId.value\n          });\n          \n          // أيضا إرسال بالتنسيق الجديد\n          socket.value.emit('webrtc-signal', {\n            type: 'offer',\n            offer: globalPeerConnection.localDescription,\n            to: partnerId.value\n          });\n        }\n      }\n      \n      // إعادة تعيين علم إعادة التشغيل بعد فترة قصيرة\n      setTimeout(() => {\n        isRestartingIce = false;\n      }, 500);\n      \n    } catch (error) {\n      console.error('[WebRTC] Recovery attempt failed:', error);\n      isRestartingIce = false;\n      \n      // في حالة الفشل، إعادة بدء الاتصال من البداية\n      if (connectionRetryCount < MAX_CONNECTION_RETRIES) {\n        setTimeout(() => {\n          closeConnection();\n          if (partnerId.value) {\n            createOffer(partnerId.value);\n          }\n        }, 200);\n      }\n    }\n  }\n  \n  // إتاحة معلومات التشخيص للواجهة عبر كائن عام\n  function updateDebugInfo() {\n    if (typeof window !== 'undefined') {\n      (window as any).__webrtc_debug = {\n        connectionState: globalConnectionState.value,\n        connectionRetryCount,\n        lastConnectionError,\n        failureReason,\n        isNegotiating,\n        isRestartingIce,\n        pendingCandidates: pendingCandidates.length,\n        hasLocalTracks: globalLocalStream ? globalLocalStream.getAudioTracks().length > 0 : false,\n        hasRemoteTracks: globalRemoteStream ? globalRemoteStream.getAudioTracks().length > 0 : false\n      };\n    }\n  }\n\n  // تحديث معلومات التشخيص عند تغيير الحالة\n  watch(() => globalConnectionState.value, () => {\n    updateDebugInfo();\n  });\n  \n  // دالة لمراقبة جودة الاتصال\n  function startConnectionMonitoring() {\n    if (connectionMonitorInterval) {\n      clearInterval(connectionMonitorInterval);\n    }\n    \n    // تتبع مرشحات ICE المحلية والبعيدة للتشخيص\n    if (typeof window !== 'undefined') {\n      (window as any).__localIceCandidates = [];\n      (window as any).__remoteIceCandidates = [];\n      (window as any).__iceCandidatePairs = [];\n    }\n    \n    // إضافة مستمع لمرشحات ICE المحلية\n    if (globalPeerConnection) {\n      globalPeerConnection.onicecandidate = (event) => {\n        if (event.candidate) {\n          if (DEBUG) console.log('[WebRTC] ICE candidate generated:', event.candidate.candidate);\n          \n          // حفظ المرشح للتشخيص\n          if (typeof window !== 'undefined') {\n            (window as any).__localIceCandidates = (window as any).__localIceCandidates || [];\n            (window as any).__localIceCandidates.push({\n              candidate: event.candidate.candidate,\n              timestamp: Date.now()\n            });\n          }\n          \n          // إرسال المرشح للطرف الآخر\n          if (socket.value && partnerId.value) {\n            if (DEBUG) console.log('[WebRTC] Sending ICE candidate to partner');\n            socket.value.emit('ice-candidate', {\n              candidate: event.candidate,\n              to: partnerId.value\n            });\n          }\n        }\n      };\n    }\n    \n    connectionMonitorInterval = window.setInterval(async () => {\n      if (!globalPeerConnection || globalConnectionState.value !== 'connecting' && globalConnectionState.value !== 'connected') {\n        stopConnectionMonitoring();\n        return;\n      }\n      \n      try {\n        // جمع إحصائيات الاتصال\n        const stats = await getConnectionStats();\n        \n        // تتبع أزواج المرشحات ICE\n        if (stats && stats.iceCandidatePairs) {\n          if (typeof window !== 'undefined') {\n            (window as any).__iceCandidatePairs = stats.iceCandidatePairs;\n          }\n        }\n        \n        // تحقق من جودة الاتصال\n        checkConnectionHealth(stats);\n      } catch (error) {\n        console.error('[WebRTC] Error monitoring connection:', error);\n      }\n    }, CONNECTION_MONITOR_INTERVAL) as unknown as number;\n  }\n\n  // إيقاف مراقبة الاتصال\n  function stopConnectionMonitoring() {\n    if (connectionMonitorInterval) {\n      clearInterval(connectionMonitorInterval);\n      connectionMonitorInterval = null;\n    }\n  }\n\n  // التحقق من صحة الاتصال بناءً على الإحصائيات\n  function checkConnectionHealth(stats: any) {\n    if (!stats || stats.error) return;\n    \n    // فحص مسارات الصوت\n    const hasAudioIssues = !stats.media || stats.media.length === 0 || \n                           !stats.media.some((m: any) => m.kind === 'audio' && m.audioLevel > 0);\n    \n    // فحص أزواج المرشحين\n    const hasCandidatePairIssues = !stats.selectedCandidatePair || \n                                  stats.selectedCandidatePair.state !== 'succeeded';\n    \n    if (hasAudioIssues || hasCandidatePairIssues) {\n      if (DEBUG) console.log('[WebRTC] Connection health issues detected, trying to fix...');\n      \n      // إعادة التحقق من المسارات\n      checkAndFixTracks();\n      \n      // إذا استمرت المشاكل، محاولة إعادة الاتصال\n      if (globalConnectionState.value === 'connected' && connectionRetryCount < MAX_CONNECTION_RETRIES) {\n        connectionRetryCount++;\n        if (DEBUG) console.log(`[WebRTC] Attempting connection improvement (${connectionRetryCount}/${MAX_CONNECTION_RETRIES})`);\n        \n        // استخدام طريقة أكثر لطفًا لتحسين الاتصال\n        if (globalPeerConnection && globalPeerConnection.getTransceivers) {\n          globalPeerConnection.getTransceivers().forEach(transceiver => {\n            if (transceiver.sender && transceiver.sender.track && transceiver.sender.track.kind === 'audio') {\n              transceiver.sender.setParameters({\n                ...transceiver.sender.getParameters(),\n                degradationPreference: 'maintain-framerate'\n              });\n            }\n          });\n        }\n      }\n    }\n  }\n  \n  // Add a new function to explicitly handle connection timeout\n  function setupConnectionTimeout(pc: RTCPeerConnection): void {\n    if (!partnerId.value) return;\n    \n    // Clear any existing connection timeout\n    if ((window as any).__webrtcConnectionTimeout) {\n      clearTimeout((window as any).__webrtcConnectionTimeout);\n    }\n    \n    // تقليل وقت الانتظار لتسريع عملية التبديل بين التكوينات\n    const quickTimeout = 5000; // 5 ثواني فقط لتجربة التكوين الأول\n    \n    // Set a quick first timeout to try fast configuration quickly\n    (window as any).__webrtcConnectionTimeout = setTimeout(() => {\n      if (pc.connectionState === 'connecting' || pc.connectionState === 'new') {\n        if (DEBUG) console.log(`[WebRTC] Connection not established after ${quickTimeout/1000} seconds, trying fast config`);\n        \n        // التبديل مباشرة إلى التكوين السريع لتسريع الاتصال\n        currentRtcConfig = fastRtcConfiguration;\n        \n        if (partnerId.value && !isNegotiating) {\n          // محاولة سريعة باستخدام الإعداد الجديد\n          createOffer(partnerId.value);\n        }\n        \n        // Set a second timeout for TURN-only config\n        (window as any).__webrtcConnectionTimeout = setTimeout(() => {\n          if (pc.connectionState === 'connecting' || pc.connectionState === 'new') {\n            if (DEBUG) console.log(`[WebRTC] Connection still not established, trying TURN-only config`);\n        \n        // جمع معلومات تشخيصية إضافية\n        const candidateInfo = {\n          localCandidates: (window as any).__localIceCandidates?.length || 0,\n          remoteCandidates: (window as any).__remoteIceCandidates?.length || 0,\n          iceCandidatePairsCount: (window as any).__iceCandidatePairs?.length || 0\n        };\n        \n        console.log('[WebRTC] Connection diagnostic info:', JSON.stringify(candidateInfo));\n            \n            // تغيير التكوين إلى خوادم TURN فقط للاتصال في الحالات الصعبة\n            currentRtcConfig = turnOnlyRtcConfiguration;\n            \n            // إغلاق الاتصال الحالي وبدء اتصال جديد بالتكوين الجديد\n          closeConnection();\n          \n            if (partnerId.value) {\n              setTimeout(() => {\n              createOffer(partnerId.value);\n              }, 200);\n            }\n        }\n        }, 5000); // 5 ثواني إضافية للتكوين TURN\n      }\n    }, quickTimeout);\n  }\n  \n  // دالة للحصول على تقرير تشخيصي شامل\n  function getConnectionDiagnosticReport(): string {\n    const peerConn = globalPeerConnection;\n    const report = [];\n    \n    report.push(`Connection State: ${peerConn?.connectionState || 'none'}`);\n    report.push(`Signaling State: ${peerConn?.signalingState || 'none'}`);\n    report.push(`ICE Connection State: ${peerConn?.iceConnectionState || 'none'}`);\n    report.push(`ICE Gathering State: ${peerConn?.iceGatheringState || 'none'}`);\n    report.push(`Reconnection Attempts: ${connectionRetryCount}/${MAX_CONNECTION_RETRIES}`);\n    report.push(`Last Error: ${lastConnectionError || 'none'}`);\n    report.push(`Local Audio Tracks: ${globalLocalStream?.getAudioTracks().length || 0}`);\n    report.push(`Remote Audio Tracks: ${globalRemoteStream?.getAudioTracks().length || 0}`);\n    report.push(`Local Candidates: ${(window as any).__localIceCandidates?.length || 0}`);\n    report.push(`Remote Candidates: ${(window as any).__remoteIceCandidates?.length || 0}`);\n    report.push(`Is Negotiating: ${isNegotiating}`);\n    report.push(`Is Restarting ICE: ${isRestartingIce}`);\n    \n    return report.join('\\n');\n  }\n  \n  /**\n   * معالجة مرشح ICE من النظير البعيد\n   */\n  const handleIceCandidate = async (candidate: RTCIceCandidate): Promise<void> => {\n    if (!globalPeerConnection) {\n      if (DEBUG) console.log('[WebRTC] Received ICE candidate but no peer connection exists');\n        return;\n      }\n      \n      try {\n      if (DEBUG) console.log('[WebRTC] Adding received ICE candidate:', candidate.candidate);\n      \n      // Store remote candidates for diagnostics\n      if (!(window as any).__remoteIceCandidates) {\n        (window as any).__remoteIceCandidates = [];\n      }\n      (window as any).__remoteIceCandidates.push(candidate);\n      \n      // التحقق من أن الوصف المحلي موجود قبل إضافة المرشحين\n      if (!globalPeerConnection.remoteDescription || !globalPeerConnection.localDescription) {\n        if (DEBUG) console.log('[WebRTC] Delaying ICE candidate addition until descriptions are set');\n        \n        // تخزين المرشح للإضافة لاحقًا بعد ضبط الوصف\n        setTimeout(async () => {\n          if (globalPeerConnection && globalPeerConnection.remoteDescription) {\n            if (DEBUG) console.log('[WebRTC] Adding delayed ICE candidate after timeout');\n            try {\n              await globalPeerConnection.addIceCandidate(candidate);\n      } catch (error) {\n              console.error('[WebRTC] Error adding delayed ICE candidate:', error);\n            }\n          }\n        }, 1000);\n        \n        return;\n      }\n      \n      // محاولة إضافة المرشح\n      await globalPeerConnection.addIceCandidate(candidate);\n      \n      if (DEBUG) console.log('[WebRTC] Successfully added ICE candidate');\n    } catch (error) {\n      console.error('[WebRTC] Error adding ICE candidate:', error);\n      lastConnectionError = `Error adding ICE candidate: ${error}`;\n      \n      // محاولة ثانية بعد تأخير\n      setTimeout(async () => {\n        if (globalPeerConnection && globalPeerConnection.remoteDescription) {\n          if (DEBUG) console.log('[WebRTC] Retrying to add ICE candidate after error');\n          try {\n            await globalPeerConnection.addIceCandidate(candidate);\n            if (DEBUG) console.log('[WebRTC] Successfully added ICE candidate on retry');\n          } catch (retryError) {\n            console.error('[WebRTC] Error adding ICE candidate on retry:', retryError);\n          }\n        }\n      }, 2000);\n    }\n  };\n  \n  // تم حذف التعريفات المكررة\n  \n  /**\n   * بدء تفاوض جديد على الاتصال WebRTC\n   */\n  function startNegotiation(): void {\n    if (!globalPeerConnection || !partnerId.value || isNegotiating) {\n      if (DEBUG) console.log('[WebRTC] Cannot start negotiation: missing connection, partner ID, or already negotiating');\n      return;\n    }\n    \n    if (DEBUG) console.log('[WebRTC] Starting new negotiation');\n    isNegotiating = true;\n    \n    try {\n      // بدء تفاوض جديد بإنشاء عرض\n      globalPeerConnection.createOffer({\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: false,\n      })\n      .then(offer => {\n        if (!globalPeerConnection) return;\n        return globalPeerConnection.setLocalDescription(offer);\n      })\n      .then(() => {\n        if (!globalPeerConnection || !socket.value || !partnerId.value) return;\n        \n        // إرسال العرض الجديد\n        socket.value.emit('voice-offer', {\n          offer: globalPeerConnection.localDescription,\n          to: partnerId.value\n        });\n        \n        if (DEBUG) console.log('[WebRTC] Sent renegotiation offer');\n      })\n      .catch(error => {\n        console.error('[WebRTC] Error during negotiation:', error);\n      })\n      .finally(() => {\n        // إعادة تعيين العلم بعد فترة\n        setTimeout(() => {\n          isNegotiating = false;\n        }, 2000);\n      });\n    } catch (error) {\n      console.error('[WebRTC] Failed to start negotiation:', error);\n      isNegotiating = false;\n    }\n  }\n  \n  // إضافة وظيفة لمعلومات التشخيص\n  const diagnosticReport = {\n    connectionState: globalConnectionState.value,\n    iceCandidatesGenerated: pendingCandidates.length,\n    localStreamActive: !!globalLocalStream && globalLocalStream.active,\n    remoteStreamActive: !!globalRemoteStream && globalRemoteStream.active,\n    localTracks: globalLocalStream ? globalLocalStream.getAudioTracks().length : 0,\n    remoteTracks: globalRemoteStream ? globalRemoteStream.getAudioTracks().length : 0,\n    connectionRetries: connectionRetryCount,\n    lastError: lastConnectionError || failureReason || '',\n    isAudioMuted: globalIsAudioMuted.value,\n    forceReconnect: () => {\n      if (globalPeerConnection && globalConnectionState.value !== 'new') {\n        attemptConnectionRecovery();\n        return true;\n      }\n      return false;\n    }\n  };\n  \n  return {\n    socket,\n    peerConnection,\n    remoteStream,\n    localStream,\n    connectionState,\n    isAudioMuted,\n    partnerId,\n    createOffer,\n    handleOffer,\n    handleAnswer,\n    handleIceCandidate,\n    toggleMicrophone,\n    closeConnection,\n    initializeLocalStream,\n    cleanup,\n    diagnosticReport\n  };\n}\n\n// Fix for signaling state check\nfunction isSignalingStateStable(pc: RTCPeerConnection): boolean {\n  return pc.signalingState === 'stable';\n}\n\n// إضافة دالة للتحقق من إمكانية تعيين الوصف المحلي\nfunction canSetLocalDescription(pc: RTCPeerConnection): boolean {\n  return pc.signalingState === 'stable' || pc.signalingState === 'have-remote-offer';\n}\n\n// Function to update the global connection state in a centralized way\nfunction updateGlobalState(state: string): void {\n  // Only update if state actually changed\n  if (globalConnectionState.value !== state) {\n    if (DEBUG) console.log(`[WebRTC] Connection state changing from ${globalConnectionState.value} to ${state}`);\n    globalConnectionState.value = state;\n    \n    // Additional state-specific actions\n    if (state === 'connected' || state === 'completed') {\n      // Reset failure tracking when we connect successfully\n      failureReason = '';\n      lastConnectionError = '';\n      connectionRetryCount = 0;\n      \n      // Log success for debugging\n      console.log('[WebRTC] Connection established successfully');\n    } \n    else if (state === 'failed' || state === 'disconnected') {\n      console.warn(`[WebRTC] Connection ${state}: ${failureReason || 'Unknown reason'}`);\n      \n      // Track failures\n      if (state === 'failed') {\n        connectionRetryCount++;\n        console.log(`[WebRTC] Connection failure count: ${connectionRetryCount}/${MAX_CONNECTION_RETRIES}`);\n      }\n    }\n  }\n}\n","import { ref } from 'vue';\r\n\r\n// Check if localStorage is available\r\nfunction isLocalStorageAvailable(): boolean {\r\n  const test = 'test';\r\n  try {\r\n    localStorage.setItem(test, test);\r\n    localStorage.removeItem(test);\r\n    return true;\r\n  } catch (e) {\r\n    console.error('localStorage is not available:', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * A wrapper for localStorage with error handling\r\n */\r\nexport function useLocalStorage() {\r\n  const isAvailable = ref(isLocalStorageAvailable());\r\n  \r\n  /**\r\n   * Set an item in localStorage\r\n   */\r\n  function setItem(key: string, value: string): void {\r\n    if (!isAvailable.value) {\r\n      console.warn('localStorage is not available, cannot set item');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      localStorage.setItem(key, value);\r\n    } catch (error) {\r\n      console.error('Failed to set localStorage item:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get an item from localStorage\r\n   */\r\n  function getItem(key: string): string | null {\r\n    if (!isAvailable.value) {\r\n      console.warn('localStorage is not available, cannot get item');\r\n      return null;\r\n    }\r\n    \r\n    try {\r\n      return localStorage.getItem(key);\r\n    } catch (error) {\r\n      console.error('Failed to get localStorage item:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Remove an item from localStorage\r\n   */\r\n  function removeItem(key: string): void {\r\n    if (!isAvailable.value) {\r\n      console.warn('localStorage is not available, cannot remove item');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      localStorage.removeItem(key);\r\n    } catch (error) {\r\n      console.error('Failed to remove localStorage item:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Clear all items from localStorage\r\n   */\r\n  function clear(): void {\r\n    if (!isAvailable.value) {\r\n      console.warn('localStorage is not available, cannot clear storage');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      localStorage.clear();\r\n    } catch (error) {\r\n      console.error('Failed to clear localStorage:', error);\r\n    }\r\n  }\r\n  \r\n  return {\r\n    isAvailable,\r\n    setItem,\r\n    getItem,\r\n    removeItem,\r\n    clear\r\n  };\r\n}\r\n\r\n/**\r\n * Save a call record to history\r\n * @param partnerId The ID of the call partner\r\n * @param duration The call duration in seconds\r\n * @param gamesPlayed Array of games played during the call\r\n */\r\nexport function saveCallToHistory(partnerId: string, duration: number, gamesPlayed: string[] = []): void {\r\n  const { getItem, setItem } = useLocalStorage();\r\n  \r\n  try {\r\n    // Get existing history\r\n    const existingHistory = getItem('callHistory');\r\n    let history: any[] = [];\r\n    \r\n    if (existingHistory) {\r\n      history = JSON.parse(existingHistory);\r\n    }\r\n    \r\n    // Create new history entry\r\n    const newEntry = {\r\n      partnerId,\r\n      timestamp: new Date().toISOString(),\r\n      duration,\r\n      gamesPlayed\r\n    };\r\n    \r\n    // Add to history (at the beginning)\r\n    history.unshift(newEntry);\r\n    \r\n    // Limit history to last 20 entries\r\n    if (history.length > 20) {\r\n      history = history.slice(0, 20);\r\n    }\r\n    \r\n    // Save updated history\r\n    setItem('callHistory', JSON.stringify(history));\r\n  } catch (error) {\r\n    console.error('Error saving call to history:', error);\r\n  }\r\n}\r\n","import { ref, watch, shallowRef } from 'vue';\r\nimport { useSocket } from './socket';\r\nimport { useLocalStorage } from './storage';\r\n\r\n// Types\r\nexport interface ChatMessage {\r\n  sender: 'me' | 'partner';\r\n  text: string;\r\n  timestamp: number;\r\n}\r\n\r\n// Global state for chat\r\nconst allMessages = ref<Record<string, ChatMessage[]>>({});\r\nconst currentPartnerId = ref<string | null>(null);\r\nconst unreadMessages = ref<Record<string, boolean>>({});\r\nconst isListening = ref(false);\r\n\r\n// Debug flag\r\nconst DEBUG = true;\r\n\r\n// Create a singleton instance to ensure the service is only initialized once\r\nlet isInitialized = false;\r\n\r\n/**\r\n * Centralized chat service to handle messaging across components\r\n */\r\nexport function useChat() {\r\n  const { socket, userId } = useSocket();\r\n  const storage = useLocalStorage();\r\n\r\n  // Initialize the service if not already done\r\n  if (!isInitialized) {\r\n    if (DEBUG) console.log('[ChatService] Initializing chat service');\r\n    initializeChatService();\r\n    isInitialized = true;\r\n  } else {\r\n    if (DEBUG) console.log('[ChatService] Using existing chat service instance');\r\n  }\r\n\r\n  /**\r\n   * Initialize the chat service\r\n   */\r\n  function initializeChatService() {\r\n    // Set up global socket listeners\r\n    setupGlobalSocketListeners();\r\n\r\n    // Load all saved chats from localStorage\r\n    loadAllChats();\r\n\r\n    // Watch for changes to messages and save them\r\n    watch(allMessages, () => {\r\n      saveAllChats();\r\n    }, { deep: true });\r\n\r\n    // When socket changes (after reconnection), ensure we're still listening\r\n    watch(() => socket.value, (newSocket) => {\r\n      if (newSocket && !isListening.value) {\r\n        if (DEBUG) console.log('[ChatService] Socket reconnected, setting up listeners again');\r\n        setupGlobalSocketListeners();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up global socket listeners for chat messages\r\n   */\r\n  function setupGlobalSocketListeners() {\r\n    if (!socket.value) {\r\n      if (DEBUG) console.log('[ChatService] No socket available, cannot set up listeners');\r\n      return;\r\n    }\r\n    \r\n    if (isListening.value) {\r\n      // Remove existing listeners to prevent duplicates\r\n      if (DEBUG) console.log('[ChatService] Removing existing chat-message listener');\r\n      socket.value.off('chat-message');\r\n      isListening.value = false;\r\n    }\r\n\r\n    if (DEBUG) console.log('[ChatService] Setting up chat-message listener');\r\n    \r\n    // Listen for incoming messages globally\r\n    socket.value.on('chat-message', (data: { text: string; from: string; timestamp: number }) => {\r\n      if (DEBUG) console.log('[ChatService] Received chat message:', data);\r\n      \r\n      // Create conversation key\r\n      const partnerId = data.from;\r\n      const conversationKey = getConversationKey(partnerId);\r\n\r\n      if (DEBUG) console.log(`[ChatService] Conversation key: ${conversationKey}, current partner: ${currentPartnerId.value}`);\r\n\r\n      // Initialize conversation if it doesn't exist\r\n      if (!allMessages.value[conversationKey]) {\r\n        allMessages.value[conversationKey] = [];\r\n      }\r\n\r\n      // Add message to conversation\r\n      allMessages.value[conversationKey].push({\r\n        sender: 'partner',\r\n        text: data.text,\r\n        timestamp: data.timestamp || Date.now()\r\n      });\r\n\r\n      // Mark as unread if it's not the current conversation\r\n      if (partnerId !== currentPartnerId.value) {\r\n        unreadMessages.value[partnerId] = true;\r\n        if (DEBUG) console.log(`[ChatService] Marked message from ${partnerId} as unread`);\r\n      }\r\n\r\n      // Save to localStorage\r\n      saveAllChats();\r\n      \r\n      if (DEBUG) console.log(`[ChatService] Updated messages:`, allMessages.value[conversationKey]);\r\n    });\r\n\r\n    isListening.value = true;\r\n    if (DEBUG) console.log('[ChatService] Chat message listener setup complete');\r\n  }\r\n\r\n  /**\r\n   * Set the current partner ID\r\n   */\r\n  function setCurrentPartner(partnerId: string | null) {\r\n    if (DEBUG) console.log(`[ChatService] Setting current partner: ${partnerId}`);\r\n    currentPartnerId.value = partnerId;\r\n\r\n    // Clear unread messages for this partner\r\n    if (partnerId) {\r\n      unreadMessages.value[partnerId] = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send a message to the current partner\r\n   */\r\n  function sendMessage(text: string, toPartnerId: string | null = null) {\r\n    // Use specified partner or current partner\r\n    const partnerId = toPartnerId || currentPartnerId.value;\r\n    \r\n    if (!partnerId || !text.trim() || !socket.value) {\r\n      if (DEBUG) console.log(`[ChatService] Cannot send message: partnerId=${partnerId}, text=${text.trim() ? 'present' : 'empty'}, socket=${socket.value ? 'present' : 'not present'}`);\r\n      return false;\r\n    }\r\n\r\n    if (DEBUG) console.log(`[ChatService] Sending message to ${partnerId}: ${text}`);\r\n\r\n    // Create conversation key\r\n    const conversationKey = getConversationKey(partnerId);\r\n\r\n    // Initialize conversation if it doesn't exist\r\n    if (!allMessages.value[conversationKey]) {\r\n      allMessages.value[conversationKey] = [];\r\n    }\r\n\r\n    // Add message to our local state\r\n    const timestamp = Date.now();\r\n    allMessages.value[conversationKey].push({\r\n      sender: 'me',\r\n      text: text.trim(),\r\n      timestamp\r\n    });\r\n\r\n    // Send message to partner\r\n    socket.value.emit('chat-message', {\r\n      text: text.trim(),\r\n      to: partnerId\r\n    });\r\n    \r\n    if (DEBUG) console.log(`[ChatService] Message sent, current messages:`, allMessages.value[conversationKey]);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get messages for a specific partner\r\n   */\r\n  function getMessages(partnerId: string | null): ChatMessage[] {\r\n    if (!partnerId) return [];\r\n\r\n    const conversationKey = getConversationKey(partnerId);\r\n    const messages = allMessages.value[conversationKey] || [];\r\n    \r\n    if (DEBUG) console.log(`[ChatService] Getting messages for ${partnerId}, found ${messages.length} messages`);\r\n    return messages;\r\n  }\r\n\r\n  /**\r\n   * Check if there are unread messages from a partner\r\n   */\r\n  function hasUnreadMessages(partnerId: string | null): boolean {\r\n    if (!partnerId) return false;\r\n    const hasUnread = !!unreadMessages.value[partnerId];\r\n    if (DEBUG) console.log(`[ChatService] Checking unread for ${partnerId}: ${hasUnread}`);\r\n    return hasUnread;\r\n  }\r\n\r\n  /**\r\n   * Mark messages as read for a partner\r\n   */\r\n  function markAsRead(partnerId: string | null) {\r\n    if (!partnerId) return;\r\n    if (DEBUG) console.log(`[ChatService] Marking messages as read for ${partnerId}`);\r\n    unreadMessages.value[partnerId] = false;\r\n  }\r\n\r\n  /**\r\n   * Get a unique key for a conversation\r\n   */\r\n  function getConversationKey(partnerId: string): string {\r\n    if (!userId.value) return partnerId;\r\n    \r\n    // Create a consistent key regardless of who initiated the chat\r\n    const ids = [userId.value, partnerId].sort();\r\n    return `${ids[0]}_${ids[1]}`;\r\n  }\r\n\r\n  /**\r\n   * Save all chats to localStorage\r\n   */\r\n  function saveAllChats() {\r\n    if (!storage.isAvailable.value) {\r\n      if (DEBUG) console.log('[ChatService] localStorage not available, cannot save chats');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Save messages\r\n      storage.setItem('chat_messages', JSON.stringify(allMessages.value));\r\n      \r\n      // Save unread status\r\n      storage.setItem('chat_unread', JSON.stringify(unreadMessages.value));\r\n      \r\n      if (DEBUG) console.log('[ChatService] Saved chats to localStorage');\r\n    } catch (error) {\r\n      console.error('[ChatService] Failed to save chats:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load all saved chats from localStorage\r\n   */\r\n  function loadAllChats() {\r\n    if (!storage.isAvailable.value) {\r\n      if (DEBUG) console.log('[ChatService] localStorage not available, cannot load chats');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Load messages\r\n      const savedMessages = storage.getItem('chat_messages');\r\n      if (savedMessages) {\r\n        allMessages.value = JSON.parse(savedMessages);\r\n        if (DEBUG) console.log('[ChatService] Loaded messages from localStorage:', Object.keys(allMessages.value).length, 'conversations');\r\n      }\r\n\r\n      // Load unread status\r\n      const savedUnread = storage.getItem('chat_unread');\r\n      if (savedUnread) {\r\n        unreadMessages.value = JSON.parse(savedUnread);\r\n        if (DEBUG) console.log('[ChatService] Loaded unread status from localStorage');\r\n      }\r\n    } catch (error) {\r\n      console.error('[ChatService] Failed to load chats:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear chat history for a specific partner\r\n   */\r\n  function clearChat(partnerId: string) {\r\n    if (!partnerId) return;\r\n\r\n    const conversationKey = getConversationKey(partnerId);\r\n    if (allMessages.value[conversationKey]) {\r\n      allMessages.value[conversationKey] = [];\r\n      saveAllChats();\r\n      if (DEBUG) console.log(`[ChatService] Cleared chat for ${partnerId}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all chat history\r\n   */\r\n  function clearAllChats() {\r\n    allMessages.value = {};\r\n    unreadMessages.value = {};\r\n    saveAllChats();\r\n    if (DEBUG) console.log('[ChatService] Cleared all chats');\r\n  }\r\n\r\n  // Return the public API\r\n  return {\r\n    messages: allMessages,  // Removed shallowRef to ensure reactivity\r\n    unreadMessages: unreadMessages,  // Removed shallowRef\r\n    currentPartnerId,\r\n    setCurrentPartner,\r\n    sendMessage,\r\n    getMessages,\r\n    hasUnreadMessages,\r\n    markAsRead,\r\n    clearChat,\r\n    clearAllChats\r\n  };\r\n} ","<template>\n  <div class=\"bg-white/5 backdrop-blur-sm rounded-2xl p-6 text-center border border-white/10\">\n    <!-- Searching State -->\n    <div v-if=\"status === 'searching'\">\n      <div class=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center animate-pulse\">\n        <div class=\"w-8 h-8 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n      <h2 class=\"text-lg font-semibold mb-2\">Searching...</h2>\n      <p class=\"text-sm text-gray-300\">Looking for someone to talk to</p>\n    </div>\n\n    <!-- Matched State - New state for quick transition -->\n    <div v-else-if=\"status === 'matched'\">\n      <div class=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-yellow-500 to-green-500 rounded-full flex items-center justify-center animate-pulse\">\n        <span v-if=\"partnerInfo?.flag\" class=\"text-2xl\">{{ partnerInfo.flag }}</span>\n        <span v-else class=\"text-2xl\">🔄</span>\n      </div>\n      <h2 class=\"text-lg font-semibold mb-2 text-yellow-400\">{{ partnerInfo?.vibe ? getVibeDisplayName(partnerInfo.vibe) : 'Match Found!' }}</h2>\n      <div v-if=\"partnerInfo\" class=\"flex items-center justify-center gap-2 text-gray-300\">\n        <span class=\"text-xl\">{{ partnerInfo.flag || '🌍' }}</span>\n        <span class=\"text-sm font-medium\">{{ partnerInfo.country }}</span>\n      </div>\n      <p class=\"text-sm text-yellow-400 mt-2\">Setting up voice connection...</p>\n      \n      <!-- Connection progress indicator -->\n      <div class=\"mt-3 relative h-1.5 w-3/4 mx-auto bg-gray-700 rounded-full overflow-hidden\">\n        <div class=\"absolute top-0 left-0 h-full bg-gradient-to-r from-yellow-500 to-green-500 rounded-full animate-progress\"></div>\n      </div>\n    </div>\n\n    <!-- Connected State -->\n    <div v-else-if=\"status === 'connected'\">\n      <div class=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center\">\n        <span v-if=\"partnerInfo?.flag\" class=\"text-2xl\">{{ partnerInfo.flag }}</span>\n        <span v-else class=\"text-2xl\">👥</span>\n      </div>\n      <h2 class=\"text-lg font-semibold mb-2\">{{ partnerInfo?.vibe ? getVibeDisplayName(partnerInfo.vibe) : 'Connected!' }}</h2>\n      <div v-if=\"partnerInfo\" class=\"flex items-center justify-center gap-2 text-gray-300\">\n        <span class=\"text-xl\">{{ partnerInfo.flag || '🌍' }}</span>\n        <span class=\"text-sm font-medium\">{{ partnerInfo.country }}</span>\n      </div>\n      <p class=\"text-sm text-green-400 mt-2\">You can talk now</p>\n    </div>\n\n    <!-- Disconnected/Ready State -->\n    <div v-else>\n      <div class=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-gray-600 to-gray-700 rounded-full flex items-center justify-center\">\n        <span class=\"text-2xl\">🌟</span>\n      </div>\n      <h2 class=\"text-lg font-semibold mb-2\">Ready to Connect</h2>\n      <p class=\"text-sm text-gray-300\">Press \"Next\" to find someone to talk with</p>\n    </div>\n    \n    <!-- Connection Status Indicator -->\n    <div v-if=\"showStatus && status !== 'disconnected'\" class=\"mt-4 text-xs\">\n      <div class=\"flex items-center justify-center gap-2\">\n        <span :class=\"{\n          'text-green-400': status === 'connected',\n          'text-yellow-400': status === 'matched',\n          'text-blue-400': status === 'searching'\n        }\">●</span>\n        <span>{{ connectionStatusText }}</span>\n      </div>\n      \n      <!-- Error message if exists -->\n      <p v-if=\"errorMessage\" class=\"text-red-400 mt-1 text-xs\">{{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue';\n\ninterface PartnerInfo {\n  flag?: string;\n  country?: string;\n  id?: string;\n  vibe?: string;\n}\n\nconst props = defineProps({\n  status: {\n    type: String,\n    default: 'disconnected', // 'searching', 'matched', 'connected', 'disconnected'\n  },\n  partnerInfo: {\n    type: Object as () => PartnerInfo | null,\n    default: null\n  },\n  errorMessage: {\n    type: String,\n    default: ''\n  },\n  showStatus: {\n    type: Boolean,\n    default: true\n  }\n});\n\n// Computed text for connection status\nconst connectionStatusText = computed(() => {\n  switch (props.status) {\n    case 'searching': return 'Searching...';\n    case 'matched': return 'Partner found, connecting...';\n    case 'connected': return 'Connected';\n    default: return 'Disconnected';\n  }\n});\n\nconst getVibeDisplayName = (vibe: string) => {\n  // تحويل قيم الفايب إلى أسماء عرض سهلة الفهم\n  switch (vibe.toLowerCase()) {\n    case 'any':\n      return 'Go With the Flow';\n    case 'chill':\n      return 'Chill';\n    case 'fun':\n      return 'Fun';\n    case 'curious':\n      return 'Curious';\n    case 'creative':\n      return 'Creative';\n    default:\n      return vibe; // إرجاع القيمة الأصلية إذا لم يتم التعرف عليها\n  }\n};\n</script>\n\n<style scoped>\n@keyframes progress {\n  0% { width: 0; }\n  100% { width: 100%; }\n}\n\n.animate-progress {\n  animation: progress 3s ease-in-out infinite;\n}\n</style> ","<template>\n  <div class=\"space-y-3 md:space-y-4 px-2\">\n    <!-- Main Control Buttons -->\n    <div class=\"flex justify-center items-center gap-3 md:gap-4\">\n      <!-- Mute Button -->\n      <button\n        @click=\"toggleMute\"\n        class=\"w-14 h-14 md:w-16 md:h-16 rounded-full flex items-center justify-center transition-all shadow-xl transform hover:scale-110\"\n        :class=\"isMuted ? 'bg-gradient-to-r from-red-400 to-pink-400 shadow-red-400/70' : 'bg-gradient-to-r from-emerald-400 to-green-400 hover:from-green-400 hover:to-emerald-400 shadow-emerald-400/70'\"\n        :disabled=\"isProcessing\"\n      >\n        <div class=\"relative\">\n          <span v-if=\"!isMuted\" class=\"text-white text-lg md:text-xl\">🎤</span>\n          <span v-else class=\"text-white text-lg md:text-xl\">🔇</span>\n          <span v-if=\"isProcessing\" class=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-300 rounded-full animate-pulse\"></span>\n        </div>\n      </button>\n\n      <!-- Next/Find Partner Button -->\n      <button\n        @click=\"$emit('find-next')\"\n        class=\"w-16 h-16 md:w-20 md:h-20 bg-gradient-to-r from-orange-400 to-yellow-400 hover:from-yellow-400 hover:to-orange-400 rounded-full flex items-center justify-center shadow-2xl shadow-orange-400/80 transition-all transform hover:scale-110\"\n      >\n        <span class=\"text-white text-2xl md:text-3xl\">📞</span>\n      </button>\n\n      <!-- Chat Button -->\n      <button\n        @click=\"$emit('toggle-chat')\"\n        :disabled=\"isDisabled\"\n        class=\"w-14 h-14 md:w-16 md:h-16 rounded-full flex items-center justify-center shadow-xl transition-all transform hover:scale-110\"\n        :class=\"isDisabled ? 'bg-gray-600 cursor-not-allowed opacity-50' : 'bg-gradient-to-r from-blue-400 to-cyan-400 hover:from-cyan-400 hover:to-blue-400 shadow-blue-400/70'\"\n      >\n        <span class=\"text-white text-lg md:text-xl\">💬</span>\n      </button>\n    </div>\n\n    <!-- Secondary Controls -->\n    <div class=\"flex flex-wrap justify-center gap-2 md:gap-3\">\n      <button\n        @click=\"$emit('toggle-games')\"\n        class=\"bg-gradient-to-r from-purple-400 to-pink-400 hover:from-pink-400 hover:to-purple-400 rounded-full px-3 py-1.5 md:px-4 md:py-2 text-xs md:text-sm shadow-xl shadow-purple-400/70 transition-all transform hover:scale-110\"\n      >\n        🎮 Games\n      </button>\n      <button\n        @click=\"$emit('toggle-history')\"\n        class=\"bg-gradient-to-r from-indigo-400 to-blue-400 hover:from-blue-400 hover:to-indigo-400 rounded-full px-3 py-1.5 md:px-4 md:py-2 text-xs md:text-sm shadow-xl shadow-indigo-400/70 transition-all transform hover:scale-110\"\n      >\n        📞 History\n      </button>\n      <button\n        @click=\"$emit('toggle-donation')\"\n        class=\"bg-gradient-to-r from-yellow-400 to-orange-400 hover:from-orange-400 hover:to-yellow-400 rounded-full px-3 py-1.5 md:px-4 md:py-2 text-xs md:text-sm shadow-xl shadow-yellow-400/70 transition-all animate-pulse transform hover:scale-110\"\n      >\n        ❤️ Support\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\n\nconst props = defineProps({\n  isMuted: {\n    type: Boolean,\n    default: false\n  },\n  isDisabled: {\n    type: Boolean,\n    default: true\n  }\n});\n\nconst emit = defineEmits([\n  'toggle-mute',\n  'find-next',\n  'toggle-chat',\n  'toggle-games',\n  'toggle-history',\n  'toggle-donation'\n]);\n\n// منع النقرات المتكررة\nconst isProcessing = ref(false);\n\n// Enhanced mute toggle function to ensure audio works properly\nfunction toggleMute() {\n  if (isProcessing.value) return; // منع النقرات المتكررة\n  \n  isProcessing.value = true;\n  emit('toggle-mute');\n  \n  // تقليل وقت القفل لزيادة الاستجابة\n  setTimeout(() => {\n    isProcessing.value = false;\n  }, 200); // تقليل الوقت من 500 إلى 200 مللي ثانية\n  \n  // محاولة تشغيل الصوت بعد تفاعل المستخدم\n  setTimeout(() => {\n    try {\n      const audioElement = document.querySelector('audio');\n      if (audioElement && audioElement.paused) {\n        audioElement.play().catch(err => {\n          console.warn('Could not auto-play audio after mute toggle:', err);\n        });\n      }\n    } catch (error) {\n      console.error('Error trying to auto-play:', error);\n    }\n  }, 300);\n}\n</script> ","<template>\r\n  <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n    <div class=\"bg-gray-900 rounded-lg w-full max-w-md mx-auto h-[80vh] flex flex-col\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between p-4 border-b border-gray-700\">\r\n        <div class=\"flex items-center\">\r\n          <span class=\"text-white text-lg font-medium\">💬 Chat</span>\r\n        </div>\r\n        <button \r\n          @click=\"$emit('close')\" \r\n          class=\"text-gray-400 hover:text-white\"\r\n        >\r\n          ✕\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Messages -->\r\n      <div class=\"flex-1 p-4 overflow-y-auto\" ref=\"messagesContainerRef\">\r\n        <div v-if=\"messages.length === 0\" class=\"h-full flex items-center justify-center text-gray-500\">\r\n          <div class=\"text-center\">\r\n            <p>No messages yet</p>\r\n            <p class=\"text-sm mt-1\">Send a message to start the conversation</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-else class=\"space-y-2\">\r\n          <div \r\n            v-for=\"message in messages\" \r\n            :key=\"message.id\"\r\n            class=\"rounded-lg p-3 max-w-[80%]\"\r\n            :class=\"message.isOwn \r\n              ? 'bg-blue-700 ml-auto' \r\n              : 'bg-gray-700 mr-auto'\"\r\n          >\r\n            <div class=\"flex justify-between gap-2\">\r\n              <span class=\"text-sm\" :class=\"message.isOwn ? 'text-blue-200' : 'text-gray-200'\">\r\n                {{ message.isOwn ? 'You' : 'Partner' }}\r\n              </span>\r\n              <span class=\"text-xs text-gray-400\">\r\n                {{ formatTime(message.timestamp) }}\r\n              </span>\r\n            </div>\r\n            <p class=\"mt-1 text-white break-words\">{{ message.message }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Input -->\r\n      <div class=\"p-3 border-t border-gray-700\">\r\n        <form @submit.prevent=\"sendMessage\" class=\"flex gap-2\">\r\n          <input\r\n            v-model=\"currentMessage\"\r\n            type=\"text\"\r\n            placeholder=\"Type a message...\"\r\n            class=\"flex-1 bg-gray-800 border border-gray-700 rounded-md p-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            :disabled=\"!isConnected\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            :disabled=\"!isConnected || !currentMessage.trim()\"\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, watch, nextTick } from 'vue';\r\n\r\ninterface Message {\r\n  id: string;\r\n  message: string;\r\n  isOwn: boolean;\r\n  timestamp: number;\r\n}\r\n\r\nconst props = defineProps({\r\n  isOpen: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  isConnected: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  messages: {\r\n    type: Array as () => Message[],\r\n    default: () => []\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['close', 'send-message']);\r\n\r\nconst currentMessage = ref('');\r\nconst messagesContainerRef = ref<HTMLElement | null>(null);\r\n\r\nconst sendMessage = () => {\r\n  if (currentMessage.value.trim() && props.isConnected) {\r\n    emit('send-message', currentMessage.value);\r\n    currentMessage.value = '';\r\n  }\r\n};\r\n\r\nconst scrollToBottom = async () => {\r\n  await nextTick();\r\n  if (messagesContainerRef.value) {\r\n    messagesContainerRef.value.scrollTop = messagesContainerRef.value.scrollHeight;\r\n  }\r\n};\r\n\r\nconst formatTime = (timestamp: number): string => {\r\n  return new Date(timestamp).toLocaleTimeString([], { \r\n    hour: '2-digit', \r\n    minute: '2-digit' \r\n  });\r\n};\r\n\r\nwatch(() => props.messages, () => {\r\n  scrollToBottom();\r\n}, { deep: true });\r\n\r\nwatch(() => props.isOpen, (newVal) => {\r\n  if (newVal) {\r\n    scrollToBottom();\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  if (props.isOpen) {\r\n    scrollToBottom();\r\n  }\r\n});\r\n</script> ","<template>\n  <div class=\"w-full p-2\">\n    <!-- Game Header -->\n    <div class=\"flex justify-between items-center mb-4\">\n      <h2 class=\"text-xl font-bold text-purple-400\">Tic Tac Toe</h2>\n      <div class=\"text-white text-sm px-3 py-1 rounded-full\" \n        :class=\"{\n          'bg-yellow-600/30': gameState === 'waiting',\n          'bg-green-600/30': isMyTurn && gameState === 'playing',\n          'bg-red-600/30': !isMyTurn && gameState === 'playing',\n          'bg-purple-600/30': winner\n        }\">\n        <span v-if=\"gameState === 'waiting'\" class=\"text-yellow-300 animate-pulse\">\n          Waiting for partner...\n        </span>\n        <span v-else-if=\"winner\">\n          {{ winner === playerSymbol ? 'You Won! 🎉' : winner === 'tie' ? \"It's a Tie! 🤝\" : 'You Lost! 😢' }}\n        </span>\n        <span v-else>\n          {{ isMyTurn ? 'Your Turn' : \"Partner's Turn\" }}\n        </span>\n      </div>\n    </div>\n    \n    <!-- Game Board -->\n    <div class=\"bg-gray-800/60 backdrop-blur-sm rounded-lg p-4 mb-4\">\n      <div class=\"flex flex-col items-center\" :class=\"{'opacity-70': gameState === 'waiting' || (!isMyTurn && !winner)}\">\n        <!-- Player Info -->\n        <div class=\"mb-4 text-center\">\n          <div class=\"flex items-center justify-center gap-4\">\n            <div :class=\"{'ring-2 ring-purple-500 ring-offset-2 ring-offset-gray-800': playerSymbol === 'X'}\" \n                class=\"w-10 h-10 rounded-full bg-blue-600 flex items-center justify-center text-lg font-bold\">\n              X\n            </div>\n            <div class=\"text-center\">\n              <p class=\"text-gray-300 text-sm\">You are</p>\n              <p class=\"font-bold text-lg\" :class=\"{'text-blue-400': playerSymbol === 'X', 'text-green-400': playerSymbol === 'O'}\">\n                {{ playerSymbol }}\n              </p>\n            </div>\n            <div :class=\"{'ring-2 ring-purple-500 ring-offset-2 ring-offset-gray-800': playerSymbol === 'O'}\" \n                class=\"w-10 h-10 rounded-full bg-green-600 flex items-center justify-center text-lg font-bold\">\n              O\n            </div>\n          </div>\n        </div>\n        \n        <!-- Board -->\n        <div class=\"grid grid-cols-3 gap-3 mb-4\">\n          <button \n            v-for=\"(cell, index) in board\" \n            :key=\"index\"\n            @click=\"makeMove(index)\"\n            :disabled=\"cell !== '' || !isMyTurn || winner !== null || gameState === 'waiting'\"\n            class=\"w-20 h-20 rounded-lg flex items-center justify-center text-3xl font-bold transition-all duration-300\"\n            :class=\"{\n              'bg-gray-700 hover:bg-gray-600': cell === '' && isMyTurn && !winner && gameState !== 'waiting',\n              'bg-gray-700/50': cell === '' && (!isMyTurn || winner !== null || gameState === 'waiting'),\n              'bg-blue-600/20': cell === 'X',\n              'bg-green-600/20': cell === 'O',\n              'cursor-not-allowed': cell !== '' || !isMyTurn || winner !== null || gameState === 'waiting',\n              'hover:bg-purple-700/50': isMyTurn && cell === '' && !winner && gameState === 'playing'\n            }\"\n          >\n            <span v-if=\"cell === 'X'\" class=\"text-blue-400\">X</span>\n            <span v-else-if=\"cell === 'O'\" class=\"text-green-400\">O</span>\n          </button>\n        </div>\n        \n        <!-- Game Result Actions -->\n        <div v-if=\"winner\" class=\"text-center mt-4 animate__animated animate__fadeIn\">\n          <button \n            @click=\"resetGame\" \n            class=\"bg-purple-600 hover:bg-purple-700 text-white px-6 py-2 rounded-lg text-sm transition-colors mb-2\"\n          >\n            Play Again\n          </button>\n        </div>\n        \n        <!-- Waiting Message -->\n        <div v-if=\"gameState === 'waiting'\" class=\"text-center mt-4\">\n          <div class=\"bg-yellow-600/20 rounded-lg p-4 animate-pulse\">\n            <p class=\"text-yellow-300 mb-1\">Waiting for your partner to join...</p>\n            <p class=\"text-sm text-gray-300\">You'll play as <span class=\"font-bold text-blue-400\">X</span></p>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Game Controls -->\n    <div class=\"flex justify-between\">\n      <button \n        @click=\"$emit('back')\" \n        class=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg text-sm transition-colors\"\n      >\n        Back to Games\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue';\nimport { useSocket } from '@/services/socket';\n\nconst props = defineProps({\n  partnerId: {\n    type: String,\n    required: true\n  },\n  isFirstPlayer: {\n    type: Boolean,\n    default: true\n  }\n});\n\nconst emit = defineEmits(['back', 'error']);\n\nconst { socket } = useSocket();\n\n// Game state\nconst gameState = ref<'waiting' | 'playing' | 'finished'>('waiting');\nconst board = ref<string[]>(['', '', '', '', '', '', '', '', '']);\nconst playerSymbol = ref(props.isFirstPlayer ? 'X' : 'O');\nconst partnerSymbol = ref(props.isFirstPlayer ? 'O' : 'X');\nconst currentTurn = ref('X'); // X always goes first\nconst winner = ref<string | null>(null);\nconst connectionLostTimeout = ref<number | null>(null);\nconst lastMoveTime = ref<number>(Date.now());\n\n// Constants\nconst CONNECTION_TIMEOUT = 30000; // 30 seconds without moves considered disconnection\n\n// Computed property to determine if it's the current player's turn\nconst isMyTurn = computed(() => {\n  return currentTurn.value === playerSymbol.value;\n});\n\n// Make a move\nconst makeMove = (index: number) => {\n  if (\n    gameState.value !== 'playing' || \n    board.value[index] !== '' || \n    !isMyTurn.value || \n    winner.value !== null\n  ) return;\n  \n  try {\n    // Update the board locally\n    board.value[index] = playerSymbol.value;\n    currentTurn.value = partnerSymbol.value;\n    lastMoveTime.value = Date.now();\n      \n    // Send the move to the partner\n    socket.value?.emit('game-move', {\n      gameType: 'tic-tac-toe',\n      move: index,\n      to: props.partnerId\n    });\n    \n    // Check for a winner\n    checkWinner();\n    \n    // Reset connection timeout\n    startConnectionTimeout();\n  } catch (error) {\n    handleError(\"Failed to make a move. Please try again.\");\n  }\n};\n\n// Check for a winner\nconst checkWinner = () => {\n  const winPatterns = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8], // rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8], // columns\n    [0, 4, 8], [2, 4, 6]             // diagonals\n  ];\n  \n  // Check for winning combinations\n  for (const pattern of winPatterns) {\n    const [a, b, c] = pattern;\n    if (\n      board.value[a] && \n      board.value[a] === board.value[b] && \n      board.value[a] === board.value[c]\n    ) {\n      winner.value = board.value[a];\n      gameState.value = 'finished';\n      \n      // Clear connection timeout\n      if (connectionLostTimeout.value) {\n        clearTimeout(connectionLostTimeout.value);\n        connectionLostTimeout.value = null;\n      }\n      \n      return;\n    }\n  }\n  \n  // Check for a tie\n  if (!board.value.includes('')) {\n    winner.value = 'tie';\n    gameState.value = 'finished';\n    \n    // Clear connection timeout\n    if (connectionLostTimeout.value) {\n      clearTimeout(connectionLostTimeout.value);\n      connectionLostTimeout.value = null;\n    }\n  }\n};\n\n// Reset the game\nconst resetGame = () => {\n  try {\n    board.value = ['', '', '', '', '', '', '', '', ''];\n    currentTurn.value = 'X'; // X always starts\n    winner.value = null;\n    gameState.value = 'playing';\n    lastMoveTime.value = Date.now();\n    \n    // Send reset to the partner\n    socket.value?.emit('game-reset', {\n      gameType: 'tic-tac-toe',\n      to: props.partnerId\n    });\n    \n    // Start connection timeout\n    startConnectionTimeout();\n  } catch (error) {\n    handleError(\"Failed to reset the game. Please try again.\");\n  }\n};\n\n// Handle errors\nconst handleError = (message: string) => {\n  console.error(`Tic-Tac-Toe Error: ${message}`);\n  emit('error', message);\n};\n\n// Start connection timeout\nconst startConnectionTimeout = () => {\n  // Clear any existing timeout\n  if (connectionLostTimeout.value) {\n    clearTimeout(connectionLostTimeout.value);\n  }\n  \n  // Only set timeout if the game is in progress and not finished\n  if (gameState.value === 'playing' && !winner.value) {\n    connectionLostTimeout.value = window.setTimeout(() => {\n      // Check if no moves for a while\n      if (Date.now() - lastMoveTime.value > CONNECTION_TIMEOUT) {\n        handleError(\"Connection with your partner appears to be lost. The game will be closed.\");\n        emit('back');\n      }\n    }, CONNECTION_TIMEOUT);\n  }\n};\n\n// Watch for changes in the first player status\nwatch(() => props.isFirstPlayer, (newValue) => {\n  playerSymbol.value = newValue ? 'X' : 'O';\n  partnerSymbol.value = newValue ? 'O' : 'X';\n  \n  // If we're the second player, we're already in a playing state\n  if (!newValue) {\n    gameState.value = 'playing';\n  }\n});\n\n// Setup socket event handlers\nonMounted(() => {\n  try {\n    // Partner joined\n    socket.value?.on('game-partner-joined', (data: any) => {\n      if (data.from === props.partnerId && data.gameType === 'tic-tac-toe') {\n        console.log('Partner joined the game!', data);\n        gameState.value = 'playing';\n        lastMoveTime.value = Date.now();\n        \n        // Start connection timeout\n        startConnectionTimeout();\n      }\n    });\n    \n    // Handle partner moves\n    socket.value?.on('game-move', (data: any) => {\n      if (data.from === props.partnerId && data.gameType === 'tic-tac-toe') {\n        const moveIndex = data.move;\n        \n        if (\n          typeof moveIndex === 'number' && \n          moveIndex >= 0 && \n          moveIndex < 9 &&\n          board.value[moveIndex] === ''\n        ) {\n          board.value[moveIndex] = partnerSymbol.value;\n          currentTurn.value = playerSymbol.value;\n          lastMoveTime.value = Date.now();\n          \n          // Check for a winner\n          checkWinner();\n          \n          // Reset connection timeout\n          startConnectionTimeout();\n        } else {\n          handleError(\"Received invalid move from partner.\");\n        }\n      }\n    });\n    \n    // Handle game reset\n    socket.value?.on('game-reset', (data: any) => {\n      if (data.from === props.partnerId && data.gameType === 'tic-tac-toe') {\n        board.value = ['', '', '', '', '', '', '', '', ''];\n        currentTurn.value = 'X'; // X always starts\n        winner.value = null;\n        gameState.value = 'playing';\n        lastMoveTime.value = Date.now();\n        \n        // Start connection timeout\n        startConnectionTimeout();\n      }\n    });\n    \n    // Special case for second player: set game to playing immediately\n    if (!props.isFirstPlayer) {\n      gameState.value = 'playing';\n    }\n  } catch (error) {\n    handleError(\"Failed to initialize game connection.\");\n  }\n});\n\n// Clean up event listeners and timeouts\nonUnmounted(() => {\n  socket.value?.off('game-partner-joined');\n  socket.value?.off('game-move');\n  socket.value?.off('game-reset');\n  \n  // Clear connection timeout\n  if (connectionLostTimeout.value) {\n    clearTimeout(connectionLostTimeout.value);\n    connectionLostTimeout.value = null;\n  }\n});\n</script>\n\n<style scoped>\n.animate-pulse {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n</style> ","<template>\n  <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4\">\n    <div class=\"bg-[#1e1e2e] rounded-lg w-full max-w-md mx-auto shadow-2xl relative overflow-hidden\">\n      <!-- Header -->\n      <div class=\"flex items-center justify-between p-3 border-b border-gray-800\">\n        <div class=\"flex items-center gap-2\">\n          <span class=\"text-purple-400 text-xl\">🎮</span>\n          <h2 class=\"text-xl font-semibold text-[#a881fc]\">Space Games</h2>\n        </div>\n        <button \n          @click=\"$emit('close')\" \n          class=\"text-gray-400 hover:text-white text-lg\"\n        >\n          ✕\n        </button>\n      </div>\n      \n      <!-- Debug Info - HIDDEN -->\n      <div v-if=\"false\" class=\"bg-black/50 text-xs text-gray-400 p-1 border-b border-gray-800\">\n        Status: {{ debugInfo }}\n      </div>\n      \n      <!-- Game Select View -->\n      <div v-if=\"!selectedGame\" class=\"p-4\">\n        <!-- Games Grid -->\n        <div class=\"grid grid-cols-2 gap-4 mb-4\">\n          <!-- Rock Paper Scissors -->\n          <button \n            class=\"bg-[#2e2e42] p-4 rounded-lg flex flex-col items-center text-center hover:bg-[#3a3a52] transition-colors relative\"\n            :class=\"{'opacity-50 cursor-not-allowed': !isConnected}\"\n            :disabled=\"!isConnected\"\n          >\n            <div class=\"absolute inset-0 flex items-center justify-center bg-[#2e2e42]/80 rounded-lg\">\n              <span class=\"bg-purple-500 text-white text-xs px-2 py-1 rounded-md font-medium\">Coming Soon</span>\n            </div>\n            <div class=\"bg-yellow-500 text-white w-12 h-12 rounded-full flex items-center justify-center mb-3 text-xl\">👊</div>\n            <div class=\"text-white font-medium\">Rock Paper Scissors</div>\n            <div class=\"text-xs text-gray-400\">vs Partner</div>\n          </button>\n          \n          <!-- Sound Game -->\n          <button \n            class=\"bg-[#2e2e42] p-4 rounded-lg flex flex-col items-center text-center relative\"\n            :class=\"{'opacity-50 cursor-not-allowed': true}\"\n            disabled\n          >\n            <div class=\"absolute inset-0 flex items-center justify-center bg-[#2e2e42]/80 rounded-lg\">\n              <span class=\"bg-purple-500 text-white text-xs px-2 py-1 rounded-md font-medium\">Coming Soon</span>\n            </div>\n            <div class=\"bg-indigo-600 text-white w-12 h-12 rounded-full flex items-center justify-center mb-3 text-xl\">🎵</div>\n            <div class=\"text-white font-medium\">Sound Game</div>\n            <div class=\"text-xs text-gray-400\">Voice Challenge</div>\n          </button>\n          \n          <!-- Tic Tac Toe -->\n          <button \n            class=\"bg-[#2e2e42] p-4 rounded-lg flex flex-col items-center text-center hover:bg-[#3a3a52] transition-colors relative\"\n            :class=\"{'opacity-50 cursor-not-allowed': !isConnected}\"\n            :disabled=\"!isConnected\"\n            @click=\"selectGame('tic-tac-toe')\"\n          >\n            <div class=\"bg-red-600 text-white w-12 h-12 rounded-full flex items-center justify-center mb-3 text-xl\">⭕</div>\n            <div class=\"text-white font-medium\">Tic-Tac-Toe</div>\n            <div class=\"text-xs text-gray-400\">vs Partner</div>\n          </button>\n          \n          <!-- Word Galaxy -->\n          <button \n            class=\"bg-[#2e2e42] p-4 rounded-lg flex flex-col items-center text-center relative\"\n            :class=\"{'opacity-50 cursor-not-allowed': true}\"\n            disabled\n          >\n            <div class=\"absolute inset-0 flex items-center justify-center bg-[#2e2e42]/80 rounded-lg\">\n              <span class=\"bg-purple-500 text-white text-xs px-2 py-1 rounded-md font-medium\">Coming Soon</span>\n            </div>\n            <div class=\"bg-white text-gray-800 w-12 h-12 rounded-full flex items-center justify-center mb-3 text-xl\">💬</div>\n            <div class=\"text-white font-medium\">Word Galaxy</div>\n            <div class=\"text-xs text-gray-400\">Brain Game</div>\n          </button>\n        </div>\n        \n        <!-- Connection Notice -->\n        <p class=\"text-center text-sm text-gray-400 mt-2\">\n          Connect to play with others\n        </p>\n      </div>\n      \n      <!-- Error Message -->\n      <div v-else-if=\"errorMessage\" class=\"text-center p-6\">\n        <div class=\"mb-4\">\n          <div class=\"w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center mx-auto mb-2\">\n            <span class=\"text-2xl\">⚠️</span>\n          </div>\n          <h3 class=\"text-xl font-bold mb-2 text-red-400\">Game Error</h3>\n          <p class=\"text-gray-300\">{{ errorMessage }}</p>\n        </div>\n        \n        <button \n          @click=\"closeGame\" \n          class=\"px-4 py-2 bg-gray-700 rounded-full hover:bg-gray-600 transition-colors mt-2\"\n        >\n          Back to Games\n        </button>\n      </div>\n      \n      <!-- Game View -->\n      <div v-else>\n        <TicTacToe\n          v-if=\"selectedGame === 'tic-tac-toe'\"\n          :partnerId=\"partnerId\"\n          :isFirstPlayer=\"isFirstPlayer\"\n          :partnerReady=\"partnerReady\"\n          @back=\"closeGame\"\n          @error=\"handleGameError\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport { useSocket } from '@/services/socket';\nimport TicTacToe from './games/TicTacToe.vue';\n\nconst { socket, userId } = useSocket();\n\nconst props = defineProps({\n  isOpen: {\n    type: Boolean,\n    default: false\n  },\n  partnerId: {\n    type: String,\n    required: true\n  },\n  isConnected: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst emit = defineEmits(['close']);\n\n// Game state\nconst selectedGame = ref<string | null>(null);\nconst errorMessage = ref<string | null>(null);\nconst isFirstPlayer = ref(true);\nconst gameRoomId = ref<string | null>(null);\nconst partnerReady = ref(false);\nconst debugInfo = ref<string>('');\n\n// Debug helper - only logs to console, not UI\nconst logDebugInfo = (msg: string) => {\n  console.log(`[Game Debug] ${msg}`);\n  debugInfo.value = msg;\n};\n\n// Select a game\nconst selectGame = (gameType: string) => {\n  if (!props.isConnected) return;\n  \n  logDebugInfo(`Starting game: ${gameType} with partner: ${props.partnerId}`);\n  \n  errorMessage.value = null;\n  selectedGame.value = gameType;\n  isFirstPlayer.value = true;\n  partnerReady.value = false;\n  \n  // Create a deterministic room ID based on user IDs\n  // This ensures both users try to join the same room\n  const userIds = [userId.value, props.partnerId].sort();\n  gameRoomId.value = `${gameType}-${userIds[0]}-${userIds[1]}`;\n  \n  logDebugInfo(`Created game room: ${gameRoomId.value}`);\n  \n  // Join the game room\n  socket.value?.emit('game-join-room', {\n    gameType,\n    roomId: gameRoomId.value,\n    to: props.partnerId,\n    isFirstPlayer: true\n  });\n};\n\n// Close game\nconst closeGame = () => {\n  // Notify partner if needed\n  if (gameRoomId.value) {\n    socket.value?.emit('game-leave-room', {\n      roomId: gameRoomId.value,\n      to: props.partnerId\n    });\n  }\n  \n  // Reset state\n  selectedGame.value = null;\n  errorMessage.value = null;\n  isFirstPlayer.value = true;\n  gameRoomId.value = null;\n  partnerReady.value = false;\n};\n\n// Handle game error\nconst handleGameError = (error: string) => {\n  errorMessage.value = error;\n  logDebugInfo(`Error: ${error}`);\n};\n\n// Set up socket event listeners\nonMounted(() => {\n  logDebugInfo('Setting up game events');\n  \n  // Handle game invites and room joins\n  socket.value?.on('game-room-invite', (data: any) => {\n    if (data.from === props.partnerId) {\n      logDebugInfo(`Received invitation to join game room: ${data.roomId}`);\n      gameRoomId.value = data.roomId;\n      selectedGame.value = data.gameType;\n      isFirstPlayer.value = false; // We're joining, so we're the second player\n      \n      // Join the room\n      socket.value?.emit('game-join-room', {\n        gameType: data.gameType,\n        roomId: data.roomId,\n        to: props.partnerId,\n        isFirstPlayer: false\n      });\n    }\n  });\n  \n  // Handle game partner joined\n  socket.value?.on('game-partner-joined', (data: any) => {\n    if (data.from === props.partnerId) {\n      logDebugInfo(`Partner joined the game: ${data.gameType}`);\n      partnerReady.value = true;\n    }\n  });\n  \n  // Handle errors\n  socket.value?.on('game-error', (data: any) => {\n    if (data.from === 'system' || data.from === props.partnerId) {\n      errorMessage.value = data.message || \"An error occurred in the game.\";\n      logDebugInfo(`Game error: ${data.message}`);\n    }\n  });\n  \n  // Handle partner leaving\n  socket.value?.on('game-partner-left', (data: any) => {\n    if (selectedGame.value) {\n      errorMessage.value = \"Your partner left the game.\";\n      logDebugInfo('Partner left the game');\n      selectedGame.value = null;\n    }\n  });\n});\n\n// Clean up event listeners\nonUnmounted(() => {\n  socket.value?.off('game-room-invite');\n  socket.value?.off('game-partner-joined');\n  socket.value?.off('game-error');\n  socket.value?.off('game-partner-left');\n  \n  // Leave any active game room\n  if (gameRoomId.value) {\n    socket.value?.emit('game-leave-room', {\n      roomId: gameRoomId.value,\n      to: props.partnerId\n    });\n  }\n});\n\n// Watch for dialog close to reset game state\nwatch(() => props.isOpen, (isOpen) => {\n  if (!isOpen) {\n    closeGame();\n  }\n});\n</script>\n\n<style scoped>\n/* No custom styles needed */\n</style>","<template>\r\n  <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n    <div class=\"bg-gray-900 rounded-lg w-full max-w-md mx-auto p-6\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between mb-6\">\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"text-red-400 text-xl\">❤️</span>\r\n          <h2 class=\"text-lg font-semibold text-violet-400\">Support SpaceTalk</h2>\r\n        </div>\r\n        <button \r\n          @click=\"$emit('close')\" \r\n          class=\"text-gray-400 hover:text-white text-lg\"\r\n        >\r\n          ✕\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Content -->\r\n      <div class=\"mb-6 text-center\">\r\n        <p class=\"text-gray-300\">Keep SpaceTalk free for everyone</p>\r\n      </div>\r\n      \r\n      <!-- Donation Options -->\r\n      <div class=\"grid grid-cols-3 gap-4 mb-6\">\r\n        <button \r\n          :class=\"[\r\n            'bg-gray-800 hover:bg-gray-700 rounded-lg p-4 text-center transition-colors duration-200 transform',\r\n            selectedAmount === 5 ? 'ring-2 ring-emerald-500 scale-105' : ''\r\n          ]\"\r\n          @click=\"selectAmount(5)\"\r\n        >\r\n          <div class=\"text-lg font-bold text-white\">$5</div>\r\n          <div class=\"text-sm text-gray-400\">Coffee</div>\r\n        </button>\r\n        \r\n        <button \r\n          :class=\"[\r\n            'bg-gray-800 hover:bg-gray-700 rounded-lg p-4 text-center transition-colors duration-200 transform',\r\n            selectedAmount === 15 ? 'ring-2 ring-emerald-500 scale-105' : ''\r\n          ]\"\r\n          @click=\"selectAmount(15)\"\r\n        >\r\n          <div class=\"text-lg font-bold text-white\">$15</div>\r\n          <div class=\"text-sm text-gray-400\">Fuel</div>\r\n        </button>\r\n        \r\n        <button \r\n          :class=\"[\r\n            'bg-gray-800 hover:bg-gray-700 rounded-lg p-4 text-center transition-colors duration-200 transform',\r\n            selectedAmount === 50 ? 'ring-2 ring-emerald-500 scale-105' : ''\r\n          ]\"\r\n          @click=\"selectAmount(50)\"\r\n        >\r\n          <div class=\"text-lg font-bold text-white\">$50</div>\r\n          <div class=\"text-sm text-gray-400\">Rocket</div>\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Development Info -->\r\n      <div class=\"flex justify-center items-center gap-1 mb-6\">\r\n        <span class=\"text-yellow-400\">⭐</span>\r\n        <span class=\"text-sm text-gray-300\">Boost development</span>\r\n      </div>\r\n      \r\n      <!-- Donate Button -->\r\n      <button \r\n        class=\"w-full bg-emerald-600 hover:bg-emerald-700 text-white font-medium py-3 rounded-lg transition-colors mb-2 active:scale-95 transform duration-150\"\r\n        @click=\"openPayPal\"\r\n      >\r\n        Donate via PayPal\r\n      </button>\r\n      \r\n      <!-- Secure Payment Notice -->\r\n      <div class=\"text-xs text-gray-500 text-center\">\r\n        Secure payments via PayPal\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue';\r\n\r\ndefineProps({\r\n  isOpen: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['close']);\r\n\r\nconst selectedAmount = ref(15);\r\n\r\nconst selectAmount = (amount: number) => {\r\n  selectedAmount.value = amount;\r\n};\r\n\r\nconst openPayPal = () => {\r\n  // Redirect to the specified PayPal link with the selected amount\r\n  window.open(`https://www.paypal.com/paypalme/spacetalk/${selectedAmount.value}`, '_blank');\r\n  emit('close');\r\n};\r\n</script> ","<template>\n  <div class=\"fixed inset-0 overflow-hidden pointer-events-none\">\n    <div v-for=\"star in stars\" :key=\"star.id\" \n         class=\"absolute rounded-full bg-white\" \n         :style=\"{\n           width: `${star.size}px`,\n           height: `${star.size}px`,\n           top: `${star.y}%`,\n           left: `${star.x}%`,\n           opacity: star.opacity,\n           boxShadow: `0 0 ${star.size * 2}px rgba(255, 255, 255, ${star.opacity})`,\n           animation: `twinkle ${star.duration}s infinite ease-in-out`\n         }\">\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\n\ninterface Star {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  opacity: number;\n  duration: number;\n}\n\nconst stars = ref<Star[]>([]);\n\nonMounted(() => {\n  generateStars();\n});\n\nconst generateStars = () => {\n  const numStars = 50;\n  const newStars: Star[] = [];\n  \n  for (let i = 0; i < numStars; i++) {\n    newStars.push({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 2 + 1,\n      opacity: Math.random() * 0.7 + 0.3,\n      duration: Math.random() * 8 + 2\n    });\n  }\n  \n  stars.value = newStars;\n};\n</script>\n\n<style scoped>\n@keyframes twinkle {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n</style>\n ","<template>\n  <div>\n    <!-- Hidden audio element that does all the heavy lifting - this is the most important part -->\n    <audio ref=\"audioElement\" autoplay playsinline class=\"hidden\"></audio>\n    \n    <!-- Only show debug panel during development -->\n    <div v-if=\"DEBUG\" class=\"fixed bottom-4 right-4 z-50 text-xs bg-gray-800/70 p-3 rounded-lg text-white\">\n      <div class=\"flex items-center gap-2 mb-1\">\n        <span v-if=\"isPlaying\" class=\"text-green-300 animate-pulse\">●</span>\n        <span v-else class=\"text-red-300\">●</span>\n        <span>{{ isPlaying ? 'Audio Active' : 'Audio Inactive' }}</span>\n      </div>\n      <div class=\"grid grid-cols-2 gap-x-3 gap-y-1\">\n        <span>Connection:</span>\n        <span :class=\"{\n          'text-green-400': correctedConnectionState === 'connected', \n          'text-yellow-400': correctedConnectionState === 'connecting', \n          'text-red-400': correctedConnectionState === 'failed' || correctedConnectionState === 'disconnected'\n        }\">{{ correctedConnectionState }}</span>\n        \n        <span>Stream:</span>\n        <span :class=\"{'text-green-400': hasRemoteStream, 'text-red-400': !hasRemoteStream}\">\n          {{ hasRemoteStream ? 'Available' : 'Not Available' }}\n        </span>\n        \n        <span>Tracks:</span>\n        <span>{{ tracksCount }}</span>\n      </div>\n      <div class=\"mt-2 flex justify-between\">\n        <button @click=\"checkAudioTracks\" class=\"text-xs bg-purple-700 hover:bg-purple-600 text-white px-2 py-1 rounded-full\">\n          Debug\n        </button>\n        <button @click=\"forceTryPlayAudio\" class=\"text-xs bg-blue-600 hover:bg-blue-500 text-white px-2 py-1 rounded-full\">\n          Play Audio\n        </button>\n        <button @click=\"forceReconnectStream\" class=\"text-xs bg-green-600 hover:bg-green-500 text-white px-2 py-1 rounded-full\">\n          Reconnect\n      </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount, watch, computed } from 'vue';\nimport { useWebRTC } from '@/services/webrtc';\n\n// Debug flag\nconst DEBUG = false; // Change to false for production\n\nconst props = defineProps({\n  showControls: {\n    type: Boolean,\n    default: true\n  }\n});\n\nconst { remoteStream, connectionState, partnerId, isAudioMuted } = useWebRTC();\nconst audioElement = ref<HTMLAudioElement | null>(null);\nconst volume = ref(0.8); // Default volume\nconst isPlaying = ref(false);\nconst reconnectAttempts = ref(0);\nconst maxReconnectAttempts = 10; // Increased number of attempts\n\n// Check if we have a remote stream\nconst hasRemoteStream = computed(() => {\n  const streamExists = remoteStream.value !== null;\n  // Use a safe method to check for tracks\n  const hasTracks = streamExists && remoteStream.value ? remoteStream.value.getAudioTracks().length > 0 : false;\n  const hasEnabledTracks = hasTracks && remoteStream.value ? remoteStream.value.getAudioTracks().some(track => track.enabled) : false;\n  \n  // Diagnostic log\n  if (DEBUG && streamExists && remoteStream.value) {\n    console.log(`[AudioOutput] Stream status: tracks=${remoteStream.value.getAudioTracks().length}, enabled=${hasEnabledTracks}`);\n  }\n  \n  return hasEnabledTracks;\n});\n\n// Get track count for display - shows only active tracks\nconst tracksCount = computed(() => {\n  if (!remoteStream.value) return 0;\n  \n  // Count only active tracks\n  return remoteStream.value.getAudioTracks().filter(track => \n    track.enabled && track.readyState === 'live'\n  ).length;\n});\n\n// Corrected connection state based on actual audio status\nconst correctedConnectionState = computed(() => {\n  // If audio is playing, the connection must be \"connected\" regardless of the official state\n  if (isPlaying.value && hasRemoteStream.value) {\n    return 'connected';\n  }\n  \n  // If the official connection state is \"connected\" but no audio, there's a problem\n  if (connectionState.value === 'connected' && !hasRemoteStream.value && !isPlaying.value) {\n    // Try reconnecting audio after a short delay\n    setTimeout(connectAudioStream, 500);\n  }\n  \n  return connectionState.value;\n});\n\n// Watch for changes to the remote stream\nwatch(() => remoteStream.value, (newStream) => {\n  if (DEBUG) {\n    console.log('[AudioOutput] Remote stream changed:', newStream ? 'Stream available' : 'No stream');\n    if (newStream) {\n      const tracks = newStream.getTracks();\n      console.log(`[AudioOutput] Remote stream has ${tracks.length} tracks`);\n      tracks.forEach(track => {\n        console.log(`[AudioOutput] Track: ${track.kind}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n      });\n    }\n  }\n  \n  // When we get a new stream, connect it immediately\n  connectAudioStream();\n  \n  // Reset reconnect attempts when stream changes\n  reconnectAttempts.value = 0;\n  \n  // Try to play immediately\n  setTimeout(tryPlayAudio, 500);\n});\n\n// Watch mute state to ensure it's respected\nwatch(() => isAudioMuted.value, (muted) => {\n  if (DEBUG) console.log(`[AudioOutput] Audio mute state changed to: ${muted}`);\n  \n  // Ensure audio plays when unmuting if we have a stream\n  if (!muted && remoteStream.value && audioElement.value) {\n    setTimeout(() => {\n      if (audioElement.value && audioElement.value.paused) {\n        audioElement.value.play().catch(err => {\n          if (DEBUG) console.warn('[AudioOutput] Could not auto-play after unmute:', err);\n        });\n      }\n    }, 300);\n  }\n});\n\n// Watch connection state\nwatch(() => connectionState.value, (newState) => {\n  if (DEBUG) console.log(`[AudioOutput] WebRTC connection state changed to: ${newState}`);\n  \n  if (newState === 'connected') {\n    // Try to play the audio when connection is established\n    setTimeout(() => {\n      connectAudioStream();\n      tryPlayAudio();\n    }, 1000);\n  } else if (newState === 'new' || newState === 'connecting') {\n    // Connection is being established\n    reconnectAttempts.value = 0;\n  } else if (newState === 'disconnected' || newState === 'failed') {\n    // Connection was lost - try reconnecting\n    reconnectStream();\n  }\n});\n\n// Watch for partner ID changes to reset state\nwatch(() => partnerId.value, (newPartnerId) => {\n  if (DEBUG) console.log(`[AudioOutput] Partner ID changed: ${newPartnerId}`);\n  \n  // Reset status when partner changes\n  isPlaying.value = false;\n  reconnectAttempts.value = 0;\n  \n  if (!newPartnerId) {\n    // No partner, stop audio\n    if (audioElement.value) {\n      audioElement.value.srcObject = null;\n    }\n  }\n});\n\nonMounted(() => {\n  if (DEBUG) console.log('[AudioOutput] Component mounted');\n  connectAudioStream();\n  \n  // Set up audio play monitoring\n  if (audioElement.value) {\n    audioElement.value.onplaying = () => {\n      if (DEBUG) console.log('[AudioOutput] Audio started playing');\n      isPlaying.value = true;\n    };\n    \n    audioElement.value.onpause = () => {\n      if (DEBUG) console.log('[AudioOutput] Audio paused');\n      isPlaying.value = false;\n    };\n    \n    audioElement.value.onended = () => {\n      if (DEBUG) console.log('[AudioOutput] Audio ended');\n      isPlaying.value = false;\n    };\n    \n    audioElement.value.onerror = (e) => {\n      console.error('[AudioOutput] Audio error:', e);\n      isPlaying.value = false;\n    };\n    \n    // Set initial volume\n    audioElement.value.volume = volume.value;\n  }\n  \n  // Add visibility change listener to handle page visibility changes\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n  \n  // Start checking for audio every 5 seconds\n  startAudioCheck();\n});\n\nonBeforeUnmount(() => {\n  if (DEBUG) console.log('[AudioOutput] Component unmounting, cleaning up');\n  \n  // Clean up resources\n  if (audioElement.value) {\n    audioElement.value.srcObject = null;\n  }\n  \n  // Remove event listeners\n  document.removeEventListener('visibilitychange', handleVisibilityChange);\n  \n  // Clear any intervals\n  stopAudioCheck();\n});\n\n// Start periodic checks for audio\nlet audioCheckInterval: number | null = null;\nfunction startAudioCheck() {\n  stopAudioCheck(); // Clear any existing interval\n  \n  audioCheckInterval = window.setInterval(() => {\n    if (!isPlaying.value && hasRemoteStream.value && connectionState.value === 'connected') {\n      if (DEBUG) console.log('[AudioOutput] Periodic check: Audio not playing, trying to reconnect');\n      connectAudioStream();\n      tryPlayAudio();\n    }\n  }, 5000) as unknown as number;\n}\n\nfunction stopAudioCheck() {\n  if (audioCheckInterval) {\n    clearInterval(audioCheckInterval);\n    audioCheckInterval = null;\n  }\n}\n\n// Handle visibility change (when user switches tabs)\nfunction handleVisibilityChange() {\n  if (document.visibilityState === 'visible') {\n    if (DEBUG) console.log('[AudioOutput] Page became visible, trying to reconnect audio');\n    // Try to reconnect audio when page becomes visible again\n    connectAudioStream();\n    setTimeout(() => {\n      if (!isPlaying.value && hasRemoteStream.value) {\n        tryPlayAudio();\n      }\n    }, 500);\n  }\n}\n\n// Connect the audio stream to the audio element\nfunction connectAudioStream() {\n  if (!audioElement.value) {\n    if (DEBUG) console.log('[AudioOutput] No audio element ref available');\n    return;\n  }\n  \n  if (remoteStream.value) {\n    if (DEBUG) {\n      const audioTracks = remoteStream.value.getAudioTracks();\n      console.log(`[AudioOutput] Connecting remote stream with ${audioTracks.length} audio tracks`);\n      \n      audioTracks.forEach(track => {\n        console.log(`[AudioOutput] Audio track: ${track.label}, enabled: ${track.enabled}, readyState: ${track.readyState}`);\n      });\n    }\n    \n    // Always set the stream to ensure it's connected properly\n    audioElement.value.srcObject = remoteStream.value;\n    \n    // Make sure tracks are enabled\n    remoteStream.value.getAudioTracks().forEach(track => {\n      track.enabled = true;\n    });\n    \n    // Try to play the audio\n    tryPlayAudio();\n  } else {\n    if (DEBUG) console.log('[AudioOutput] No remote stream to connect');\n    audioElement.value.srcObject = null;\n    isPlaying.value = false;\n  }\n}\n\n// Try to play audio with retry logic\nasync function tryPlayAudio() {\n  if (!audioElement.value || !audioElement.value.srcObject) {\n    if (DEBUG) console.log('[AudioOutput] Cannot play: no audio element or srcObject');\n    return;\n  }\n  \n  try {\n    if (DEBUG) console.log(`[AudioOutput] Attempting to play audio (attempt ${reconnectAttempts.value + 1})`);\n    \n    // Check if we have audio tracks and they're enabled\n    const hasTracks = remoteStream.value && remoteStream.value.getAudioTracks().length > 0;\n    if (!hasTracks) {\n      if (DEBUG) console.log('[AudioOutput] No audio tracks available in remote stream');\n    }\n    \n    // Try to play\n    await audioElement.value.play();\n    \n    isPlaying.value = true;\n    reconnectAttempts.value = 0;\n    if (DEBUG) console.log('[AudioOutput] Audio playing successfully');\n  } catch (error) {\n    console.error('[AudioOutput] Error playing audio:', error);\n    isPlaying.value = false;\n    \n    // Check if this is a user interaction error\n    if (error instanceof DOMException && error.name === 'NotAllowedError') {\n      console.warn('[AudioOutput] Audio play was blocked by browser policy, user interaction needed');\n    }\n    \n    // Retry automatically with increasing delay if not manually triggered\n    if (reconnectAttempts.value < maxReconnectAttempts) {\n      reconnectAttempts.value++;\n      const delay = reconnectAttempts.value * 1000; // Increasing delay\n      \n      if (DEBUG) console.log(`[AudioOutput] Will retry playing in ${delay}ms`);\n      setTimeout(tryPlayAudio, delay);\n    } else {\n      console.warn('[AudioOutput] Max retry attempts reached, manual play required');\n    }\n  }\n}\n\n// Function to explicitly reconnect stream\nfunction reconnectStream() {\n  reconnectAttempts.value = 0;\n  if (DEBUG) console.log('[AudioOutput] Manual reconnect requested');\n  \n  if (audioElement.value) {\n    audioElement.value.srcObject = null;\n  }\n  \n  setTimeout(() => {\n    connectAudioStream();\n    tryPlayAudio();\n  }, 500);\n}\n\n// Update audio volume\nfunction updateVolume() {\n  if (audioElement.value) {\n    audioElement.value.volume = volume.value;\n    if (DEBUG) console.log(`[AudioOutput] Volume set to ${volume.value}`);\n  }\n}\n\n// New function to check audio tracks\nfunction checkAudioTracks() {\n  if (remoteStream.value) {\n    const tracks = remoteStream.value.getAudioTracks();\n    console.log(`[AudioOutput] Remote stream has ${tracks.length} audio tracks`);\n    tracks.forEach(track => {\n      console.log(`[AudioOutput] Track: ${track.kind}, enabled: ${track.enabled}, muted: ${track.muted}, readyState: ${track.readyState}`);\n    });\n  }\n}\n\n// Force reconnect with reset state\nfunction forceReconnectStream() {\n  reconnectAttempts.value = 0;\n  if (DEBUG) console.log('[AudioOutput] Manual reconnect requested');\n  \n  if (audioElement.value) {\n    audioElement.value.srcObject = null;\n  }\n  \n  setTimeout(() => {\n    connectAudioStream();\n    tryPlayAudio();\n  }, 500);\n}\n\n// Force try play audio\nfunction forceTryPlayAudio() {\n  if (DEBUG) console.log('[AudioOutput] Manual play requested');\n  // Reset playing state\n  isPlaying.value = false;\n  \n  // Try to play with user interaction\n  setTimeout(() => {\n    tryPlayAudio();\n  }, 100);\n}\n</script>\n\n<style scoped>\n.audio-controls {\n  transition: all 0.3s ease;\n}\n\n.animate-pulse {\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n/* Style the range input (volume slider) */\ninput[type=\"range\"]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 12px;\n  height: 12px;\n  background: #fff;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n  width: 12px;\n  height: 12px;\n  background: #fff;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.hidden {\n  display: none;\n}\n</style> ","<template>\n  <div class=\"min-h-screen font-sans\">\n    <!-- Purple glow effects -->\n    <div class=\"fixed inset-0 pointer-events-none\">\n      <div class=\"absolute top-1/4 left-1/4 w-32 h-32 bg-purple-500/20 rounded-full blur-3xl animate-pulse\"></div>\n      <div class=\"absolute top-1/3 right-1/3 w-24 h-24 bg-violet-500/20 rounded-full blur-2xl animate-pulse delay-1000\"></div>\n      <div class=\"absolute bottom-1/4 left-1/3 w-28 h-28 bg-indigo-500/20 rounded-full blur-3xl animate-pulse delay-2000\"></div>\n      <div class=\"absolute top-1/2 right-1/4 w-20 h-20 bg-fuchsia-500/20 rounded-full blur-2xl animate-pulse delay-500\"></div>\n    </div>\n    \n    <Starfield />\n    \n    <div class=\"relative min-h-screen z-10 text-white\">\n      <!-- Header -->\n      <header class=\"p-4 border-b border-white/10\">\n        <div class=\"max-w-4xl mx-auto\">\n          <!-- Logo -->\n          <div class=\"text-center mb-4\">\n            <div class=\"inline-flex items-center gap-2\">\n              <div class=\"w-6 h-6 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-full flex items-center justify-center shadow-lg shadow-cyan-500/50\">\n                <span class=\"text-white text-xs\">✨</span>\n              </div>\n              <h1 class=\"text-lg font-bold bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent drop-shadow-lg\">\n                SpaceTalk.live\n              </h1>\n            </div>\n          </div>\n\n          <!-- Statistics -->\n          <div class=\"flex justify-center gap-2 mb-3\">\n            <div class=\"bg-green-500/20 rounded-full px-2 py-1 text-xs flex items-center gap-1\">\n              <div class=\"w-1.5 h-1.5 bg-green-400 rounded-full animate-pulse\"></div>\n              <span>{{ onlineCount }} online</span>\n            </div>\n            <div v-if=\"dailyConnections > 0\" class=\"bg-purple-500/20 rounded-full px-2 py-1 text-xs\">\n              Today: {{ dailyConnections }} voices\n            </div>\n          </div>\n\n          <!-- Vibe Selector -->\n          <div class=\"grid grid-cols-2 gap-2 text-xs relative\">\n            <div class=\"relative\" ref=\"vibeDropdownRef\">\n              <div @click=\"toggleVibeDropdown\" class=\"cursor-pointer bg-purple-500/20 border border-purple-500/30 rounded-full h-8 flex items-center justify-between px-3 text-xs shadow-lg shadow-purple-500/20 text-white hover:bg-purple-500/30 active:scale-95 transition-all duration-150\">\n                <span class=\"flex items-center\">\n                  {{ getVibeEmoji(selectedVibe) }} {{ getVibeText(selectedVibe) }}\n                </span>\n                <span class=\"ml-2 text-xs transition-transform duration-300\" :class=\"{ 'rotate-180': showVibeDropdown }\">▼</span>\n              </div>\n              \n              <!-- Dropdown -->\n              <div v-if=\"showVibeDropdown\" class=\"absolute top-full left-0 mt-1 w-full bg-gray-800/95 backdrop-blur-md border border-gray-700 rounded-xl shadow-xl z-20 overflow-hidden transition-all duration-200 animate-dropdown\">\n                <div class=\"py-1\">\n                  <div\n                    v-for=\"vibe in vibes\" \n                    :key=\"vibe.value\"\n                    @click=\"selectVibe(vibe.value)\"\n                    class=\"px-3 py-2 hover:bg-gray-700/80 cursor-pointer transition-colors flex items-center gap-2\"\n                    :class=\"{'bg-gray-700/70': selectedVibe === vibe.value}\"\n                  >\n                    <span class=\"text-sm\">{{ vibe.emoji }}</span>\n                    <span>{{ vibe.text }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <button\n              @click=\"isFiltersOpen = true\"\n              class=\"bg-violet-500/20 border border-violet-500/30 rounded-full h-8 px-3 text-xs hover:bg-violet-500/30 active:scale-95 transition-all duration-150 shadow-lg shadow-violet-500/20\"\n            >\n              🔍 Filters\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <!-- Main Content Area -->\n      <main class=\"flex-1 p-4\">\n        <div class=\"max-w-md mx-auto space-y-6\">\n          <!-- Connection Status Card -->\n          <connection-card \n            :status=\"connectionStatus\" \n            :partner-info=\"partnerInfo\" \n            :error-message=\"connectionError\"\n            :show-status=\"true\"\n          />\n\n          <!-- Auto-reconnect option -->\n          <div class=\"flex items-center justify-center gap-2 mb-4\">\n            <input\n              type=\"checkbox\"\n              id=\"auto-reconnect\"\n              v-model=\"autoReconnect\"\n              class=\"w-3 h-3 rounded border-gray-600 bg-gray-700 text-emerald-500 focus:ring-emerald-500 focus:ring-1\"\n            />\n            <label for=\"auto-reconnect\" class=\"text-xs text-gray-400 cursor-pointer\">\n              Auto-reconnect to others\n            </label>\n          </div>\n\n          <!-- Control Buttons -->\n          <control-buttons\n            :is-muted=\"isMuted\"\n            :is-disabled=\"connectionStatus !== 'connected'\"\n            @toggle-mute=\"toggleMute\"\n            @find-next=\"findNext\"\n            @toggle-chat=\"toggleChat\"\n            @toggle-games=\"isGamesOpen = true\"\n            @toggle-history=\"isHistoryOpen = true\"\n            @toggle-donation=\"isDonationOpen = true\"\n          />\n\n          <!-- Quote -->\n          <div class=\"text-center\">\n            <p class=\"text-xs text-gray-400 italic\">\"{{ currentQuote }}\"</p>\n          </div>\n        </div>\n      </main>\n\n      <!-- Guidelines Section -->\n      <footer class=\"p-4 border-t border-white/10\">\n        <div class=\"max-w-md mx-auto text-center space-y-2\">\n          <h3 class=\"text-sm font-semibold text-emerald-400\">Community Guidelines</h3>\n          <div class=\"text-xs text-gray-300 space-y-1\">\n            <p>• Must be 18+ years old to use this service</p>\n            <p>• Be respectful and kind to other users</p>\n            <p>• No harassment, hate speech, or inappropriate content</p>\n            <p>• Report any misconduct using the report feature</p>\n            <p>• Your privacy and safety are our priority</p>\n          </div>\n          <p class=\"text-xs text-gray-400 mt-3\">\n            By using SpaceTalk.live, you agree to follow these guidelines\n          </p>\n          \n          <!-- Links Section -->\n          <div class=\"flex justify-center gap-3 mt-4 text-xs\">\n            <a href=\"#\" class=\"bg-cyan-500/20 border border-cyan-500/30 rounded-full px-3 py-1.5 text-cyan-300 hover:text-cyan-200 hover:bg-cyan-500/30 transition-all shadow-lg shadow-cyan-500/20\">\n              ℹ️ About\n            </a>\n            <a href=\"https://instagram.com\" target=\"_blank\" class=\"bg-pink-500/20 border border-pink-500/30 rounded-full px-3 py-1.5 text-pink-300 hover:text-pink-200 hover:bg-pink-500/30 transition-all shadow-lg shadow-pink-500/20\">\n              📷 Instagram\n            </a>\n            <a href=\"https://facebook.com\" target=\"_blank\" class=\"bg-blue-500/20 border border-blue-500/30 rounded-full px-3 py-1.5 text-blue-300 hover:text-blue-200 hover:bg-blue-500/30 transition-all shadow-lg shadow-blue-500/20\">\n              📘 Facebook\n            </a>\n            <a href=\"mailto:contact@spacetalk.live\" class=\"bg-emerald-500/20 border border-emerald-500/30 rounded-full px-3 py-1.5 text-emerald-300 hover:text-emerald-200 hover:bg-emerald-500/30 transition-all shadow-lg shadow-emerald-500/20\">\n              📧 Contact\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n\n    <!-- Call History Modal -->\n    <div v-if=\"isHistoryOpen\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n      <div class=\"bg-gray-800 rounded-2xl p-6 w-full max-w-sm\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h2 class=\"text-lg font-semibold text-indigo-400\">📞 Call History</h2>\n          <button\n            @click=\"isHistoryOpen = false\"\n            class=\"text-gray-400 hover:text-white text-xl\"\n          >\n            ✕\n          </button>\n        </div>\n\n        <div class=\"space-y-3\">\n          <div v-if=\"callHistory.length === 0\" class=\"text-center py-8\">\n            <p class=\"text-gray-400 text-sm\">No recent calls</p>\n            <p class=\"text-xs text-gray-500 mt-1\">Your last 3 conversations will appear here</p>\n          </div>\n          \n          <div\n            v-else\n            v-for=\"(call, index) in callHistory\"\n            :key=\"call.id\"\n            class=\"bg-gray-700 rounded-lg p-3 flex items-center justify-between hover:bg-gray-600 transition-colors\"\n          >\n            <div class=\"flex items-center gap-3\">\n              <span class=\"text-2xl\">{{ call.flag }}</span>\n              <div>\n                <p class=\"text-white text-sm font-medium\">{{ call.country }}</p>\n                <p class=\"text-gray-400 text-xs\">\n                  {{ formatTime(call.timestamp) }}\n                </p>\n              </div>\n            </div>\n            <div class=\"text-xs text-gray-500\">\n              #{{ index + 1 }}\n            </div>\n          </div>\n        </div>\n\n        <p v-if=\"callHistory.length > 0\" class=\"text-xs text-gray-500 text-center mt-4\">\n          History clears when you leave the page\n        </p>\n      </div>\n    </div>\n\n    <!-- Filters Modal -->\n    <div v-if=\"isFiltersOpen\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-20 p-4\">\n      <div class=\"bg-gray-800 rounded-2xl p-6 w-full max-w-md max-h-[80vh] overflow-y-auto relative\">\n        <div class=\"flex justify-between items-center mb-6\">\n          <h2 class=\"text-lg font-semibold text-emerald-400\">Filters & Preferences</h2>\n          <button\n            @click=\"isFiltersOpen = false\"\n            class=\"text-gray-400 hover:text-white text-xl\"\n          >\n            ✕\n          </button>\n        </div>\n\n        <div class=\"space-y-6\">\n          <!-- Preferred Countries -->\n          <div>\n            <label class=\"block text-sm font-medium mb-3 text-emerald-400\">Preferred Countries</label>\n            <div class=\"bg-gray-700 border border-gray-600 rounded-lg p-3 min-h-[60px] max-h-32 overflow-y-auto scrollbar-hide\">\n              <p v-if=\"preferredCountries.length === 0\" class=\"text-xs text-gray-400 p-2\">No countries selected</p>\n              <div v-else class=\"flex flex-wrap gap-2\">\n                <span \n                  v-for=\"countryCode in preferredCountries\" \n                  :key=\"countryCode\"\n                  class=\"bg-emerald-600 text-white px-2 py-1 rounded text-xs flex items-center gap-1\"\n                >\n                  <span class=\"flag-icon\">{{ getCountryFlag(countryCode) }}</span> {{ getCountryName(countryCode) }}\n                  <button\n                    @click=\"removePreferredCountry(countryCode)\"\n                    class=\"text-emerald-200 hover:text-white ml-1\"\n                  >\n                    ✕\n                  </button>\n                </span>\n              </div>\n            </div>\n            \n            <div class=\"mt-2 relative preferred-dropdown\" ref=\"preferredDropdownRef\">\n              <div @click=\"togglePreferredDropdown\" class=\"cursor-pointer flex items-center justify-between w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-sm text-white\">\n                <span class=\"text-gray-300\">Add preferred country...</span>\n                <span class=\"ml-1\">▼</span>\n              </div>\n            </div>\n            <p class=\"text-xs text-gray-400 mt-2\">You'll be matched only with users from these countries</p>\n          </div>\n\n          <!-- Blocked Countries -->\n          <div>\n            <label class=\"block text-sm font-medium mb-3 text-red-400\">Blocked Countries</label>\n            <div class=\"bg-gray-700 border border-gray-600 rounded-lg p-3 min-h-[60px] max-h-32 overflow-y-auto scrollbar-hide\">\n              <p v-if=\"blockedCountries.length === 0\" class=\"text-xs text-gray-400 p-2\">No countries blocked</p>\n              <div v-else class=\"flex flex-wrap gap-2\">\n                <span \n                  v-for=\"countryCode in blockedCountries\" \n                  :key=\"countryCode\"\n                  class=\"bg-red-600 text-white px-2 py-1 rounded text-xs flex items-center gap-1\"\n                >\n                  <span class=\"flag-icon\">{{ getCountryFlag(countryCode) }}</span> {{ getCountryName(countryCode) }}\n                  <button\n                    @click=\"removeBlockedCountry(countryCode)\"\n                    class=\"text-red-200 hover:text-white ml-1\"\n                  >\n                    ✕\n                  </button>\n                </span>\n              </div>\n            </div>\n            \n            <div class=\"mt-2 relative blocked-dropdown\" ref=\"blockedDropdownRef\">\n              <div @click=\"toggleBlockedDropdown\" class=\"cursor-pointer flex items-center justify-between w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-sm text-white\">\n                <span class=\"text-gray-300\">Add blocked country...</span>\n                <span class=\"ml-1\">▼</span>\n              </div>\n            </div>\n            <p class=\"text-xs text-gray-400 mt-2\">You won't be matched with users from these countries</p>\n          </div>\n        </div>\n        \n        <div class=\"flex gap-2 mt-8\">\n          <button\n            @click=\"clearFilters\"\n            class=\"flex-1 bg-gray-600 hover:bg-gray-700 text-white py-3 px-4 rounded-lg text-sm transition-colors\"\n          >\n            Clear All\n          </button>\n          <button\n            @click=\"applyFilters\"\n            class=\"flex-1 bg-emerald-600 hover:bg-emerald-700 text-white py-3 px-4 rounded-lg text-sm transition-colors\"\n          >\n            Apply Filters\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Dropdown lists outside the filters modal -->\n    <div v-if=\"showPreferredDropdown\" class=\"fixed z-50 max-h-64 bg-gray-700 border border-gray-600 rounded-lg shadow-lg overflow-y-auto scrollbar-hide dropdown-outer preferred-outer\">\n      <div class=\"py-1 w-full\">\n        <div v-if=\"availableCountriesForPreferred.length === 0\" class=\"text-xs text-gray-400 px-3 py-2\">No more countries available</div>\n        <div \n          v-for=\"country in availableCountriesForPreferred\" \n          :key=\"country.value\"\n          @click=\"() => { addPreferredCountry(country.value); togglePreferredDropdown(); }\"\n          class=\"cursor-pointer px-3 py-2 hover:bg-gray-600 flex items-center gap-2\"\n        >\n          <span class=\"flag-icon w-6 text-center\">{{ country.flag }}</span>\n          <span class=\"text-sm\">{{ country.name }}</span>\n        </div>\n      </div>\n    </div>\n    \n    <div v-if=\"showBlockedDropdown\" class=\"fixed z-50 max-h-64 bg-gray-700 border border-gray-600 rounded-lg shadow-lg overflow-y-auto scrollbar-hide dropdown-outer blocked-outer\">\n      <div class=\"py-1 w-full\">\n        <div v-if=\"availableCountriesForBlocked.length === 0\" class=\"text-xs text-gray-400 px-3 py-2\">No more countries available</div>\n        <div \n          v-for=\"country in availableCountriesForBlocked\" \n          :key=\"country.value\"\n          @click=\"() => { addBlockedCountry(country.value); toggleBlockedDropdown(); }\"\n          class=\"cursor-pointer px-3 py-2 hover:bg-gray-600 flex items-center gap-2\"\n        >\n          <span class=\"flag-icon w-6 text-center\">{{ country.flag }}</span>\n          <span class=\"text-sm\">{{ country.name }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modals -->\n    <chat-modal\n      :is-open=\"isChatOpen\"\n      @close=\"isChatOpen = false\"\n      :messages=\"chatMessages\"\n      @send-message=\"sendChatMessage\"\n      :is-connected=\"connectionStatus === 'connected'\"\n    />\n    \n    <games-modal\n      :is-open=\"isGamesOpen\"\n      @close=\"isGamesOpen = false\"\n      :is-connected=\"connectionStatus === 'connected'\"\n      @select-game=\"selectGame\"\n      :partner-id=\"partnerId || ''\"\n      :initial-game-room-id=\"gameRoomId\"\n    />\n    \n    <donation-modal\n      :is-open=\"isDonationOpen\"\n      @close=\"isDonationOpen = false\"\n    />\n    \n    <!-- Audio component integrated with controls but not directly visible -->\n    <div class=\"hidden\" v-if=\"connectionStatus === 'connected'\">\n      <AudioOutput :showControls=\"false\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount, computed, watch, nextTick } from 'vue';\nimport { useSocket } from '@/services/socket';\nimport { useWebRTC } from '@/services/webrtc';\nimport { useChat } from '@/services/chat';\nimport { useRoute } from 'vue-router';\n\n// Components\nimport ConnectionCard from '@/components/connection-card.vue';\nimport ControlButtons from '@/components/control-buttons.vue';\nimport ChatModal from '@/components/chat-modal.vue';\nimport GamesModal from '@/components/games-modal.vue';\nimport DonationModal from '@/components/donation-modal.vue';\nimport SelectVue from '@/components/ui/select.vue';\nimport Starfield from '@/components/starfield.vue';\nimport AudioOutput from '@/components/audio/AudioOutput.vue';\n\n// State management\nconst connectionStatus = ref<string>('disconnected'); // disconnected, searching, matched, connected\nconst partnerId = ref<string | null>(null);\nconst partnerInfo = ref<any>(null);\nconst connectionError = ref<string>(''); // Add variable for error messages\nconst isMuted = ref(false);\n\n// UI state\nconst isChatOpen = ref(false);\nconst isGamesOpen = ref(false);\nconst isDonationOpen = ref(false);\nconst isHistoryOpen = ref(false);\nconst isFiltersOpen = ref(false);\nconst onlineCount = ref(0);\nconst dailyConnections = ref(0);\nconst autoReconnect = ref(false);\nconst chatMessages = ref<Array<{id: string; message: string; isOwn: boolean; timestamp: number}>>([]);\nconst callHistory = ref<Array<{id: string; country: string; flag: string; timestamp: number}>>([]);\n\n// Filter options\nconst selectedVibe = ref('any');\nconst showVibeDropdown = ref(false);\nconst preferredCountries = ref<string[]>([]);\nconst blockedCountries = ref<string[]>([]);\nconst tempCountrySelect = ref('');\nconst tempBlockedSelect = ref('');\nconst showPreferredDropdown = ref(false);\nconst showBlockedDropdown = ref(false);\n\n// Vibes options\nconst vibes = [\n  { value: 'any', text: 'Go With the Flow', emoji: '🌟' },\n  { value: 'chill', text: 'Chill', emoji: '😌' },\n  { value: 'fun', text: 'Fun', emoji: '🎉' },\n  { value: 'curious', text: 'Curious', emoji: '🤔' },\n  { value: 'creative', text: 'Creative', emoji: '🎨' }\n];\n\n// Temporary countries list until API is loaded\nconst countries = ref<any[]>([\n  { value: 'any', label: '🌍 Any Country', name: 'Any Country', flag: '🌍' },\n  { value: 'sa', label: '🇸🇦 Saudi Arabia', name: 'Saudi Arabia', flag: '🇸🇦' },\n  { value: 'ae', label: '🇦🇪 UAE', name: 'United Arab Emirates', flag: '🇦🇪' },\n  { value: 'eg', label: '🇪🇬 Egypt', name: 'Egypt', flag: '🇪🇬' },\n  { value: 'us', label: '🇺🇸 USA', name: 'United States', flag: '🇺🇸' },\n  { value: 'gb', label: '🇬🇧 UK', name: 'United Kingdom', flag: '🇬🇧' },\n  { value: 'de', label: '🇩🇪 Germany', name: 'Germany', flag: '🇩🇪' },\n  { value: 'fr', label: '🇫🇷 France', name: 'France', flag: '🇫🇷' },\n  { value: 'ca', label: '🇨🇦 Canada', name: 'Canada', flag: '🇨🇦' },\n  { value: 'au', label: '🇦🇺 Australia', name: 'Australia', flag: '🇦🇺' },\n  { value: 'jp', label: '🇯🇵 Japan', name: 'Japan', flag: '🇯🇵' },\n  { value: 'kr', label: '🇰🇷 Korea', name: 'South Korea', flag: '🇰🇷' },\n  { value: 'cn', label: '🇨🇳 China', name: 'China', flag: '🇨🇳' },\n  { value: 'in', label: '🇮🇳 India', name: 'India', flag: '🇮🇳' },\n  { value: 'br', label: '🇧🇷 Brazil', name: 'Brazil', flag: '🇧🇷' },\n  { value: 'ma', label: '🇲🇦 Morocco', name: 'Morocco', flag: '🇲🇦' },\n  { value: 'dz', label: '🇩🇿 Algeria', name: 'Algeria', flag: '🇩🇿' },\n  { value: 'tn', label: '🇹🇳 Tunisia', name: 'Tunisia', flag: '🇹🇳' },\n  { value: 'ly', label: '🇱🇾 Libya', name: 'Libya', flag: '🇱🇾' },\n  { value: 'jo', label: '🇯🇴 Jordan', name: 'Jordan', flag: '🇯🇴' },\n  { value: 'lb', label: '🇱🇧 Lebanon', name: 'Lebanon', flag: '🇱🇧' },\n  { value: 'kw', label: '🇰🇼 Kuwait', name: 'Kuwait', flag: '🇰🇼' },\n  { value: 'bh', label: '🇧🇭 Bahrain', name: 'Bahrain', flag: '🇧🇭' },\n  { value: 'qa', label: '🇶🇦 Qatar', name: 'Qatar', flag: '🇶🇦' },\n  { value: 'om', label: '🇴🇲 Oman', name: 'Oman', flag: '🇴🇲' },\n  { value: 'ye', label: '🇾🇪 Yemen', name: 'Yemen', flag: '🇾🇪' },\n  { value: 'iq', label: '🇮🇶 Iraq', name: 'Iraq', flag: '🇮🇶' },\n  { value: 'sy', label: '🇸🇾 Syria', name: 'Syria', flag: '🇸🇾' },\n  { value: 'sd', label: '🇸🇩 Sudan', name: 'Sudan', flag: '🇸🇩' }\n]);\n\n// Load all countries from API\nconst loadCountries = async () => {\n  try {\n    const response = await fetch('/api/countries');\n    if (!response.ok) {\n      throw new Error('Failed to load countries');\n    }\n    \n    const data = await response.json();\n    // Use static list if API fails\n    if (!data || data.length === 0) {\n      console.log('Using static countries list');\n      return;\n    }\n    \n    // Add \"any\" option to the beginning\n    countries.value = [\n      { value: 'any', label: '🌍 Any Country', name: 'Any Country', flag: '🌍' },\n      ...data\n    ];\n    \n    console.log('Countries loaded:', countries.value.length);\n  } catch (error) {\n    console.error('Failed to load countries list:', error);\n    // Static list is already loaded as fallback\n  }\n};\n\n// User's own country information\nconst userLocation = ref<{\n  country: string;\n  countryCode: string;\n  flag: string;\n} | null>(null);\n\n// Cosmic quotes\nconst cosmicQuotes = [\n  \"You're not alone in the universe.\",\n  \"Every voice carries a story from across the stars.\",\n  \"Connection transcends distance in the cosmic web.\",\n  \"Discover new worlds through conversation.\",\n  \"In space, every voice matters.\"\n];\nconst currentQuote = ref(cosmicQuotes[Math.floor(Math.random() * cosmicQuotes.length)]);\n\n// Initialize services\nconst socketService = useSocket();\nconst socket = socketService.socket;\nconst { isConnected } = socketService;\nconst { \n  remoteStream,\n  localStream,\n  connectionState: webRTCConnectionState,\n  createOffer, \n  handleOffer, \n  handleAnswer, \n  handleIceCandidate,\n  closeConnection,\n  toggleMicrophone,\n  initializeLocalStream\n} = useWebRTC();\nconst chat = useChat();\n\n// Extract route params\nconst route = useRoute();\nconst gameRoomId = ref(route.params.roomId as string || null);\n\n// If we came from a game link, automatically open the games modal\nwatch(() => gameRoomId.value, (newRoomId) => {\n  if (newRoomId) {\n    isGamesOpen.value = true;\n  }\n}, { immediate: true });\n\n// Computed properties for country selectors\nconst availableCountriesForPreferred = computed(() => {\n  // Show all countries when no preferred countries are selected\n  return countries.value.filter(c => \n    c.value !== 'any' && \n    !preferredCountries.value.includes(c.value) && \n    !blockedCountries.value.includes(c.value)\n  );\n});\n\nconst availableCountriesForBlocked = computed(() => {\n  // Show all countries when no blocked countries are selected\n  return countries.value.filter(c => \n    c.value !== 'any' && \n    !blockedCountries.value.includes(c.value) && \n    !preferredCountries.value.includes(c.value)\n  );\n});\n\n// Methods\nconst toggleMute = async () => {\n  const newValue = await toggleMicrophone();\n  if (isMuted.value !== !newValue) {\n    isMuted.value = !newValue;\n  }\n  \n  if (connectionStatus.value === 'connected') {\n    setTimeout(() => {\n      const audioElement = document.querySelector('audio');\n      if (audioElement && audioElement.paused) {\n        audioElement.play().catch(() => {});\n      }\n    }, 300);\n  }\n};\n\nconst findNext = async () => {\n  // If we don't have microphone access yet, request it\n  if (!localStream.value) {\n    try {\n      await initializeLocalStream();\n      console.log('Microphone initialized');\n    } catch (error) {\n      console.error('Failed to access microphone', error);\n      alert('Please allow microphone access to use voice chat');\n      return;\n    }\n  }\n  \n  // Handle next partner request\n  if (socket.value) {\n    // Show status of searching for a new partner\n    connectionStatus.value = 'searching';\n    \n    // If there's a current partner, disconnect from them first\n    if (partnerId.value) {\n      console.log('Disconnecting from current partner');\n      socket.value.emit('disconnect-partner');\n      partnerId.value = null;\n      partnerInfo.value = null;\n      chatMessages.value = [];\n      // Close current WebRTC connection\n      closeConnection();\n    }\n    \n    console.log('Finding new partner with preferences');\n    // Send request to join the waiting queue with user preferences\n    socket.value.emit('join-queue', {\n      vibe: selectedVibe.value,\n      preferences: {\n        preferredCountries: preferredCountries.value.length ? preferredCountries.value : undefined,\n        blockedCountries: blockedCountries.value.length ? blockedCountries.value : undefined\n      }\n    });\n    \n    dailyConnections.value++;\n  }\n};\n\nconst toggleChat = () => {\n  isChatOpen.value = !isChatOpen.value;\n  \n  // Mark messages as read when opening chat\n  if (isChatOpen.value && partnerId.value) {\n    chat.markAsRead(partnerId.value);\n  }\n};\n\nconst toggleGamesOpen = () => {\n  isGamesOpen.value = !isGamesOpen.value;\n};\n\nconst toggleDonationOpen = () => {\n  isDonationOpen.value = !isDonationOpen.value;\n};\n\nconst toggleHistoryOpen = () => {\n  isHistoryOpen.value = !isHistoryOpen.value;\n};\n\nconst toggleFiltersOpen = () => {\n  isFiltersOpen.value = !isFiltersOpen.value;\n};\n\nconst sendChatMessage = (message: string) => {\n  if (socket.value && partnerId.value) {\n    socket.value.emit('chat-message', { message, to: partnerId.value });\n    \n    chatMessages.value.push({\n      id: Date.now().toString(),\n      message,\n      isOwn: true,\n      timestamp: Date.now()\n    });\n  }\n};\n\nconst selectGame = (game: string) => {\n  console.log(`Selected game: ${game}`);\n  if (socket.value && partnerId.value) {\n    socket.value.emit('game-invite', { game, to: partnerId.value });\n  }\n};\n\n// Filter methods\nconst addPreferredCountry = (countryCode: string) => {\n  if (countryCode && !preferredCountries.value.includes(countryCode)) {\n    preferredCountries.value.push(countryCode);\n  }\n};\n\nconst removePreferredCountry = (countryCode: string) => {\n  preferredCountries.value = preferredCountries.value.filter(c => c !== countryCode);\n};\n\nconst addBlockedCountry = (countryCode: string) => {\n  if (countryCode && !blockedCountries.value.includes(countryCode)) {\n    blockedCountries.value.push(countryCode);\n  }\n};\n\nconst removeBlockedCountry = (countryCode: string) => {\n  blockedCountries.value = blockedCountries.value.filter(c => c !== countryCode);\n};\n\nconst clearFilters = () => {\n  preferredCountries.value = [];\n  blockedCountries.value = [];\n  localStorage.removeItem('preferredCountries');\n  localStorage.removeItem('blockedCountries');\n};\n\nconst applyFilters = () => {\n  isFiltersOpen.value = false;\n  saveFilterSettings();\n  restartMatching();\n};\n\n// Utility methods\nconst getCountryFlag = (countryCode: string): string => {\n  const country = countries.value.find(c => c.value === countryCode);\n  return country ? country.flag : '🏳️';\n};\n\nconst getCountryName = (countryCode: string): string => {\n  const country = countries.value.find(c => c.value === countryCode);\n  return country ? country.name : 'Earth';\n};\n\nconst formatTime = (timestamp: number): string => {\n  return new Date(timestamp).toLocaleTimeString([], { \n    hour: '2-digit', \n    minute: '2-digit' \n  });\n};\n\n// Vibe selector functions\nconst toggleVibeDropdown = () => {\n  showVibeDropdown.value = !showVibeDropdown.value;\n};\n\nconst selectVibe = (value: string) => {\n  selectedVibe.value = value;\n  showVibeDropdown.value = false;\n};\n\nconst getVibeEmoji = (value: string) => {\n  const vibe = vibes.find(v => v.value === value);\n  return vibe ? vibe.emoji : '🌟';\n};\n\nconst getVibeText = (value: string) => {\n  const vibe = vibes.find(v => v.value === value);\n  return vibe ? vibe.text : 'Go With the Flow';\n};\n\n// Toggle dropdown visibility\nconst preferredDropdownRef = ref<HTMLElement | null>(null);\nconst blockedDropdownRef = ref<HTMLElement | null>(null);\n\n// Update dropdown positions\nconst updateDropdownPosition = () => {\n  nextTick(() => {\n    const preferredDropdownRect = preferredDropdownRef.value?.getBoundingClientRect();\n    const blockedDropdownRect = blockedDropdownRef.value?.getBoundingClientRect();\n    \n    const preferredOuter = document.querySelector('.preferred-outer') as HTMLElement;\n    const blockedOuter = document.querySelector('.blocked-outer') as HTMLElement;\n    \n    if (preferredDropdownRect && preferredOuter) {\n      preferredOuter.style.left = `${preferredDropdownRect.left}px`;\n      preferredOuter.style.top = `${preferredDropdownRect.bottom + 5}px`;\n      preferredOuter.style.width = `${preferredDropdownRect.width}px`;\n    }\n    \n    if (blockedDropdownRect && blockedOuter) {\n      blockedOuter.style.left = `${blockedDropdownRect.left}px`;\n      blockedOuter.style.top = `${blockedDropdownRect.bottom + 5}px`;\n      blockedOuter.style.width = `${blockedDropdownRect.width}px`;\n    }\n  });\n};\n\nconst togglePreferredDropdown = () => {\n  showPreferredDropdown.value = !showPreferredDropdown.value;\n  if (showPreferredDropdown.value) {\n    showBlockedDropdown.value = false;\n    updateDropdownPosition();\n  }\n};\n\nconst toggleBlockedDropdown = () => {\n  showBlockedDropdown.value = !showBlockedDropdown.value;\n  if (showBlockedDropdown.value) {\n    showPreferredDropdown.value = false;\n    updateDropdownPosition();\n  }\n};\n\n// Save and load filter settings\nconst saveFilterSettings = () => {\n  // Save to localStorage for persistence\n  localStorage.setItem('preferredCountries', JSON.stringify(preferredCountries.value));\n  localStorage.setItem('blockedCountries', JSON.stringify(blockedCountries.value));\n};\n\nconst loadFilterSettings = () => {\n  try {\n    const savedPreferred = localStorage.getItem('preferredCountries');\n    const savedBlocked = localStorage.getItem('blockedCountries');\n    \n    if (savedPreferred) {\n      preferredCountries.value = JSON.parse(savedPreferred);\n    }\n    \n    if (savedBlocked) {\n      blockedCountries.value = JSON.parse(savedBlocked);\n    }\n  } catch (error) {\n    console.error('Error loading filter settings:', error);\n  }\n};\n\nconst restartMatching = () => {\n  if (socket.value && isConnected.value) {\n    socket.value.emit('startMatching', {\n      preferredCountries: preferredCountries.value.length > 0 ? preferredCountries.value : null,\n      blockedCountries: blockedCountries.value\n    });\n  }\n};\n\n// Socket event setup\nonMounted(() => {\n  console.log('Home view mounted');\n  \n  // Load countries list\n  loadCountries();\n  \n  // Load saved preferences\n  try {\n    const savedPreferredCountries = localStorage.getItem('preferredCountries');\n    const savedBlockedCountries = localStorage.getItem('blockedCountries');\n    \n    if (savedPreferredCountries) {\n      preferredCountries.value = JSON.parse(savedPreferredCountries);\n    }\n    \n    if (savedBlockedCountries) {\n      blockedCountries.value = JSON.parse(savedBlockedCountries);\n    }\n  } catch (error) {\n    console.error('Error loading saved preferences:', error);\n  }\n  \n  // Set up socket.io event listeners\n  if (socket.value) {\n    // Listen for user location data from server\n    socket.value.on('user-location', (locationData: any) => {\n      console.log('Received user location:', locationData);\n      \n      // تأكد من أن البيانات صحيحة وكاملة\n      if (locationData && locationData.countryCode && locationData.country) {\n        userLocation.value = locationData;\n        \n        // إضافة البلد تلقائياً إلى قائمة البلدان المفضلة إذا لم يكن المستخدم قد اختار أي بلد\n        if (preferredCountries.value.length === 0 && locationData.countryCode !== 'unknown' && locationData.countryCode !== 'earth') {\n          console.log(`Adding user's country ${locationData.country} (${locationData.countryCode}) to preferred countries`);\n          preferredCountries.value.push(locationData.countryCode);\n          \n          // حفظ الإعدادات\n          saveFilterSettings();\n        }\n        \n        // إعلام المستخدم بالبلد المكتشف\n        console.log(`Your location: ${locationData.flag} ${locationData.country}`);\n      } else {\n        console.warn('Received incomplete location data:', locationData);\n      }\n    });\n\n    socket.value.on('online-count', (count: number) => {\n      onlineCount.value = count;\n    });\n    \n    socket.value.on('matched', (data: any) => {\n      console.log('Partner matched with event:', data);\n      \n      // Set the state to \"matched\" explicitly\n      connectionStatus.value = 'matched';\n      connectionError.value = ''; // Clear any previous error messages\n      \n      partnerId.value = data.partnerId;\n      partnerInfo.value = {\n        id: data.partnerId,\n        country: data.country || 'Earth',\n        countryCode: data.countryCode || 'unknown',\n        flag: data.flag || '🌍',\n        vibe: data.vibe || 'any'\n      };\n      \n      // Add to call history\n      callHistory.value.unshift({\n        id: Date.now().toString(),\n        country: partnerInfo.value.country,\n        flag: partnerInfo.value.flag,\n        timestamp: Date.now()\n      });\n      \n      // Keep only last 3 entries\n      if (callHistory.value.length > 3) {\n        callHistory.value = callHistory.value.slice(0, 3);\n      }\n      \n      // Start WebRTC connection immediately without delay\n      if (data.partnerId) {\n        console.log('Initiating WebRTC connection with partner immediately');\n        const { createOffer } = useWebRTC();\n        createOffer(data.partnerId);\n        \n        // Make sure the state doesn't change to \"connected\" until audio is confirmed working\n        setTimeout(() => {\n          if (connectionStatus.value === 'matched' && webRTCConnectionState.value === 'connected') {\n            console.log('WebRTC connection established, updating UI state');\n            connectionStatus.value = 'connected';\n          }\n        }, 2000);\n      }\n    });\n\n    socket.value.on('direct-connection-established', (data: any) => {\n      console.log('Direct connection established:', data);\n      connectionStatus.value = 'connected';\n      partnerId.value = data.partnerId;\n              partnerInfo.value = {\n          id: data.partnerId,\n          country: data.country || 'Earth',\n          countryCode: data.countryCode || 'unknown',\n          flag: data.flag || '🌍'\n        };\n    });\n    \n    socket.value.on('partner-disconnected', () => {\n      connectionStatus.value = 'disconnected';\n      partnerId.value = null;\n      partnerInfo.value = null;\n      chatMessages.value = [];\n      \n      // If auto-reconnect is enabled, find a new partner\n      if (autoReconnect.value) {\n        setTimeout(() => {\n          if (connectionStatus.value === 'disconnected' && autoReconnect.value) {\n            findNext();\n          }\n        }, 2000);\n      }\n    });\n    \n    socket.value.on('chat-message', (data: any) => {\n      chatMessages.value.push({\n        id: Date.now().toString(),\n        message: data.message,\n        isOwn: false,\n        timestamp: Date.now()\n      });\n    });\n    \n    socket.value.on('error', (data: any) => {\n      console.error('Socket error:', data.message);\n      if (data.type === 'matching') {\n        connectionStatus.value = 'disconnected';\n      }\n    });\n\n    socket.value.on('voice-offer', handleVoiceOffer);\n    socket.value.on('voice-answer', handleVoiceAnswer);\n    socket.value.on('ice-candidate', processIceCandidateMessage);\n    \n    // Request online count when component mounts\n    socket.value.emit('get-online-count');\n  }\n\n  document.addEventListener('click', handleClickOutside);\n  window.addEventListener('resize', updateDropdownPosition);\n  document.addEventListener('scroll', updateDropdownPosition, true);\n  \n  // Check localStorage for saved filters\n  loadFilterSettings();\n});\n\nonBeforeUnmount(() => {\n  console.log('Home view unmounting, cleaning up connection');\n  closeConnection();\n  \n  // Remove event listeners\n  if (socket.value) {\n    socket.value.off('online-count');\n    socket.value.off('matched');\n    socket.value.off('direct-connection-established');\n    socket.value.off('partner-disconnected');\n    socket.value.off('chat-message');\n    socket.value.off('error');\n    socket.value.off('voice-offer');\n    socket.value.off('voice-answer');\n    socket.value.off('ice-candidate');\n  }\n\n  document.removeEventListener('click', handleClickOutside);\n  window.removeEventListener('resize', updateDropdownPosition);\n  document.removeEventListener('scroll', updateDropdownPosition, true);\n});\n\n// WebRTC handling methods\nconst handleVoiceOffer = async (data: any) => {\n  console.log('Received voice offer - forwarding to WebRTC service');\n  // All operations are forwarded to the WebRTC service\n  handleOffer(data.offer, data.from);\n};\n\nconst handleVoiceAnswer = async (data: any) => {\n  console.log('Received voice answer - forwarding to WebRTC service');\n  // All operations are forwarded to the WebRTC service\n  handleAnswer(data.answer);\n};\n\nconst processIceCandidateMessage = async (data: any) => {\n  console.log('Received ICE candidate - forwarding to WebRTC service');\n  // All operations are forwarded to the WebRTC service\n  handleIceCandidate(data.candidate);\n};\n\n// WebRTC connection state monitor\nwatch(webRTCConnectionState, (newState, oldState) => {\n  console.log(`[HomeView] WebRTC connection state changed: ${oldState} -> ${newState}`);\n  \n  // Show connection status to the user\n  if (newState === 'connected' && connectionStatus.value === 'matched') {\n    // Don't change the status immediately, first make sure audio is working\n    setTimeout(() => {\n      // Check again that the connection is still connected\n      if (webRTCConnectionState.value === 'connected' && connectionStatus.value === 'matched') {\n        connectionStatus.value = 'connected';\n        connectionError.value = ''; // Clear any previous error messages\n        console.log('[HomeView] Successfully transitioned from matched to connected');\n      }\n    }, 1000); // Short delay to ensure connection stability\n  } else if (newState === 'failed') {\n    // Hide error message initially, show after 1 minute if still not connected\n    connectionError.value = '';\n    setTimeout(() => {\n      if (webRTCConnectionState.value === 'failed' && \n          (connectionStatus.value === 'matched' || connectionStatus.value === 'connected')) {\n        connectionError.value = 'Connection failed. Press \"Next\" to find a new partner.';\n      }\n    }, 60000); // 1 minute delay\n  } else if (newState === 'disconnected') {\n    // Only set error if we were in connected or matched state, but delay showing it\n    if (connectionStatus.value === 'connected' || connectionStatus.value === 'matched') {\n      connectionError.value = '';\n      setTimeout(() => {\n        // Only show error if we're still disconnected after 1 minute\n        if (webRTCConnectionState.value === 'disconnected' && \n            (connectionStatus.value === 'connected' || connectionStatus.value === 'matched')) {\n          connectionError.value = 'Connection lost. Trying to reconnect...';\n        }\n      }, 60000); // 1 minute delay\n    }\n  }\n});\n\n// Close dropdown when clicking outside\nconst vibeDropdownRef = ref<HTMLElement | null>(null);\n\nconst handleClickOutside = (event: MouseEvent) => {\n  const target = event.target as HTMLElement;\n  \n  if (vibeDropdownRef.value && !vibeDropdownRef.value.contains(target)) {\n    showVibeDropdown.value = false;\n  }\n\n  // Close country dropdown menus\n  if (showPreferredDropdown.value) {\n    const preferredBtn = preferredDropdownRef.value;\n    const preferredDropdown = document.querySelector('.preferred-outer');\n    if (preferredBtn && preferredDropdown && \n        !preferredBtn.contains(target) && \n        !preferredDropdown.contains(target)) {\n      showPreferredDropdown.value = false;\n    }\n  }\n  \n  if (showBlockedDropdown.value) {\n    const blockedBtn = blockedDropdownRef.value;\n    const blockedDropdown = document.querySelector('.blocked-outer');\n    if (blockedBtn && blockedDropdown && \n        !blockedBtn.contains(target) && \n        !blockedDropdown.contains(target)) {\n      showBlockedDropdown.value = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Animation for the pulse effect */\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.delay-500 {\n  animation-delay: 0.5s;\n}\n\n.delay-1000 {\n  animation-delay: 1s;\n}\n\n.delay-2000 {\n  animation-delay: 2s;\n}\n\n/* Hide scrollbar but allow scrolling */\n.scrollbar-hide {\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n.scrollbar-hide::-webkit-scrollbar {\n  display: none;  /* Chrome, Safari, Opera */\n}\n\n/* Thin scrollbar style */\n.scrollbar-thin {\n  scrollbar-width: thin;\n}\n.scrollbar-thin::-webkit-scrollbar {\n  width: 3px;\n}\n.scrollbar-thin::-webkit-scrollbar-track {\n  background: transparent;\n}\n.scrollbar-thin::-webkit-scrollbar-thumb {\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n}\n\n/* Flag icon styling */\n.flag-icon {\n  display: inline-block;\n  font-size: 1.1em;\n  line-height: 1;\n}\n\n.dropdown-outer {\n  min-width: 300px; /* عرض ثابت أكبر */\n  width: max-content;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4);\n  animation: fadeIn 0.2s ease-out;\n  border-radius: 0.5rem;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n</style> ","import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\n\nconst router = createRouter({\n  history: createWebHistory(import.meta.env.BASE_URL),\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: HomeView\n    },\n    {\n      path: '/game/:roomId',\n      name: 'game',\n      component: HomeView,\n      props: true\n    }\n  ]\n});\n\nexport default router; ","import './assets/main.css'\r\nimport './index.css'\r\n\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nconst app = createApp(App)\r\n\r\napp.use(router)\r\n\r\napp.mount('#app')\r\n"],"names":["_openBlock","_createElementBlock","_hoisted_1","_createVNode","_unref","RouterView","getApiUrl","socket","ref","userId","isConnected","pingInterval","useSocket","onMounted","initializeSocket","onUnmounted","cleanupSocketListeners","apiUrl","storedUserId","io","setupSocketListeners","startPingInterval","_a","id","_b","attemptNumber","error","reconnect","TURN_CREDENTIAL_EXPIRY","TURN_USERNAME","TURN_PASSWORD","standardRtcConfiguration","turnOnlyRtcConfiguration","fastRtcConfiguration","currentRtcConfig","rtcConfiguration","globalPeerConnection","globalLocalStream","globalRemoteStream","globalConnectionState","globalIsAudioMuted","globalPartnerId","DEBUG","lastConnectionError","failureReason","peerConnectionStats","isNegotiating","isRestartingIce","connectionRetryCount","MAX_CONNECTION_RETRIES","pendingCandidates","connectionMonitorInterval","CONNECTION_MONITOR_INTERVAL","RECONNECT_DELAY","getConnectionStats","stats","report","startStatsCollection","stopStatsCollection","statsTimer","timer","useWebRTC","peerConnection","shallowRef","localStream","remoteStream","connectionState","isAudioMuted","partnerId","initializeLocalStream","audioTracks","track","stream","fallbackError","createPeerConnection","err","pc","event","canSetLocalDescription","startNegotiation","startConnectionMonitoring","updateGlobalState","attemptConnectionRecovery","closeConnection","candidate","tracks","setupConnectionTimeout","createOffer","targetPartnerId","errorMsg","resolve","localMediaStream","i","offer","waitForIceGatheringComplete","checkState","handleOffer","answer","transceiver","handleAnswer","currentState","retryError","toggleMicrophone","audioSender","sender","audioTrack","trackError","fallbackStream","stopConnectionMonitoring","cleanup","data","handleIceCandidate","checkAndFixTracks","senders","localTracks","matchingLocalTrack","receivers","hasAudioReceiver","receiver","t","updateDebugInfo","diagnoseAndFixAudioIssues","foundAudioReceiver","e","transceivers","fixedTransceivers","localAudioTracks","remoteAudioTracks","audioReceivers","audioElements","audioEl","watch","checkConnectionHealth","hasAudioIssues","m","hasCandidatePairIssues","quickTimeout","candidateInfo","_c","diagnosticReport","state","isLocalStorageAvailable","test","useLocalStorage","isAvailable","setItem","key","value","getItem","removeItem","clear","allMessages","currentPartnerId","unreadMessages","isListening","isInitialized","useChat","storage","initializeChatService","setupGlobalSocketListeners","loadAllChats","saveAllChats","newSocket","conversationKey","getConversationKey","setCurrentPartner","sendMessage","text","toPartnerId","timestamp","getMessages","messages","hasUnreadMessages","hasUnread","markAsRead","ids","savedMessages","savedUnread","clearChat","clearAllChats","props","__props","connectionStatusText","computed","getVibeDisplayName","vibe","_hoisted_2","_cache","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_d","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_normalizeClass","_hoisted_22","emit","__emit","isProcessing","toggleMute","audioElement","$emit","currentMessage","messagesContainerRef","scrollToBottom","nextTick","formatTime","newVal","_Fragment","_renderList","message","$event","CONNECTION_TIMEOUT","gameState","board","playerSymbol","partnerSymbol","currentTurn","winner","connectionLostTimeout","lastMoveTime","isMyTurn","makeMove","index","checkWinner","startConnectionTimeout","handleError","winPatterns","pattern","a","b","c","resetGame","newValue","moveIndex","cell","selectedGame","errorMessage","isFirstPlayer","gameRoomId","partnerReady","debugInfo","logDebugInfo","msg","selectGame","gameType","userIds","closeGame","handleGameError","_e","isOpen","_createBlock","TicTacToe","selectedAmount","selectAmount","amount","openPayPal","stars","generateStars","newStars","star","_normalizeStyle","maxReconnectAttempts","volume","isPlaying","reconnectAttempts","hasRemoteStream","connectAudioStream","newStream","tryPlayAudio","muted","newState","reconnectStream","newPartnerId","handleVisibilityChange","startAudioCheck","onBeforeUnmount","stopAudioCheck","audioCheckInterval","hasTracks","delay","connectionStatus","partnerInfo","connectionError","isMuted","isChatOpen","isGamesOpen","isDonationOpen","isHistoryOpen","isFiltersOpen","onlineCount","dailyConnections","autoReconnect","chatMessages","callHistory","selectedVibe","showVibeDropdown","preferredCountries","blockedCountries","showPreferredDropdown","showBlockedDropdown","vibes","countries","loadCountries","response","userLocation","cosmicQuotes","currentQuote","socketService","webRTCConnectionState","chat","route","useRoute","newRoomId","availableCountriesForPreferred","availableCountriesForBlocked","findNext","toggleChat","sendChatMessage","game","addPreferredCountry","countryCode","removePreferredCountry","addBlockedCountry","removeBlockedCountry","clearFilters","applyFilters","saveFilterSettings","restartMatching","getCountryFlag","country","getCountryName","toggleVibeDropdown","selectVibe","getVibeEmoji","v","getVibeText","preferredDropdownRef","blockedDropdownRef","updateDropdownPosition","preferredDropdownRect","blockedDropdownRect","preferredOuter","blockedOuter","togglePreferredDropdown","toggleBlockedDropdown","loadFilterSettings","savedPreferred","savedBlocked","savedPreferredCountries","savedBlockedCountries","locationData","count","handleVoiceOffer","handleVoiceAnswer","processIceCandidateMessage","handleClickOutside","oldState","vibeDropdownRef","target","preferredBtn","preferredDropdown","blockedBtn","blockedDropdown","Starfield","ConnectionCard","ControlButtons","_hoisted_23","call","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_createTextVNode","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_54","_hoisted_55","ChatModal","GamesModal","DonationModal","_hoisted_56","AudioOutput","router","createRouter","createWebHistory","HomeView","app","createApp","App"],"mappings":"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"}